routine quicksort;

globals:
    var list[10]: int;

procedures:

    proc partition (low: int, high: int): int {
        locals: 
            var pivot: int;
            var i: int;
            var j: int;
            var temp: int; 

        instructions:
            pivot = list[high];
            i = low - 1;
            j = low;
            repeat (j < high) {
                if (list[j] < pivot or list[j] == pivot) {
                    i = i + 1;
                    temp = list[i];
                    list[i] = list[j];
                    list[j] = temp;
                }
                j = j + 1;
            } 
            temp = list[i + 1]; 
            list[i + 1] = list[high];
            list[high] = temp;

            return i + 1;
    }

    proc quicksort(low: int, high: int): void {
        locals:
            var partition_index: int;
        
        instructions: 
            if (low < high) {
                partition_index = partition(low, high);
                quicksort(low, partition_index - 1);
                quicksort(partition_index + 1, high);
            }
    }

begin: [
    locals:
        var idx: int;
        var list_size: int;

    instructions:
        list_size = 10;
        list[0] = -10;
        list[1] = 6;
        list[2] = 1;
        list[3] = 5;
        list[4] = 2;
        list[5] = 4;
        list[6] = 8;
        list[7] = 7;
        list[8] = 3;
        list[9] = 9;

        quicksort(0, list_size - 1);
        
        idx = 0;
        repeat (idx < list_size) {
            write list[idx];
            idx = idx + 1;
        }
        
]
