
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND ASSIGN BEGIN COLON COMMA CONST_FLOAT CONST_INT CONST_TEXT CORRELATION DF DFREAD DIFFERENT DIV DOT DPLOT ELSE EQUAL FLOAT GLOBALS GTHAN HOMERO ID IF INSTRUCTIONS INT KURTOSIS LBRACKET LOCALS LPAREN LSQBRACKET LTHAN MARGE MEAN MEDIAN MODE MUL NOT OR PLOT PROC PROCEDURES RBRACKET READ REPEAT RETURN ROUTINE RPAREN RSQBRACKET SEMICOLON SIMMETRY STD SUB VAR VARIANCE VOID WRITE\n    routine : ROUTINE ID SEMICOLON GLOBALS COLON var_declarations PROCEDURES COLON function_declarations BEGIN COLON LSQBRACKET LOCALS COLON var_declarations INSTRUCTIONS COLON statements RSQBRACKET\n    \n    var_declarations : VAR simple_declaration var_declarations\n                     | VAR array_declaration var_declarations\n                     | VAR matrix_declaration var_declarations\n                     | empty\n    \n    simple_declaration : ID COLON var_type SEMICOLON \n    \n    array_declaration : ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON \n    \n    matrix_declaration : ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON\n    \n    var_type : type\n             | DF\n    \n    function_declarations : PROC ID LPAREN params RPAREN COLON func_type LBRACKET LOCALS COLON var_declarations INSTRUCTIONS COLON statements RBRACKET function_declarations\n                          | PROC ID LPAREN params RPAREN COLON func_type LBRACKET LOCALS COLON var_declarations INSTRUCTIONS COLON statements return SEMICOLON RBRACKET function_declarations\n                          | empty\n    \n    return : RETURN expression\n    \n    func_type : type\n              | VOID\n    \n    params : type ID params\n           | COMMA type ID params\n           | empty\n    \n    statements : write SEMICOLON statements\n               | read SEMICOLON statements\n               | var_assignment SEMICOLON statements\n               | condition SEMICOLON statements\n               | loop SEMICOLON statements\n               | function_call SEMICOLON statements\n               | special_function_call SEMICOLON statements\n               | empty\n    \n    write : WRITE write_params0\n    \n    write_params0 : expression write_params1\n                  | CONST_TEXT write_params1\n    \n    write_params1 : COMMA expression write_params1\n                  | COMMA CONST_TEXT write_params1\n                  | empty\n    \n    read : READ ID\n    \n    var_assignment : ID ASSIGN expression\n                   | ID LSQBRACKET expression RSQBRACKET ASSIGN expression\n                   | ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression\n    \n    condition : IF LPAREN hyper_expression RPAREN LBRACKET statements RBRACKET\n              | IF LPAREN hyper_expression RPAREN LBRACKET statements RBRACKET ELSE LBRACKET statements RBRACKET    \n    \n    loop : REPEAT LPAREN hyper_expression RPAREN LBRACKET statements RBRACKET\n    \n    function_call : ID LPAREN call_params0 RPAREN \n    \n    call_params0 : expression call_params1\n                 | empty\n    \n    call_params1 : COMMA expression call_params1\n                 | empty\n    \n    special_function_call : MEAN LPAREN call_params0 RPAREN\n                     | MEDIAN LPAREN call_params0 RPAREN\n                     | MODE LPAREN call_params0 RPAREN\n                     | STD LPAREN call_params0 RPAREN\n                     | KURTOSIS LPAREN call_params0 RPAREN\n                     | PLOT LPAREN call_params0 RPAREN\n                     | DPLOT LPAREN call_params0 RPAREN\n                     | VARIANCE LPAREN call_params0 RPAREN\n                     | SIMMETRY LPAREN call_params0 RPAREN\n                     | CORRELATION LPAREN call_params0 RPAREN\n                     | DFREAD LPAREN CONST_TEXT RPAREN\n                     | HOMERO\n                     | MARGE\n    \n    hyper_expression : hyper_expression AND hyper_expression  \n                     | hyper_expression OR hyper_expression\n                     | super_expression\n    \n    super_expression : super_expression LTHAN super_expression  \n                     | super_expression GTHAN super_expression\n                     | super_expression EQUAL super_expression\n                     | super_expression DIFFERENT super_expression\n                     | expression\n    \n    expression : expression ADD expression  \n               | expression SUB expression\n               | term\n    \n    term : term MUL term\n         | term DIV term\n         | factor\n    \n    factor : ID\n           | array_access\n           | matrix_access\n           | LPAREN expression RPAREN\n           | CONST_INT\n           | CONST_FLOAT\n           | function_call\n           | special_function_call\n    \n    array_access : ID LSQBRACKET expression RSQBRACKET\n    \n    matrix_access : ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET\n    \n    type : INT\n         | FLOAT\n    \n    empty :\n    '
    
_lr_action_items = {'ROUTINE':([0,],[2,]),'$end':([1,98,],[0,-1,]),'ID':([2,8,22,27,28,40,48,65,77,78,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[3,14,31,-83,-84,47,54,67,111,119,111,111,111,67,67,67,67,67,67,67,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,67,111,111,67,67,111,111,111,67,]),'SEMICOLON':([3,24,25,26,27,28,44,61,69,70,71,72,73,74,75,92,93,106,107,108,109,110,111,112,113,115,116,117,118,119,134,146,150,151,173,177,178,179,180,181,182,184,193,194,195,196,197,198,199,200,201,202,203,208,209,210,221,227,231,232,235,237,240,244,],[4,32,-9,-10,-83,-84,50,64,99,100,101,102,103,104,105,-57,-58,-28,-85,-85,-69,-72,-73,-74,-75,-77,-78,-79,-80,-34,-35,-29,-33,-30,-41,-67,-68,-85,-85,-70,-71,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-31,-32,-81,-36,234,-38,-40,-14,-82,-37,-39,]),'GLOBALS':([4,],[5,]),'COLON':([5,10,14,30,33,45,46,49,62,66,171,],[6,15,19,34,37,51,52,55,65,94,204,]),'VAR':([6,11,12,13,32,50,51,64,94,],[8,8,8,8,-6,-7,8,-8,8,]),'PROCEDURES':([6,7,9,11,12,13,16,17,18,32,50,64,],[-85,10,-5,-85,-85,-85,-2,-3,-4,-6,-7,-8,]),'INSTRUCTIONS':([9,11,12,13,16,17,18,32,50,51,56,64,94,133,],[-5,-85,-85,-85,-2,-3,-4,-6,-7,-85,62,-8,-85,171,]),'LSQBRACKET':([14,33,34,67,111,172,210,],[20,36,38,96,154,205,223,]),'PROC':([15,226,239,],[22,22,22,]),'BEGIN':([15,21,23,226,233,239,242,],[-85,30,-13,-85,-11,-85,-12,]),'DF':([19,],[26,]),'INT':([19,35,37,41,47,52,54,55,],[27,27,27,27,27,27,27,27,]),'FLOAT':([19,35,37,41,47,52,54,55,],[28,28,28,28,28,28,28,28,]),'CONST_INT':([20,36,77,95,96,97,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,205,206,223,228,236,],[29,43,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'LBRACKET':([27,28,57,58,59,185,192,238,],[-83,-84,63,-15,-16,211,218,241,]),'RSQBRACKET':([29,43,65,68,76,92,93,99,100,101,102,103,104,105,109,110,111,112,113,115,116,117,118,135,139,140,141,142,143,144,145,173,177,178,181,182,183,184,193,194,195,196,197,198,199,200,201,202,203,210,220,230,237,],[33,49,-85,98,-27,-57,-58,-85,-85,-85,-85,-85,-85,-85,-69,-72,-73,-74,-75,-77,-78,-79,-80,172,-20,-21,-22,-23,-24,-25,-26,-41,-67,-68,-70,-71,210,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-81,229,237,-82,]),'LPAREN':([31,67,77,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,97,111,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,205,206,223,228,236,],[35,97,114,120,121,122,123,124,125,126,127,128,129,130,131,132,114,114,114,97,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'COMMA':([35,47,54,92,93,107,108,109,110,111,112,113,115,116,117,118,137,173,177,178,179,180,181,182,184,193,194,195,196,197,198,199,200,201,202,203,207,210,237,],[41,41,41,-57,-58,149,149,-69,-72,-73,-74,-75,-77,-78,-79,-80,175,-41,-67,-68,149,149,-70,-71,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,175,-81,-82,]),'RPAREN':([35,39,42,47,53,54,60,92,93,97,109,110,111,112,113,115,116,117,118,122,123,124,125,126,127,128,129,130,131,136,137,138,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,173,174,176,177,178,181,182,184,193,194,195,196,197,198,199,200,201,202,203,207,210,212,213,214,215,216,217,222,237,],[-85,46,-19,-85,-17,-85,-18,-57,-58,-85,-69,-72,-73,-74,-75,-77,-78,-79,-80,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,173,-85,-43,184,185,-61,-66,192,193,194,195,196,197,198,199,200,201,202,203,-41,-42,-45,-67,-68,-70,-71,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-85,-81,-59,-60,-62,-63,-64,-65,-44,-82,]),'LOCALS':([38,63,],[45,66,]),'VOID':([52,],[59,]),'WRITE':([65,99,100,101,102,103,104,105,204,211,218,241,],[77,77,77,77,77,77,77,77,77,77,77,77,]),'READ':([65,99,100,101,102,103,104,105,204,211,218,241,],[78,78,78,78,78,78,78,78,78,78,78,78,]),'IF':([65,99,100,101,102,103,104,105,204,211,218,241,],[79,79,79,79,79,79,79,79,79,79,79,79,]),'REPEAT':([65,99,100,101,102,103,104,105,204,211,218,241,],[80,80,80,80,80,80,80,80,80,80,80,80,]),'MEAN':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'MEDIAN':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'MODE':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'STD':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'KURTOSIS':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'PLOT':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'DPLOT':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'VARIANCE':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'SIMMETRY':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'CORRELATION':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'DFREAD':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'HOMERO':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'MARGE':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'ASSIGN':([67,172,229,],[95,206,236,]),'RBRACKET':([76,99,100,101,102,103,104,105,139,140,141,142,143,144,145,204,211,218,219,224,225,234,241,243,],[-27,-85,-85,-85,-85,-85,-85,-85,-20,-21,-22,-23,-24,-25,-26,-85,-85,-85,226,231,232,239,-85,244,]),'RETURN':([76,99,100,101,102,103,104,105,139,140,141,142,143,144,145,204,219,],[-27,-85,-85,-85,-85,-85,-85,-85,-20,-21,-22,-23,-24,-25,-26,-85,228,]),'CONST_TEXT':([77,132,149,],[108,170,180,]),'CONST_FLOAT':([77,95,96,97,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,205,206,223,228,236,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'MUL':([92,93,109,110,111,112,113,115,116,117,118,173,181,182,184,193,194,195,196,197,198,199,200,201,202,203,210,237,],[-57,-58,152,-72,-73,-74,-75,-77,-78,-79,-80,-41,152,152,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-81,-82,]),'DIV':([92,93,109,110,111,112,113,115,116,117,118,173,181,182,184,193,194,195,196,197,198,199,200,201,202,203,210,237,],[-57,-58,153,-72,-73,-74,-75,-77,-78,-79,-80,-41,153,153,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-81,-82,]),'ADD':([92,93,107,109,110,111,112,113,115,116,117,118,134,135,137,155,158,173,177,178,179,181,182,183,184,193,194,195,196,197,198,199,200,201,202,203,207,210,220,221,230,235,237,240,],[-57,-58,147,-69,-72,-73,-74,-75,-77,-78,-79,-80,147,147,147,147,147,-41,147,147,147,-70,-71,147,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,147,-81,147,147,147,147,-82,147,]),'SUB':([92,93,107,109,110,111,112,113,115,116,117,118,134,135,137,155,158,173,177,178,179,181,182,183,184,193,194,195,196,197,198,199,200,201,202,203,207,210,220,221,230,235,237,240,],[-57,-58,148,-69,-72,-73,-74,-75,-77,-78,-79,-80,148,148,148,148,148,-41,148,148,148,-70,-71,148,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,148,-81,148,148,148,148,-82,148,]),'LTHAN':([92,93,109,110,111,112,113,115,116,117,118,157,158,173,177,178,181,182,184,193,194,195,196,197,198,199,200,201,202,203,210,214,215,216,217,237,],[-57,-58,-69,-72,-73,-74,-75,-77,-78,-79,-80,188,-66,-41,-67,-68,-70,-71,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-81,188,188,188,188,-82,]),'GTHAN':([92,93,109,110,111,112,113,115,116,117,118,157,158,173,177,178,181,182,184,193,194,195,196,197,198,199,200,201,202,203,210,214,215,216,217,237,],[-57,-58,-69,-72,-73,-74,-75,-77,-78,-79,-80,189,-66,-41,-67,-68,-70,-71,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-81,189,189,189,189,-82,]),'EQUAL':([92,93,109,110,111,112,113,115,116,117,118,157,158,173,177,178,181,182,184,193,194,195,196,197,198,199,200,201,202,203,210,214,215,216,217,237,],[-57,-58,-69,-72,-73,-74,-75,-77,-78,-79,-80,190,-66,-41,-67,-68,-70,-71,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-81,190,190,190,190,-82,]),'DIFFERENT':([92,93,109,110,111,112,113,115,116,117,118,157,158,173,177,178,181,182,184,193,194,195,196,197,198,199,200,201,202,203,210,214,215,216,217,237,],[-57,-58,-69,-72,-73,-74,-75,-77,-78,-79,-80,191,-66,-41,-67,-68,-70,-71,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-81,191,191,191,191,-82,]),'AND':([92,93,109,110,111,112,113,115,116,117,118,156,157,158,159,173,177,178,181,182,184,193,194,195,196,197,198,199,200,201,202,203,210,212,213,214,215,216,217,237,],[-57,-58,-69,-72,-73,-74,-75,-77,-78,-79,-80,186,-61,-66,186,-41,-67,-68,-70,-71,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-81,186,186,-62,-63,-64,-65,-82,]),'OR':([92,93,109,110,111,112,113,115,116,117,118,156,157,158,159,173,177,178,181,182,184,193,194,195,196,197,198,199,200,201,202,203,210,212,213,214,215,216,217,237,],[-57,-58,-69,-72,-73,-74,-75,-77,-78,-79,-80,187,-61,-66,187,-41,-67,-68,-70,-71,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-81,187,187,-62,-63,-64,-65,-82,]),'ELSE':([231,],[238,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'routine':([0,],[1,]),'var_declarations':([6,11,12,13,51,94,],[7,16,17,18,56,133,]),'empty':([6,11,12,13,15,35,47,51,54,65,94,97,99,100,101,102,103,104,105,107,108,122,123,124,125,126,127,128,129,130,131,137,179,180,204,207,211,218,226,239,241,],[9,9,9,9,23,42,42,9,42,76,9,138,76,76,76,76,76,76,76,150,150,138,138,138,138,138,138,138,138,138,138,176,150,150,76,176,76,76,23,23,76,]),'simple_declaration':([8,],[11,]),'array_declaration':([8,],[12,]),'matrix_declaration':([8,],[13,]),'function_declarations':([15,226,239,],[21,233,242,]),'var_type':([19,],[24,]),'type':([19,35,37,41,47,52,54,55,],[25,40,44,48,40,58,40,61,]),'params':([35,47,54,],[39,53,60,]),'func_type':([52,],[57,]),'statements':([65,99,100,101,102,103,104,105,204,211,218,241,],[68,139,140,141,142,143,144,145,219,224,225,243,]),'write':([65,99,100,101,102,103,104,105,204,211,218,241,],[69,69,69,69,69,69,69,69,69,69,69,69,]),'read':([65,99,100,101,102,103,104,105,204,211,218,241,],[70,70,70,70,70,70,70,70,70,70,70,70,]),'var_assignment':([65,99,100,101,102,103,104,105,204,211,218,241,],[71,71,71,71,71,71,71,71,71,71,71,71,]),'condition':([65,99,100,101,102,103,104,105,204,211,218,241,],[72,72,72,72,72,72,72,72,72,72,72,72,]),'loop':([65,99,100,101,102,103,104,105,204,211,218,241,],[73,73,73,73,73,73,73,73,73,73,73,73,]),'function_call':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[74,117,117,117,117,74,74,74,74,74,74,74,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,74,117,117,74,74,117,117,117,74,]),'special_function_call':([65,77,95,96,97,99,100,101,102,103,104,105,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,204,205,206,211,218,223,228,236,241,],[75,118,118,118,118,75,75,75,75,75,75,75,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,75,118,118,75,75,118,118,118,75,]),'write_params0':([77,],[106,]),'expression':([77,95,96,97,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,154,175,186,187,188,189,190,191,205,206,223,228,236,],[107,134,135,137,155,158,158,137,137,137,137,137,137,137,137,137,137,177,178,179,183,207,158,158,158,158,158,158,220,221,230,235,240,]),'term':([77,95,96,97,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,205,206,223,228,236,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,181,182,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'factor':([77,95,96,97,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,205,206,223,228,236,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'array_access':([77,95,96,97,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,205,206,223,228,236,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'matrix_access':([77,95,96,97,114,120,121,122,123,124,125,126,127,128,129,130,131,147,148,149,152,153,154,175,186,187,188,189,190,191,205,206,223,228,236,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'call_params0':([97,122,123,124,125,126,127,128,129,130,131,],[136,160,161,162,163,164,165,166,167,168,169,]),'write_params1':([107,108,179,180,],[146,151,208,209,]),'hyper_expression':([120,121,186,187,],[156,159,212,213,]),'super_expression':([120,121,186,187,188,189,190,191,],[157,157,157,157,214,215,216,217,]),'call_params1':([137,207,],[174,222,]),'return':([219,],[227,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> routine","S'",1,None,None,None),
  ('routine -> ROUTINE ID SEMICOLON GLOBALS COLON var_declarations PROCEDURES COLON function_declarations BEGIN COLON LSQBRACKET LOCALS COLON var_declarations INSTRUCTIONS COLON statements RSQBRACKET','routine',19,'p_routine','parser.py',9),
  ('var_declarations -> VAR simple_declaration var_declarations','var_declarations',3,'p_var_declarations','parser.py',15),
  ('var_declarations -> VAR array_declaration var_declarations','var_declarations',3,'p_var_declarations','parser.py',16),
  ('var_declarations -> VAR matrix_declaration var_declarations','var_declarations',3,'p_var_declarations','parser.py',17),
  ('var_declarations -> empty','var_declarations',1,'p_var_declarations','parser.py',18),
  ('simple_declaration -> ID COLON var_type SEMICOLON','simple_declaration',4,'p_simple_declaration','parser.py',23),
  ('array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON','array_declaration',7,'p_array_declaration','parser.py',28),
  ('matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON','matrix_declaration',10,'p_matrix_declaration','parser.py',33),
  ('var_type -> type','var_type',1,'p_var_type','parser.py',38),
  ('var_type -> DF','var_type',1,'p_var_type','parser.py',39),
  ('function_declarations -> PROC ID LPAREN params RPAREN COLON func_type LBRACKET LOCALS COLON var_declarations INSTRUCTIONS COLON statements RBRACKET function_declarations','function_declarations',16,'p_function_declarations','parser.py',44),
  ('function_declarations -> PROC ID LPAREN params RPAREN COLON func_type LBRACKET LOCALS COLON var_declarations INSTRUCTIONS COLON statements return SEMICOLON RBRACKET function_declarations','function_declarations',18,'p_function_declarations','parser.py',45),
  ('function_declarations -> empty','function_declarations',1,'p_function_declarations','parser.py',46),
  ('return -> RETURN expression','return',2,'p_return','parser.py',51),
  ('func_type -> type','func_type',1,'p_func_type','parser.py',56),
  ('func_type -> VOID','func_type',1,'p_func_type','parser.py',57),
  ('params -> type ID params','params',3,'p_params','parser.py',62),
  ('params -> COMMA type ID params','params',4,'p_params','parser.py',63),
  ('params -> empty','params',1,'p_params','parser.py',64),
  ('statements -> write SEMICOLON statements','statements',3,'p_statements','parser.py',69),
  ('statements -> read SEMICOLON statements','statements',3,'p_statements','parser.py',70),
  ('statements -> var_assignment SEMICOLON statements','statements',3,'p_statements','parser.py',71),
  ('statements -> condition SEMICOLON statements','statements',3,'p_statements','parser.py',72),
  ('statements -> loop SEMICOLON statements','statements',3,'p_statements','parser.py',73),
  ('statements -> function_call SEMICOLON statements','statements',3,'p_statements','parser.py',74),
  ('statements -> special_function_call SEMICOLON statements','statements',3,'p_statements','parser.py',75),
  ('statements -> empty','statements',1,'p_statements','parser.py',76),
  ('write -> WRITE write_params0','write',2,'p_write','parser.py',81),
  ('write_params0 -> expression write_params1','write_params0',2,'p_write_params0','parser.py',86),
  ('write_params0 -> CONST_TEXT write_params1','write_params0',2,'p_write_params0','parser.py',87),
  ('write_params1 -> COMMA expression write_params1','write_params1',3,'p_write_params1','parser.py',92),
  ('write_params1 -> COMMA CONST_TEXT write_params1','write_params1',3,'p_write_params1','parser.py',93),
  ('write_params1 -> empty','write_params1',1,'p_write_params1','parser.py',94),
  ('read -> READ ID','read',2,'p_read','parser.py',99),
  ('var_assignment -> ID ASSIGN expression','var_assignment',3,'p_var_assignment','parser.py',104),
  ('var_assignment -> ID LSQBRACKET expression RSQBRACKET ASSIGN expression','var_assignment',6,'p_var_assignment','parser.py',105),
  ('var_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression','var_assignment',9,'p_var_assignment','parser.py',106),
  ('condition -> IF LPAREN hyper_expression RPAREN LBRACKET statements RBRACKET','condition',7,'p_condition','parser.py',111),
  ('condition -> IF LPAREN hyper_expression RPAREN LBRACKET statements RBRACKET ELSE LBRACKET statements RBRACKET','condition',11,'p_condition','parser.py',112),
  ('loop -> REPEAT LPAREN hyper_expression RPAREN LBRACKET statements RBRACKET','loop',7,'p_loop','parser.py',117),
  ('function_call -> ID LPAREN call_params0 RPAREN','function_call',4,'p_function_call','parser.py',122),
  ('call_params0 -> expression call_params1','call_params0',2,'p_call_params0','parser.py',127),
  ('call_params0 -> empty','call_params0',1,'p_call_params0','parser.py',128),
  ('call_params1 -> COMMA expression call_params1','call_params1',3,'p_call_params1','parser.py',133),
  ('call_params1 -> empty','call_params1',1,'p_call_params1','parser.py',134),
  ('special_function_call -> MEAN LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',139),
  ('special_function_call -> MEDIAN LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',140),
  ('special_function_call -> MODE LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',141),
  ('special_function_call -> STD LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',142),
  ('special_function_call -> KURTOSIS LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',143),
  ('special_function_call -> PLOT LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',144),
  ('special_function_call -> DPLOT LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',145),
  ('special_function_call -> VARIANCE LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',146),
  ('special_function_call -> SIMMETRY LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',147),
  ('special_function_call -> CORRELATION LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',148),
  ('special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN','special_function_call',4,'p_special_function_call','parser.py',149),
  ('special_function_call -> HOMERO','special_function_call',1,'p_special_function_call','parser.py',150),
  ('special_function_call -> MARGE','special_function_call',1,'p_special_function_call','parser.py',151),
  ('hyper_expression -> hyper_expression AND hyper_expression','hyper_expression',3,'p_hyper_expression','parser.py',156),
  ('hyper_expression -> hyper_expression OR hyper_expression','hyper_expression',3,'p_hyper_expression','parser.py',157),
  ('hyper_expression -> super_expression','hyper_expression',1,'p_hyper_expression','parser.py',158),
  ('super_expression -> super_expression LTHAN super_expression','super_expression',3,'p_super_expression','parser.py',163),
  ('super_expression -> super_expression GTHAN super_expression','super_expression',3,'p_super_expression','parser.py',164),
  ('super_expression -> super_expression EQUAL super_expression','super_expression',3,'p_super_expression','parser.py',165),
  ('super_expression -> super_expression DIFFERENT super_expression','super_expression',3,'p_super_expression','parser.py',166),
  ('super_expression -> expression','super_expression',1,'p_super_expression','parser.py',167),
  ('expression -> expression ADD expression','expression',3,'p_expression','parser.py',172),
  ('expression -> expression SUB expression','expression',3,'p_expression','parser.py',173),
  ('expression -> term','expression',1,'p_expression','parser.py',174),
  ('term -> term MUL term','term',3,'p_term','parser.py',179),
  ('term -> term DIV term','term',3,'p_term','parser.py',180),
  ('term -> factor','term',1,'p_term','parser.py',181),
  ('factor -> ID','factor',1,'p_factor','parser.py',186),
  ('factor -> array_access','factor',1,'p_factor','parser.py',187),
  ('factor -> matrix_access','factor',1,'p_factor','parser.py',188),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',189),
  ('factor -> CONST_INT','factor',1,'p_factor','parser.py',190),
  ('factor -> CONST_FLOAT','factor',1,'p_factor','parser.py',191),
  ('factor -> function_call','factor',1,'p_factor','parser.py',192),
  ('factor -> special_function_call','factor',1,'p_factor','parser.py',193),
  ('array_access -> ID LSQBRACKET expression RSQBRACKET','array_access',4,'p_array_access','parser.py',198),
  ('matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET','matrix_access',7,'p_matrix_access','parser.py',203),
  ('type -> INT','type',1,'p_type','parser.py',208),
  ('type -> FLOAT','type',1,'p_type','parser.py',209),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',214),
]
