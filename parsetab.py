
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND ASSIGN BEGIN COLON COMMA CONST_FLOAT CONST_INT CONST_TEXT CORRELATION DF DFREAD DIFFERENT DIV DPLOT ELSE EQUAL FLOAT GLOBALS GTHAN HOMERO ID IF INSTRUCTIONS INT KURTOSIS LBRACKET LOCALS LPAREN LSQBRACKET LTHAN MARGE MEAN MEDIAN MODE MUL NOT OR PLOT PROC PROCEDURES RBRACKET READ REPEAT RETURN ROUTINE RPAREN RSQBRACKET SEMICOLON SIMMETRY STD SUB VAR VARIANCE VOID WRITE\n    routine : routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET\n    \n    routine_init : ROUTINE\n    \n    fill_main_jump : \n    \n    global_vars_block : GLOBALS COLON var_declarations\n                      | empty\n    \n    local_vars_block : LOCALS COLON var_declarations\n                     | empty\n    \n    instructions_block : INSTRUCTIONS COLON statements\n                       | empty\n    \n    global_scope_init : \n    \n    local_scope_init : \n    \n    var_declarations : VAR simple_declaration var_declarations\n                     | VAR array_declaration var_declarations\n                     | VAR matrix_declaration var_declarations\n                     | empty\n    \n    simple_declaration : ID COLON var_type SEMICOLON \n    \n    array_declaration : ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON \n    \n    matrix_declaration : ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON\n    \n    var_type : type\n             | DF\n    \n    function_block : PROCEDURES COLON function_declarations\n                   | empty\n    \n    function_declarations : PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations\n                          | PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations\n                          | empty\n    \n    function_rbracket : RBRACKET\n    \n    proc_scope_init : \n    \n    store_curr_ip : \n    \n    set_return_type : \n    \n    return : RETURN\n    \n    return_semicolon : SEMICOLON\n    \n    func_type : type\n    \n    params0 : param params1\n            | empty\n    \n    params1 : COMMA param params1\n            | empty\n    \n    param : ID COLON type\n    \n    statements : write SEMICOLON statements\n               | read SEMICOLON statements\n               | var_assignment SEMICOLON statements\n               | condition statements\n               | loop statements\n               | function_call SEMICOLON statements\n               | special_function_call SEMICOLON statements\n               | empty\n    \n    write : WRITE write_params0\n    \n    write_params0 : write_operator expression produce_write_quad write_params1\n                  | write_operator const_text produce_write_quad write_params1\n    \n    write_params1 : COMMA write_operator expression produce_write_quad write_params1\n                  | COMMA write_operator const_text produce_write_quad write_params1\n                  | empty\n    \n    const_text : CONST_TEXT\n    \n    write_operator : \n    \n    produce_write_quad : \n    \n    read : READ push_operator identifier\n    \n    var_assignment : simple_assignment\n                   | array_assignment\n    \n    simple_assignment : identifier ASSIGN push_operator expression\n    \n    array_assignment : array_access ASSIGN push_operator expression\n    \n    condition : IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump\n              | IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump   \n    \n    cond_lparen : LPAREN\n    \n    cond_rparen : RPAREN\n    \n    fill_pending_jump : \n    \n    else : ELSE\n    \n    loop : repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump\n    \n    repeat : REPEAT\n    \n    fill_returning_jump : \n    \n    function_call : ID function_call_check function_call_lparen call_params0 function_call_rparen \n    \n    function_call_check : \n    \n    function_call_lparen : LPAREN\n    \n    function_call_rparen : RPAREN\n    \n    call_params0 : hyper_expression handle_call_param call_params1\n                 | empty\n    \n    call_params1 : COMMA hyper_expression handle_call_param call_params1\n                 | empty\n    \n    handle_call_param : \n    \n    special_function_call : MEAN LPAREN call_params0 RPAREN\n                     | MEDIAN LPAREN call_params0 RPAREN\n                     | MODE LPAREN call_params0 RPAREN\n                     | STD LPAREN call_params0 RPAREN\n                     | KURTOSIS LPAREN call_params0 RPAREN\n                     | PLOT LPAREN call_params0 RPAREN\n                     | DPLOT LPAREN call_params0 RPAREN\n                     | VARIANCE LPAREN call_params0 RPAREN\n                     | SIMMETRY LPAREN call_params0 RPAREN\n                     | CORRELATION LPAREN call_params0 RPAREN\n                     | DFREAD LPAREN CONST_TEXT RPAREN\n                     | HOMERO\n                     | MARGE\n    \n    hyper_expression : hyper_expression AND push_operator hyper_expression\n                     | hyper_expression OR push_operator hyper_expression\n                     | super_expression produce_hyperexp_quad\n    \n    super_expression : super_expression LTHAN push_operator super_expression\n                     | super_expression GTHAN push_operator super_expression\n                     | super_expression EQUAL push_operator super_expression\n                     | super_expression DIFFERENT push_operator super_expression\n                     | expression produce_superexp_quad\n    \n    expression : expression ADD push_operator expression\n               | expression SUB push_operator expression \n               | term produce_exp_quad\n    \n    term : term MUL push_operator term\n         | term DIV push_operator term\n         | factor produce_term_quad\n    \n    push_operator : \n    \n    produce_hyperexp_quad : \n    \n    produce_superexp_quad : \n    \n    produce_exp_quad : \n    \n    produce_term_quad : \n    \n    factor : identifier\n           | const_int\n           | const_float\n           | LPAREN push_cap expression RPAREN pop_cap\n           | array_access\n           | matrix_access\n           | function_call\n           | special_function_call\n    \n    identifier : ID\n    \n    const_int : CONST_INT\n    \n    const_float : CONST_FLOAT\n    \n    push_cap : \n    \n    pop_cap : \n    \n    array_access : identifier lsqbracket expression array_rsqbracket\n    \n     matrix_access : identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2\n     \n    lsqbracket : LSQBRACKET\n    \n    array_rsqbracket : RSQBRACKET\n    \n    matrix_rsqbracket_1 : RSQBRACKET\n    \n    matrix_lsqbracket_2 : LSQBRACKET\n    \n    matrix_rsqbracket_2 : RSQBRACKET\n    \n    type : INT\n         | FLOAT\n    \n    empty : \n    '
    
_lr_action_items = {'ROUTINE':([0,],[3,]),'$end':([1,263,],[0,-1,]),'ID':([2,3,17,19,27,28,32,33,61,63,64,65,68,69,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,195,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,251,255,256,258,259,270,273,284,292,295,302,303,],[4,-2,39,58,39,39,-53,-105,98,39,39,39,39,39,117,121,-105,117,-125,117,-62,117,117,117,117,117,117,117,117,117,117,117,-105,-121,117,117,-71,117,-105,-105,-105,-105,117,117,-105,-105,-105,-105,-105,-105,223,-53,117,117,117,117,39,117,117,117,117,117,117,39,117,117,223,117,-128,-64,-68,-60,-66,39,-64,-61,117,-30,]),'SEMICOLON':([4,24,25,26,29,30,35,36,51,52,70,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,144,145,146,147,148,152,155,156,159,162,163,177,179,180,181,182,183,184,185,186,187,188,189,196,198,201,214,215,228,229,230,231,233,234,245,253,254,257,267,268,280,281,282,283,285,305,],[5,63,64,65,68,69,-56,-57,-89,-90,-46,-54,-54,-108,-52,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,-55,-118,190,-19,-20,-130,-131,-132,-132,-101,-104,-58,-123,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-59,-47,-51,-48,-69,-72,-99,-100,-102,-103,-126,-122,262,-54,-54,-113,-132,-132,-49,-50,-124,-129,289,307,]),'GLOBALS':([5,6,],[-10,8,]),'INSTRUCTIONS':([5,6,7,9,13,18,20,55,56,57,92,93,94,97,150,190,192,194,221,222,247,262,289,290,291,293,294,296,297,],[-10,-132,11,-5,-132,-4,-15,-132,-132,-132,-12,-13,-14,-11,-132,-16,-3,-7,11,-132,-6,-17,-18,-132,-132,-28,-28,11,11,]),'PROCEDURES':([5,6,7,9,10,12,13,17,18,20,23,27,28,31,55,56,57,63,64,65,66,67,68,69,92,93,94,99,100,101,102,103,190,258,259,262,270,273,289,292,295,],[-10,-132,-132,-5,15,-9,-132,-132,-4,-15,-8,-132,-132,-45,-132,-132,-132,-132,-132,-132,-41,-42,-132,-132,-12,-13,-14,-38,-39,-40,-43,-44,-16,-64,-68,-17,-60,-66,-18,-64,-61,]),'BEGIN':([5,6,7,9,10,12,13,14,16,17,18,20,22,23,27,28,31,55,56,57,60,62,63,64,65,66,67,68,69,92,93,94,99,100,101,102,103,190,258,259,262,270,273,289,292,295,300,301,304,308,309,],[-10,-132,-132,-5,-132,-9,-132,21,-22,-132,-4,-15,-132,-8,-132,-132,-45,-132,-132,-132,-21,-25,-132,-132,-132,-41,-42,-132,-132,-12,-13,-14,-38,-39,-40,-43,-44,-16,-64,-68,-17,-60,-66,-18,-64,-61,-132,-26,-23,-132,-24,]),'COLON':([8,11,15,21,58,191,193,223,249,261,],[13,17,22,59,95,220,222,248,265,275,]),'RSQBRACKET':([12,17,20,23,27,28,31,51,52,55,56,57,63,64,65,66,67,68,69,92,93,94,97,99,100,101,102,103,106,108,109,110,111,113,114,115,116,117,118,119,123,149,150,156,159,163,164,177,179,180,181,182,183,184,185,186,187,188,190,192,194,204,214,215,221,222,228,229,230,231,233,234,244,246,247,257,258,259,262,269,270,273,282,283,289,292,295,],[-9,-132,-15,-8,-132,-132,-45,-89,-90,-132,-132,-132,-132,-132,-132,-41,-42,-132,-132,-12,-13,-14,-11,-38,-39,-40,-43,-44,-108,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,164,191,-132,-101,-104,-123,-126,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-16,-3,-7,233,-69,-72,-132,-132,-99,-100,-102,-103,-126,-122,261,263,-6,-113,-64,-68,-17,283,-60,-66,-124,-129,-18,-64,-61,]),'RBRACKET':([12,17,20,23,27,28,31,55,56,57,63,64,65,66,67,68,69,92,93,94,99,100,101,102,103,190,194,206,213,222,235,242,247,258,259,262,270,273,284,288,289,290,292,293,295,296,298,306,307,],[-9,-132,-15,-8,-132,-132,-45,-132,-132,-132,-132,-132,-132,-41,-42,-132,-132,-12,-13,-14,-38,-39,-40,-43,-44,-16,-7,-132,-132,-132,258,259,-6,-64,-68,-17,-60,-66,-132,292,-18,-132,-64,-28,-61,-132,301,301,-31,]),'RETURN':([12,17,20,23,27,28,31,55,56,57,63,64,65,66,67,68,69,92,93,94,99,100,101,102,103,190,194,222,247,258,259,262,270,273,289,291,292,294,295,297,299,],[-9,-132,-15,-8,-132,-132,-45,-132,-132,-132,-132,-132,-132,-41,-42,-132,-132,-12,-13,-14,-38,-39,-40,-43,-44,-16,-7,-132,-6,-64,-68,-17,-60,-66,-18,-132,-64,-28,-61,-132,303,]),'VAR':([13,55,56,57,190,222,262,289,],[19,19,19,19,-16,19,-17,-18,]),'WRITE':([17,27,28,63,64,65,68,69,206,213,258,259,270,273,284,292,295,],[32,32,32,32,32,32,32,32,32,32,-64,-68,-60,-66,32,-64,-61,]),'READ':([17,27,28,63,64,65,68,69,206,213,258,259,270,273,284,292,295,],[33,33,33,33,33,33,33,33,33,33,-64,-68,-60,-66,33,-64,-61,]),'IF':([17,27,28,63,64,65,68,69,206,213,258,259,270,273,284,292,295,],[37,37,37,37,37,37,37,37,37,37,-64,-68,-60,-66,37,-64,-61,]),'MEAN':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[40,40,40,-53,40,40,40,40,40,40,-105,40,-125,40,-62,40,40,40,40,40,40,40,40,40,40,40,-105,-121,40,40,-71,40,-105,-105,-105,-105,40,40,-105,-105,-105,-105,-105,-105,-53,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-128,-64,-68,-60,-66,40,-64,-61,40,-30,]),'MEDIAN':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[41,41,41,-53,41,41,41,41,41,41,-105,41,-125,41,-62,41,41,41,41,41,41,41,41,41,41,41,-105,-121,41,41,-71,41,-105,-105,-105,-105,41,41,-105,-105,-105,-105,-105,-105,-53,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-128,-64,-68,-60,-66,41,-64,-61,41,-30,]),'MODE':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[42,42,42,-53,42,42,42,42,42,42,-105,42,-125,42,-62,42,42,42,42,42,42,42,42,42,42,42,-105,-121,42,42,-71,42,-105,-105,-105,-105,42,42,-105,-105,-105,-105,-105,-105,-53,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-128,-64,-68,-60,-66,42,-64,-61,42,-30,]),'STD':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[43,43,43,-53,43,43,43,43,43,43,-105,43,-125,43,-62,43,43,43,43,43,43,43,43,43,43,43,-105,-121,43,43,-71,43,-105,-105,-105,-105,43,43,-105,-105,-105,-105,-105,-105,-53,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-128,-64,-68,-60,-66,43,-64,-61,43,-30,]),'KURTOSIS':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[44,44,44,-53,44,44,44,44,44,44,-105,44,-125,44,-62,44,44,44,44,44,44,44,44,44,44,44,-105,-121,44,44,-71,44,-105,-105,-105,-105,44,44,-105,-105,-105,-105,-105,-105,-53,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-128,-64,-68,-60,-66,44,-64,-61,44,-30,]),'PLOT':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[45,45,45,-53,45,45,45,45,45,45,-105,45,-125,45,-62,45,45,45,45,45,45,45,45,45,45,45,-105,-121,45,45,-71,45,-105,-105,-105,-105,45,45,-105,-105,-105,-105,-105,-105,-53,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-128,-64,-68,-60,-66,45,-64,-61,45,-30,]),'DPLOT':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[46,46,46,-53,46,46,46,46,46,46,-105,46,-125,46,-62,46,46,46,46,46,46,46,46,46,46,46,-105,-121,46,46,-71,46,-105,-105,-105,-105,46,46,-105,-105,-105,-105,-105,-105,-53,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-128,-64,-68,-60,-66,46,-64,-61,46,-30,]),'VARIANCE':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[47,47,47,-53,47,47,47,47,47,47,-105,47,-125,47,-62,47,47,47,47,47,47,47,47,47,47,47,-105,-121,47,47,-71,47,-105,-105,-105,-105,47,47,-105,-105,-105,-105,-105,-105,-53,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-128,-64,-68,-60,-66,47,-64,-61,47,-30,]),'SIMMETRY':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[48,48,48,-53,48,48,48,48,48,48,-105,48,-125,48,-62,48,48,48,48,48,48,48,48,48,48,48,-105,-121,48,48,-71,48,-105,-105,-105,-105,48,48,-105,-105,-105,-105,-105,-105,-53,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-128,-64,-68,-60,-66,48,-64,-61,48,-30,]),'CORRELATION':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[49,49,49,-53,49,49,49,49,49,49,-105,49,-125,49,-62,49,49,49,49,49,49,49,49,49,49,49,-105,-121,49,49,-71,49,-105,-105,-105,-105,49,49,-105,-105,-105,-105,-105,-105,-53,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-128,-64,-68,-60,-66,49,-64,-61,49,-30,]),'DFREAD':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[50,50,50,-53,50,50,50,50,50,50,-105,50,-125,50,-62,50,50,50,50,50,50,50,50,50,50,50,-105,-121,50,50,-71,50,-105,-105,-105,-105,50,50,-105,-105,-105,-105,-105,-105,-53,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-128,-64,-68,-60,-66,50,-64,-61,50,-30,]),'HOMERO':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[51,51,51,-53,51,51,51,51,51,51,-105,51,-125,51,-62,51,51,51,51,51,51,51,51,51,51,51,-105,-121,51,51,-71,51,-105,-105,-105,-105,51,51,-105,-105,-105,-105,-105,-105,-53,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-128,-64,-68,-60,-66,51,-64,-61,51,-30,]),'MARGE':([17,27,28,32,63,64,65,68,69,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,256,258,259,270,273,284,292,295,302,303,],[52,52,52,-53,52,52,52,52,52,52,-105,52,-125,52,-62,52,52,52,52,52,52,52,52,52,52,52,-105,-121,52,52,-71,52,-105,-105,-105,-105,52,52,-105,-105,-105,-105,-105,-105,-53,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-128,-64,-68,-60,-66,52,-64,-61,52,-30,]),'REPEAT':([17,27,28,63,64,65,68,69,206,213,258,259,270,273,284,292,295,],[54,54,54,54,54,54,54,54,54,54,-64,-68,-60,-66,54,-64,-61,]),'PROC':([22,300,301,308,],[61,61,-26,61,]),'CONST_TEXT':([32,71,90,197,227,],[-53,107,142,-53,107,]),'LPAREN':([32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,98,112,117,122,128,129,143,151,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,207,208,209,210,211,212,217,227,255,256,302,303,],[-53,77,77,-70,80,81,82,83,84,85,86,87,88,89,90,-67,112,-105,112,-125,112,-62,112,129,112,112,112,112,112,112,112,112,112,112,-105,-27,-121,-70,112,112,-71,112,195,-105,-105,-105,-105,112,112,-105,-105,-105,-105,-105,-105,-53,112,112,112,112,112,112,112,112,112,112,112,112,112,-128,112,-30,]),'CONST_INT':([32,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,96,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,207,208,209,210,211,212,217,219,227,255,256,302,303,],[-53,118,-105,118,-125,118,-62,118,118,118,118,118,118,118,118,118,118,118,-105,149,-121,118,118,-71,118,-105,-105,-105,-105,118,118,-105,-105,-105,-105,-105,-105,-53,118,118,118,118,118,118,118,118,118,118,118,244,118,118,-128,118,-30,]),'CONST_FLOAT':([32,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,112,122,128,129,143,153,154,157,158,160,161,166,167,170,171,172,173,197,199,200,202,203,207,208,209,210,211,212,217,227,255,256,302,303,],[-53,119,-105,119,-125,119,-62,119,119,119,119,119,119,119,119,119,119,119,-105,-121,119,119,-71,119,-105,-105,-105,-105,119,119,-105,-105,-105,-105,-105,-105,-53,119,119,119,119,119,119,119,119,119,119,119,119,119,-128,119,-30,]),'ASSIGN':([34,39,53,163,164,],[73,-118,91,-123,-126,]),'LSQBRACKET':([34,39,58,59,109,117,191,232,233,],[75,-118,96,97,75,-118,219,256,-127,]),'MUL':([51,52,106,108,109,110,111,113,114,115,116,117,118,119,159,163,164,177,179,180,181,182,183,184,185,186,187,188,214,215,230,231,233,234,257,282,283,],[-89,-90,157,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,-104,-123,-126,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-69,-72,157,157,-126,-122,-113,-124,-129,]),'DIV':([51,52,106,108,109,110,111,113,114,115,116,117,118,119,159,163,164,177,179,180,181,182,183,184,185,186,187,188,214,215,230,231,233,234,257,282,283,],[-89,-90,158,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,-104,-123,-126,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-69,-72,158,158,-126,-122,-113,-124,-129,]),'ADD':([51,52,104,106,108,109,110,111,113,114,115,116,117,118,119,123,126,156,159,162,163,164,177,179,180,181,182,183,184,185,186,187,188,189,204,205,214,215,228,229,230,231,233,234,253,257,269,282,283,305,],[-89,-90,153,-108,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,153,153,-101,-104,153,-123,-126,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,153,153,153,-69,-72,153,153,-102,-103,-126,-122,153,-113,153,-124,-129,153,]),'SUB':([51,52,104,106,108,109,110,111,113,114,115,116,117,118,119,123,126,156,159,162,163,164,177,179,180,181,182,183,184,185,186,187,188,189,204,205,214,215,228,229,230,231,233,234,253,257,269,282,283,305,],[-89,-90,154,-108,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,154,154,-101,-104,154,-123,-126,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,154,154,154,-69,-72,154,154,-102,-103,-126,-122,154,-113,154,-124,-129,154,]),'COMMA':([51,52,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,125,126,131,147,148,152,155,156,159,163,169,174,177,178,179,180,181,182,183,184,185,186,187,188,214,215,225,228,229,230,231,233,234,236,237,238,239,240,241,243,253,254,257,260,264,266,267,268,282,283,],[-89,-90,-54,-54,-108,-52,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,-106,-107,-77,-130,-131,197,197,-101,-104,-123,-93,-98,-78,217,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-69,-72,251,-99,-100,-102,-103,-126,-122,-91,-92,-94,-95,-96,-97,-77,-54,-54,-113,217,-37,251,197,197,-124,-129,]),'LTHAN':([51,52,106,108,109,110,111,113,114,115,116,117,118,119,125,126,156,159,163,174,177,179,180,181,182,183,184,185,186,187,188,214,215,228,229,230,231,233,234,238,239,240,241,257,282,283,],[-89,-90,-108,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,170,-107,-101,-104,-123,-98,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-69,-72,-99,-100,-102,-103,-126,-122,170,170,170,170,-113,-124,-129,]),'GTHAN':([51,52,106,108,109,110,111,113,114,115,116,117,118,119,125,126,156,159,163,174,177,179,180,181,182,183,184,185,186,187,188,214,215,228,229,230,231,233,234,238,239,240,241,257,282,283,],[-89,-90,-108,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,171,-107,-101,-104,-123,-98,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-69,-72,-99,-100,-102,-103,-126,-122,171,171,171,171,-113,-124,-129,]),'EQUAL':([51,52,106,108,109,110,111,113,114,115,116,117,118,119,125,126,156,159,163,174,177,179,180,181,182,183,184,185,186,187,188,214,215,228,229,230,231,233,234,238,239,240,241,257,282,283,],[-89,-90,-108,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,172,-107,-101,-104,-123,-98,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-69,-72,-99,-100,-102,-103,-126,-122,172,172,172,172,-113,-124,-129,]),'DIFFERENT':([51,52,106,108,109,110,111,113,114,115,116,117,118,119,125,126,156,159,163,174,177,179,180,181,182,183,184,185,186,187,188,214,215,228,229,230,231,233,234,238,239,240,241,257,282,283,],[-89,-90,-108,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,173,-107,-101,-104,-123,-98,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-69,-72,-99,-100,-102,-103,-126,-122,173,173,173,173,-113,-124,-129,]),'AND':([51,52,106,108,109,110,111,113,114,115,116,117,118,119,124,125,126,127,131,156,159,163,169,174,177,179,180,181,182,183,184,185,186,187,188,214,215,228,229,230,231,233,234,236,237,238,239,240,241,243,257,282,283,],[-89,-90,-108,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,166,-106,-107,166,166,-101,-104,-123,-93,-98,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-69,-72,-99,-100,-102,-103,-126,-122,166,166,-94,-95,-96,-97,166,-113,-124,-129,]),'OR':([51,52,106,108,109,110,111,113,114,115,116,117,118,119,124,125,126,127,131,156,159,163,169,174,177,179,180,181,182,183,184,185,186,187,188,214,215,228,229,230,231,233,234,236,237,238,239,240,241,243,257,282,283,],[-89,-90,-108,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,167,-106,-107,167,167,-101,-104,-123,-93,-98,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-69,-72,-99,-100,-102,-103,-126,-122,167,167,-94,-95,-96,-97,167,-113,-124,-129,]),'RPAREN':([51,52,80,81,82,83,84,85,86,87,88,89,106,108,109,110,111,113,114,115,116,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,147,148,156,159,163,169,174,176,177,178,179,180,181,182,183,184,185,186,187,188,195,205,214,215,216,218,224,225,226,228,229,230,231,233,234,236,237,238,239,240,241,243,250,252,257,260,264,266,274,279,282,283,],[-89,-90,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-108,-109,-110,-111,-112,-114,-115,-116,-117,-118,-119,-120,168,-106,-107,168,-132,-71,177,-77,-74,179,180,181,182,183,184,185,186,187,188,-130,-131,-101,-104,-123,-93,-98,215,-78,-132,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-132,234,-69,-72,-73,-76,249,-132,-34,-99,-100,-102,-103,-126,-122,-91,-92,-94,-95,-96,-97,-77,-33,-36,-113,-132,-37,-132,-75,-35,-124,-129,]),'DF':([95,],[146,]),'INT':([95,220,248,265,275,],[147,147,147,147,147,]),'FLOAT':([95,220,248,265,275,],[148,148,148,148,148,]),'LOCALS':([97,150,290,291,],[-11,193,193,193,]),'LBRACKET':([147,148,165,168,175,271,272,276,277,278,286,287,],[-130,-131,206,-63,213,284,-65,-29,-29,-32,290,291,]),'ELSE':([258,],[272,]),'VOID':([265,],[276,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'routine':([0,],[1,]),'routine_init':([0,],[2,]),'global_scope_init':([5,],[6,]),'global_vars_block':([6,],[7,]),'empty':([6,7,10,13,17,22,27,28,55,56,57,63,64,65,68,69,80,81,82,83,84,85,86,87,88,89,128,150,152,155,178,195,206,213,221,222,225,260,266,267,268,284,290,291,296,297,300,308,],[9,12,16,20,31,62,31,31,20,20,20,31,31,31,31,31,132,132,132,132,132,132,132,132,132,132,132,194,198,198,218,226,31,31,12,20,252,218,252,198,198,31,194,194,12,12,62,62,]),'instructions_block':([7,221,296,297,],[10,246,298,299,]),'function_block':([10,],[14,]),'var_declarations':([13,55,56,57,222,],[18,92,93,94,247,]),'statements':([17,27,28,63,64,65,68,69,206,213,284,],[23,66,67,99,100,101,102,103,235,242,288,]),'write':([17,27,28,63,64,65,68,69,206,213,284,],[24,24,24,24,24,24,24,24,24,24,24,]),'read':([17,27,28,63,64,65,68,69,206,213,284,],[25,25,25,25,25,25,25,25,25,25,25,]),'var_assignment':([17,27,28,63,64,65,68,69,206,213,284,],[26,26,26,26,26,26,26,26,26,26,26,]),'condition':([17,27,28,63,64,65,68,69,206,213,284,],[27,27,27,27,27,27,27,27,27,27,27,]),'loop':([17,27,28,63,64,65,68,69,206,213,284,],[28,28,28,28,28,28,28,28,28,28,28,]),'function_call':([17,27,28,63,64,65,68,69,71,74,76,78,80,81,82,83,84,85,86,87,88,89,122,128,143,160,161,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,284,302,],[29,29,29,29,29,29,29,29,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,29,115,115,115,115,115,115,29,115,115,115,29,115,]),'special_function_call':([17,27,28,63,64,65,68,69,71,74,76,78,80,81,82,83,84,85,86,87,88,89,122,128,143,160,161,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,284,302,],[30,30,30,30,30,30,30,30,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,30,116,116,116,116,116,116,30,116,116,116,30,116,]),'identifier':([17,27,28,63,64,65,68,69,71,72,74,76,78,80,81,82,83,84,85,86,87,88,89,122,128,143,160,161,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,284,302,],[34,34,34,34,34,34,34,34,109,120,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,34,109,109,109,109,109,109,34,109,109,109,34,109,]),'simple_assignment':([17,27,28,63,64,65,68,69,206,213,284,],[35,35,35,35,35,35,35,35,35,35,35,]),'array_assignment':([17,27,28,63,64,65,68,69,206,213,284,],[36,36,36,36,36,36,36,36,36,36,36,]),'repeat':([17,27,28,63,64,65,68,69,206,213,284,],[38,38,38,38,38,38,38,38,38,38,38,]),'array_access':([17,27,28,63,64,65,68,69,71,74,76,78,80,81,82,83,84,85,86,87,88,89,122,128,143,160,161,199,200,202,203,206,207,208,209,210,211,212,213,217,227,255,284,302,],[53,53,53,53,53,53,53,53,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,53,113,113,113,113,113,113,53,113,113,113,53,113,]),'simple_declaration':([19,],[55,]),'array_declaration':([19,],[56,]),'matrix_declaration':([19,],[57,]),'function_declarations':([22,300,308,],[60,304,309,]),'write_params0':([32,],[70,]),'write_operator':([32,197,],[71,227,]),'push_operator':([33,73,91,153,154,157,158,166,167,170,171,172,173,],[72,122,143,199,200,202,203,207,208,209,210,211,212,]),'lsqbracket':([34,109,],[74,160,]),'cond_lparen':([37,38,],[76,78,]),'function_call_check':([39,117,],[79,79,]),'expression':([71,74,76,78,80,81,82,83,84,85,86,87,88,89,122,128,143,160,161,199,200,207,208,209,210,211,212,217,227,255,302,],[104,123,126,126,126,126,126,126,126,126,126,126,126,126,162,126,189,204,205,228,229,126,126,126,126,126,126,126,253,269,305,]),'const_text':([71,227,],[105,254,]),'term':([71,74,76,78,80,81,82,83,84,85,86,87,88,89,122,128,143,160,161,199,200,202,203,207,208,209,210,211,212,217,227,255,302,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,230,231,106,106,106,106,106,106,106,106,106,106,]),'factor':([71,74,76,78,80,81,82,83,84,85,86,87,88,89,122,128,143,160,161,199,200,202,203,207,208,209,210,211,212,217,227,255,302,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'const_int':([71,74,76,78,80,81,82,83,84,85,86,87,88,89,122,128,143,160,161,199,200,202,203,207,208,209,210,211,212,217,227,255,302,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'const_float':([71,74,76,78,80,81,82,83,84,85,86,87,88,89,122,128,143,160,161,199,200,202,203,207,208,209,210,211,212,217,227,255,302,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'matrix_access':([71,74,76,78,80,81,82,83,84,85,86,87,88,89,122,128,143,160,161,199,200,202,203,207,208,209,210,211,212,217,227,255,302,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'hyper_expression':([76,78,80,81,82,83,84,85,86,87,88,89,128,207,208,217,],[124,127,131,131,131,131,131,131,131,131,131,131,131,236,237,243,]),'super_expression':([76,78,80,81,82,83,84,85,86,87,88,89,128,207,208,209,210,211,212,217,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,238,239,240,241,125,]),'function_call_lparen':([79,],[128,]),'call_params0':([80,81,82,83,84,85,86,87,88,89,128,],[130,133,134,135,136,137,138,139,140,141,176,]),'var_type':([95,],[144,]),'type':([95,220,248,265,275,],[145,245,264,278,285,]),'local_scope_init':([97,],[150,]),'proc_scope_init':([98,],[151,]),'produce_write_quad':([104,105,253,254,],[152,155,267,268,]),'produce_exp_quad':([106,],[156,]),'produce_term_quad':([108,],[159,]),'push_cap':([112,],[161,]),'array_rsqbracket':([123,204,],[163,163,]),'cond_rparen':([124,127,],[165,175,]),'produce_hyperexp_quad':([125,],[169,]),'produce_superexp_quad':([126,],[174,]),'handle_call_param':([131,243,],[178,260,]),'local_vars_block':([150,290,291,],[192,293,294,]),'write_params1':([152,155,267,268,],[196,201,280,281,]),'function_call_rparen':([176,],[214,]),'call_params1':([178,260,],[216,274,]),'fill_main_jump':([192,],[221,]),'params0':([195,],[224,]),'param':([195,251,],[225,266,]),'matrix_rsqbracket_1':([204,],[232,]),'params1':([225,266,],[250,279,]),'matrix_lsqbracket_2':([232,],[255,]),'pop_cap':([234,],[257,]),'fill_pending_jump':([258,292,],[270,295,]),'else':([258,],[271,]),'fill_returning_jump':([259,],[273,]),'func_type':([265,],[277,]),'matrix_rsqbracket_2':([269,],[282,]),'set_return_type':([276,277,],[286,287,]),'store_curr_ip':([293,294,],[296,297,]),'function_rbracket':([298,306,],[300,308,]),'return':([299,],[302,]),'return_semicolon':([305,],[306,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> routine","S'",1,None,None,None),
  ('routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET','routine',15,'p_routine','parser.py',18),
  ('routine_init -> ROUTINE','routine_init',1,'p_routine_init','parser.py',31),
  ('fill_main_jump -> <empty>','fill_main_jump',0,'p_fill_main_jump','parser.py',38),
  ('global_vars_block -> GLOBALS COLON var_declarations','global_vars_block',3,'p_global_vars_block','parser.py',45),
  ('global_vars_block -> empty','global_vars_block',1,'p_global_vars_block','parser.py',46),
  ('local_vars_block -> LOCALS COLON var_declarations','local_vars_block',3,'p_local_vars_block','parser.py',52),
  ('local_vars_block -> empty','local_vars_block',1,'p_local_vars_block','parser.py',53),
  ('instructions_block -> INSTRUCTIONS COLON statements','instructions_block',3,'p_instructions_block','parser.py',59),
  ('instructions_block -> empty','instructions_block',1,'p_instructions_block','parser.py',60),
  ('global_scope_init -> <empty>','global_scope_init',0,'p_global_scope_init','parser.py',66),
  ('local_scope_init -> <empty>','local_scope_init',0,'p_local_scope_init','parser.py',73),
  ('var_declarations -> VAR simple_declaration var_declarations','var_declarations',3,'p_var_declarations','parser.py',80),
  ('var_declarations -> VAR array_declaration var_declarations','var_declarations',3,'p_var_declarations','parser.py',81),
  ('var_declarations -> VAR matrix_declaration var_declarations','var_declarations',3,'p_var_declarations','parser.py',82),
  ('var_declarations -> empty','var_declarations',1,'p_var_declarations','parser.py',83),
  ('simple_declaration -> ID COLON var_type SEMICOLON','simple_declaration',4,'p_simple_declaration','parser.py',89),
  ('array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON','array_declaration',7,'p_array_declaration','parser.py',96),
  ('matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON','matrix_declaration',10,'p_matrix_declaration','parser.py',103),
  ('var_type -> type','var_type',1,'p_var_type','parser.py',110),
  ('var_type -> DF','var_type',1,'p_var_type','parser.py',111),
  ('function_block -> PROCEDURES COLON function_declarations','function_block',3,'p_function_block','parser.py',118),
  ('function_block -> empty','function_block',1,'p_function_block','parser.py',119),
  ('function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations','function_declarations',15,'p_function_declarations','parser.py',125),
  ('function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations','function_declarations',18,'p_function_declarations','parser.py',126),
  ('function_declarations -> empty','function_declarations',1,'p_function_declarations','parser.py',127),
  ('function_rbracket -> RBRACKET','function_rbracket',1,'p_function_rbracket','parser.py',133),
  ('proc_scope_init -> <empty>','proc_scope_init',0,'p_proc_scope_init','parser.py',142),
  ('store_curr_ip -> <empty>','store_curr_ip',0,'p_store_curr_ip','parser.py',150),
  ('set_return_type -> <empty>','set_return_type',0,'p_set_return_type','parser.py',157),
  ('return -> RETURN','return',1,'p_return','parser.py',165),
  ('return_semicolon -> SEMICOLON','return_semicolon',1,'p_return_semicolon','parser.py',174),
  ('func_type -> type','func_type',1,'p_func_type','parser.py',181),
  ('params0 -> param params1','params0',2,'p_params0','parser.py',188),
  ('params0 -> empty','params0',1,'p_params0','parser.py',189),
  ('params1 -> COMMA param params1','params1',3,'p_params1','parser.py',195),
  ('params1 -> empty','params1',1,'p_params1','parser.py',196),
  ('param -> ID COLON type','param',3,'p_param','parser.py',202),
  ('statements -> write SEMICOLON statements','statements',3,'p_statements','parser.py',209),
  ('statements -> read SEMICOLON statements','statements',3,'p_statements','parser.py',210),
  ('statements -> var_assignment SEMICOLON statements','statements',3,'p_statements','parser.py',211),
  ('statements -> condition statements','statements',2,'p_statements','parser.py',212),
  ('statements -> loop statements','statements',2,'p_statements','parser.py',213),
  ('statements -> function_call SEMICOLON statements','statements',3,'p_statements','parser.py',214),
  ('statements -> special_function_call SEMICOLON statements','statements',3,'p_statements','parser.py',215),
  ('statements -> empty','statements',1,'p_statements','parser.py',216),
  ('write -> WRITE write_params0','write',2,'p_write','parser.py',222),
  ('write_params0 -> write_operator expression produce_write_quad write_params1','write_params0',4,'p_write_params0','parser.py',228),
  ('write_params0 -> write_operator const_text produce_write_quad write_params1','write_params0',4,'p_write_params0','parser.py',229),
  ('write_params1 -> COMMA write_operator expression produce_write_quad write_params1','write_params1',5,'p_write_params1','parser.py',235),
  ('write_params1 -> COMMA write_operator const_text produce_write_quad write_params1','write_params1',5,'p_write_params1','parser.py',236),
  ('write_params1 -> empty','write_params1',1,'p_write_params1','parser.py',237),
  ('const_text -> CONST_TEXT','const_text',1,'p_const_text','parser.py',243),
  ('write_operator -> <empty>','write_operator',0,'p_write_operator','parser.py',250),
  ('produce_write_quad -> <empty>','produce_write_quad',0,'p_produce_write_quad','parser.py',257),
  ('read -> READ push_operator identifier','read',3,'p_read','parser.py',264),
  ('var_assignment -> simple_assignment','var_assignment',1,'p_var_assignment','parser.py',271),
  ('var_assignment -> array_assignment','var_assignment',1,'p_var_assignment','parser.py',272),
  ('simple_assignment -> identifier ASSIGN push_operator expression','simple_assignment',4,'p_simple_assignment','parser.py',279),
  ('array_assignment -> array_access ASSIGN push_operator expression','array_assignment',4,'p_array_assignment','parser.py',286),
  ('condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump','condition',8,'p_condition','parser.py',299),
  ('condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump','condition',12,'p_condition','parser.py',300),
  ('cond_lparen -> LPAREN','cond_lparen',1,'p_cond_lparen','parser.py',306),
  ('cond_rparen -> RPAREN','cond_rparen',1,'p_cond_rparen','parser.py',313),
  ('fill_pending_jump -> <empty>','fill_pending_jump',0,'p_fill_pending_jump','parser.py',321),
  ('else -> ELSE','else',1,'p_else','parser.py',329),
  ('loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump','loop',8,'p_loop','parser.py',341),
  ('repeat -> REPEAT','repeat',1,'p_repeat','parser.py',347),
  ('fill_returning_jump -> <empty>','fill_returning_jump',0,'p_fill_returning_jump','parser.py',354),
  ('function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen','function_call',5,'p_function_call','parser.py',365),
  ('function_call_check -> <empty>','function_call_check',0,'p_function_call_check','parser.py',371),
  ('function_call_lparen -> LPAREN','function_call_lparen',1,'p_function_call_lparen','parser.py',382),
  ('function_call_rparen -> RPAREN','function_call_rparen',1,'p_function_call_rparen','parser.py',391),
  ('call_params0 -> hyper_expression handle_call_param call_params1','call_params0',3,'p_call_params0','parser.py',402),
  ('call_params0 -> empty','call_params0',1,'p_call_params0','parser.py',403),
  ('call_params1 -> COMMA hyper_expression handle_call_param call_params1','call_params1',4,'p_call_params1','parser.py',409),
  ('call_params1 -> empty','call_params1',1,'p_call_params1','parser.py',410),
  ('handle_call_param -> <empty>','handle_call_param',0,'p_handle_call_param','parser.py',416),
  ('special_function_call -> MEAN LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',425),
  ('special_function_call -> MEDIAN LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',426),
  ('special_function_call -> MODE LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',427),
  ('special_function_call -> STD LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',428),
  ('special_function_call -> KURTOSIS LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',429),
  ('special_function_call -> PLOT LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',430),
  ('special_function_call -> DPLOT LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',431),
  ('special_function_call -> VARIANCE LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',432),
  ('special_function_call -> SIMMETRY LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',433),
  ('special_function_call -> CORRELATION LPAREN call_params0 RPAREN','special_function_call',4,'p_special_function_call','parser.py',434),
  ('special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN','special_function_call',4,'p_special_function_call','parser.py',435),
  ('special_function_call -> HOMERO','special_function_call',1,'p_special_function_call','parser.py',436),
  ('special_function_call -> MARGE','special_function_call',1,'p_special_function_call','parser.py',437),
  ('hyper_expression -> hyper_expression AND push_operator hyper_expression','hyper_expression',4,'p_hyper_expression','parser.py',443),
  ('hyper_expression -> hyper_expression OR push_operator hyper_expression','hyper_expression',4,'p_hyper_expression','parser.py',444),
  ('hyper_expression -> super_expression produce_hyperexp_quad','hyper_expression',2,'p_hyper_expression','parser.py',445),
  ('super_expression -> super_expression LTHAN push_operator super_expression','super_expression',4,'p_super_expression','parser.py',451),
  ('super_expression -> super_expression GTHAN push_operator super_expression','super_expression',4,'p_super_expression','parser.py',452),
  ('super_expression -> super_expression EQUAL push_operator super_expression','super_expression',4,'p_super_expression','parser.py',453),
  ('super_expression -> super_expression DIFFERENT push_operator super_expression','super_expression',4,'p_super_expression','parser.py',454),
  ('super_expression -> expression produce_superexp_quad','super_expression',2,'p_super_expression','parser.py',455),
  ('expression -> expression ADD push_operator expression','expression',4,'p_expression','parser.py',461),
  ('expression -> expression SUB push_operator expression','expression',4,'p_expression','parser.py',462),
  ('expression -> term produce_exp_quad','expression',2,'p_expression','parser.py',463),
  ('term -> term MUL push_operator term','term',4,'p_term','parser.py',469),
  ('term -> term DIV push_operator term','term',4,'p_term','parser.py',470),
  ('term -> factor produce_term_quad','term',2,'p_term','parser.py',471),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',477),
  ('produce_hyperexp_quad -> <empty>','produce_hyperexp_quad',0,'p_produce_hyperexp_quad','parser.py',484),
  ('produce_superexp_quad -> <empty>','produce_superexp_quad',0,'p_produce_superexp_quad','parser.py',491),
  ('produce_exp_quad -> <empty>','produce_exp_quad',0,'p_produce_exp_quad','parser.py',498),
  ('produce_term_quad -> <empty>','produce_term_quad',0,'p_produce_term_quad','parser.py',505),
  ('factor -> identifier','factor',1,'p_factor','parser.py',512),
  ('factor -> const_int','factor',1,'p_factor','parser.py',513),
  ('factor -> const_float','factor',1,'p_factor','parser.py',514),
  ('factor -> LPAREN push_cap expression RPAREN pop_cap','factor',5,'p_factor','parser.py',515),
  ('factor -> array_access','factor',1,'p_factor','parser.py',516),
  ('factor -> matrix_access','factor',1,'p_factor','parser.py',517),
  ('factor -> function_call','factor',1,'p_factor','parser.py',518),
  ('factor -> special_function_call','factor',1,'p_factor','parser.py',519),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',525),
  ('const_int -> CONST_INT','const_int',1,'p_const_int','parser.py',532),
  ('const_float -> CONST_FLOAT','const_float',1,'p_const_float','parser.py',540),
  ('push_cap -> <empty>','push_cap',0,'p_push_cap','parser.py',548),
  ('pop_cap -> <empty>','pop_cap',0,'p_pop_cap','parser.py',555),
  ('array_access -> identifier lsqbracket expression array_rsqbracket','array_access',4,'p_array_access','parser.py',562),
  ('matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2','matrix_access',7,'p_matrix_access','parser.py',568),
  ('lsqbracket -> LSQBRACKET','lsqbracket',1,'p_lsqbracket','parser.py',574),
  ('array_rsqbracket -> RSQBRACKET','array_rsqbracket',1,'p_array_rsqbracket','parser.py',584),
  ('matrix_rsqbracket_1 -> RSQBRACKET','matrix_rsqbracket_1',1,'p_matrix_rsqbracket_1','parser.py',593),
  ('matrix_lsqbracket_2 -> LSQBRACKET','matrix_lsqbracket_2',1,'p_matrix_lsqbracket_2','parser.py',602),
  ('matrix_rsqbracket_2 -> RSQBRACKET','matrix_rsqbracket_2',1,'p_matrix_rsqbracket_2','parser.py',611),
  ('type -> INT','type',1,'p_type','parser.py',620),
  ('type -> FLOAT','type',1,'p_type','parser.py',621),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',628),
]
