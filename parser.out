Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT

Grammar

Rule 0     S' -> routine
Rule 1     routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
Rule 2     routine_init -> ROUTINE
Rule 3     fill_main_jump -> <empty>
Rule 4     global_vars_block -> GLOBALS COLON var_declarations
Rule 5     global_vars_block -> empty
Rule 6     local_vars_block -> LOCALS COLON var_declarations
Rule 7     local_vars_block -> empty
Rule 8     instructions_block -> INSTRUCTIONS COLON statements
Rule 9     instructions_block -> empty
Rule 10    global_scope_init -> <empty>
Rule 11    local_scope_init -> <empty>
Rule 12    var_declarations -> VAR simple_declaration var_declarations
Rule 13    var_declarations -> VAR array_declaration var_declarations
Rule 14    var_declarations -> VAR matrix_declaration var_declarations
Rule 15    var_declarations -> empty
Rule 16    simple_declaration -> ID COLON var_type SEMICOLON
Rule 17    array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
Rule 18    matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
Rule 19    var_type -> type
Rule 20    var_type -> DF
Rule 21    function_block -> PROCEDURES COLON function_declarations
Rule 22    function_block -> empty
Rule 23    function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
Rule 24    function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
Rule 25    function_declarations -> empty
Rule 26    function_rbracket -> RBRACKET
Rule 27    proc_scope_init -> <empty>
Rule 28    store_curr_ip -> <empty>
Rule 29    set_return_type -> <empty>
Rule 30    return -> RETURN
Rule 31    return_semicolon -> SEMICOLON
Rule 32    func_type -> type
Rule 33    params0 -> param params1
Rule 34    params0 -> empty
Rule 35    params1 -> COMMA param params1
Rule 36    params1 -> empty
Rule 37    param -> ID COLON type
Rule 38    statements -> write SEMICOLON statements
Rule 39    statements -> read SEMICOLON statements
Rule 40    statements -> var_assignment SEMICOLON statements
Rule 41    statements -> condition statements
Rule 42    statements -> loop statements
Rule 43    statements -> function_call SEMICOLON statements
Rule 44    statements -> special_function_call SEMICOLON statements
Rule 45    statements -> empty
Rule 46    write -> WRITE write_params0
Rule 47    write_params0 -> write_operator expression produce_write_quad write_params1
Rule 48    write_params0 -> write_operator const_text produce_write_quad write_params1
Rule 49    write_params1 -> COMMA write_operator expression produce_write_quad write_params1
Rule 50    write_params1 -> COMMA write_operator const_text produce_write_quad write_params1
Rule 51    write_params1 -> empty
Rule 52    const_text -> CONST_TEXT
Rule 53    write_operator -> <empty>
Rule 54    produce_write_quad -> <empty>
Rule 55    read -> READ push_operator identifier
Rule 56    var_assignment -> simple_assignment
Rule 57    var_assignment -> array_assignment
Rule 58    simple_assignment -> identifier ASSIGN push_operator expression
Rule 59    array_assignment -> array_access ASSIGN push_operator expression
Rule 60    condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
Rule 61    condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
Rule 62    cond_lparen -> LPAREN
Rule 63    cond_rparen -> RPAREN
Rule 64    fill_pending_jump -> <empty>
Rule 65    else -> ELSE
Rule 66    loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
Rule 67    repeat -> REPEAT
Rule 68    fill_returning_jump -> <empty>
Rule 69    function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen
Rule 70    function_call_check -> <empty>
Rule 71    function_call_lparen -> LPAREN
Rule 72    function_call_rparen -> RPAREN
Rule 73    call_params0 -> hyper_expression handle_call_param call_params1
Rule 74    call_params0 -> empty
Rule 75    call_params1 -> COMMA hyper_expression handle_call_param call_params1
Rule 76    call_params1 -> empty
Rule 77    handle_call_param -> <empty>
Rule 78    special_function_call -> MEAN LPAREN call_params0 RPAREN
Rule 79    special_function_call -> MEDIAN LPAREN call_params0 RPAREN
Rule 80    special_function_call -> MODE LPAREN call_params0 RPAREN
Rule 81    special_function_call -> STD LPAREN call_params0 RPAREN
Rule 82    special_function_call -> KURTOSIS LPAREN call_params0 RPAREN
Rule 83    special_function_call -> PLOT LPAREN call_params0 RPAREN
Rule 84    special_function_call -> DPLOT LPAREN call_params0 RPAREN
Rule 85    special_function_call -> VARIANCE LPAREN call_params0 RPAREN
Rule 86    special_function_call -> SIMMETRY LPAREN call_params0 RPAREN
Rule 87    special_function_call -> CORRELATION LPAREN call_params0 RPAREN
Rule 88    special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN
Rule 89    special_function_call -> HOMERO
Rule 90    special_function_call -> MARGE
Rule 91    hyper_expression -> hyper_expression AND push_operator hyper_expression
Rule 92    hyper_expression -> hyper_expression OR push_operator hyper_expression
Rule 93    hyper_expression -> super_expression produce_hyperexp_quad
Rule 94    super_expression -> super_expression LTHAN push_operator super_expression
Rule 95    super_expression -> super_expression GTHAN push_operator super_expression
Rule 96    super_expression -> super_expression EQUAL push_operator super_expression
Rule 97    super_expression -> super_expression DIFFERENT push_operator super_expression
Rule 98    super_expression -> expression produce_superexp_quad
Rule 99    expression -> expression ADD push_operator expression
Rule 100   expression -> expression SUB push_operator expression
Rule 101   expression -> term produce_exp_quad
Rule 102   term -> term MUL push_operator term
Rule 103   term -> term DIV push_operator term
Rule 104   term -> factor produce_term_quad
Rule 105   push_operator -> <empty>
Rule 106   produce_hyperexp_quad -> <empty>
Rule 107   produce_superexp_quad -> <empty>
Rule 108   produce_exp_quad -> <empty>
Rule 109   produce_term_quad -> <empty>
Rule 110   factor -> identifier
Rule 111   factor -> const_int
Rule 112   factor -> const_float
Rule 113   factor -> LPAREN push_cap expression RPAREN pop_cap
Rule 114   factor -> array_access
Rule 115   factor -> matrix_access
Rule 116   factor -> function_call
Rule 117   factor -> special_function_call
Rule 118   identifier -> ID
Rule 119   const_int -> CONST_INT
Rule 120   const_float -> CONST_FLOAT
Rule 121   push_cap -> <empty>
Rule 122   pop_cap -> <empty>
Rule 123   array_access -> identifier lsqbracket expression array_rsqbracket
Rule 124   matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
Rule 125   lsqbracket -> LSQBRACKET
Rule 126   array_rsqbracket -> RSQBRACKET
Rule 127   matrix_rsqbracket_1 -> RSQBRACKET
Rule 128   matrix_lsqbracket_2 -> LSQBRACKET
Rule 129   matrix_rsqbracket_2 -> RSQBRACKET
Rule 130   type -> INT
Rule 131   type -> FLOAT
Rule 132   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 99
AND                  : 91
ASSIGN               : 58 59
BEGIN                : 1
COLON                : 1 4 6 8 16 17 18 21 23 24 37
COMMA                : 35 49 50 75
CONST_FLOAT          : 120
CONST_INT            : 17 18 18 119
CONST_TEXT           : 52 88
CORRELATION          : 87
DF                   : 20
DFREAD               : 88
DIFFERENT            : 97
DIV                  : 103
DPLOT                : 84
ELSE                 : 65
EQUAL                : 96
FLOAT                : 131
GLOBALS              : 4
GTHAN                : 95
HOMERO               : 89
ID                   : 1 16 17 18 23 24 37 69 118
IF                   : 60 61
INSTRUCTIONS         : 8
INT                  : 130
KURTOSIS             : 82
LBRACKET             : 23 24 60 61 61 66
LOCALS               : 6
LPAREN               : 23 24 62 71 78 79 80 81 82 83 84 85 86 87 88 113
LSQBRACKET           : 1 17 18 18 125 128
LTHAN                : 94
MARGE                : 90
MEAN                 : 78
MEDIAN               : 79
MODE                 : 80
MUL                  : 102
NOT                  : 
OR                   : 92
PLOT                 : 83
PROC                 : 23 24
PROCEDURES           : 21
RBRACKET             : 26 60 61 61 66
READ                 : 55
REPEAT               : 67
RETURN               : 30
ROUTINE              : 2
RPAREN               : 23 24 63 72 78 79 80 81 82 83 84 85 86 87 88 113
RSQBRACKET           : 1 17 18 18 126 127 129
SEMICOLON            : 1 16 17 18 31 38 39 40 43 44
SIMMETRY             : 86
STD                  : 81
SUB                  : 100
VAR                  : 12 13 14
VARIANCE             : 85
VOID                 : 23
WRITE                : 46
error                : 

Nonterminals, with rules where they appear

array_access         : 59 114
array_assignment     : 57
array_declaration    : 13
array_rsqbracket     : 123
call_params0         : 69 78 79 80 81 82 83 84 85 86 87
call_params1         : 73 75
cond_lparen          : 60 61 66
cond_rparen          : 60 61 66
condition            : 41
const_float          : 112
const_int            : 111
const_text           : 48 50
else                 : 61
empty                : 5 7 9 15 22 25 34 36 45 51 74 76
expression           : 24 47 49 58 59 98 99 99 100 100 113 123 124 124
factor               : 104
fill_main_jump       : 1
fill_pending_jump    : 60 61
fill_returning_jump  : 66
func_type            : 24
function_block       : 1
function_call        : 43 116
function_call_check  : 69
function_call_lparen : 69
function_call_rparen : 69
function_declarations : 21 23 24
function_rbracket    : 23 24
global_scope_init    : 1
global_vars_block    : 1
handle_call_param    : 73 75
hyper_expression     : 60 61 66 73 75 91 91 92 92
identifier           : 55 58 110 123 124
instructions_block   : 1 1 23 24
local_scope_init     : 1
local_vars_block     : 1 23 24
loop                 : 42
lsqbracket           : 123 124
matrix_access        : 115
matrix_declaration   : 14
matrix_lsqbracket_2  : 124
matrix_rsqbracket_1  : 124
matrix_rsqbracket_2  : 124
param                : 33 35
params0              : 23 24
params1              : 33 35
pop_cap              : 113
proc_scope_init      : 23 24
produce_exp_quad     : 101
produce_hyperexp_quad : 93
produce_superexp_quad : 98
produce_term_quad    : 104
produce_write_quad   : 47 48 49 50
push_cap             : 113
push_operator        : 55 58 59 91 92 94 95 96 97 99 100 102 103
read                 : 39
repeat               : 66
return               : 24
return_semicolon     : 24
routine              : 0
routine_init         : 1
set_return_type      : 23 24
simple_assignment    : 56
simple_declaration   : 12
special_function_call : 44 117
statements           : 8 38 39 40 41 42 43 44 60 61 61 66
store_curr_ip        : 23 24
super_expression     : 93 94 94 95 95 96 96 97 97
term                 : 101 102 102 103 103
type                 : 17 18 19 32 37
var_assignment       : 40
var_declarations     : 4 6 12 13 14
var_type             : 16
write                : 38
write_operator       : 47 48 49 50
write_params0        : 46
write_params1        : 47 48 49 50

Parsing method: LALR

state 0

    (0) S' -> . routine
    (1) routine -> . routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (2) routine_init -> . ROUTINE

    ROUTINE         shift and go to state 3

    routine                        shift and go to state 1
    routine_init                   shift and go to state 2

state 1

    (0) S' -> routine .



state 2

    (1) routine -> routine_init . ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    ID              shift and go to state 4


state 3

    (2) routine_init -> ROUTINE .

    ID              reduce using rule 2 (routine_init -> ROUTINE .)


state 4

    (1) routine -> routine_init ID . SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    SEMICOLON       shift and go to state 5


state 5

    (1) routine -> routine_init ID SEMICOLON . global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (10) global_scope_init -> .

    GLOBALS         reduce using rule 10 (global_scope_init -> .)
    INSTRUCTIONS    reduce using rule 10 (global_scope_init -> .)
    PROCEDURES      reduce using rule 10 (global_scope_init -> .)
    BEGIN           reduce using rule 10 (global_scope_init -> .)

    global_scope_init              shift and go to state 6

state 6

    (1) routine -> routine_init ID SEMICOLON global_scope_init . global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (4) global_vars_block -> . GLOBALS COLON var_declarations
    (5) global_vars_block -> . empty
    (132) empty -> .

    GLOBALS         shift and go to state 8
    INSTRUCTIONS    reduce using rule 132 (empty -> .)
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)

    global_vars_block              shift and go to state 7
    empty                          shift and go to state 9

state 7

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block . instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (8) instructions_block -> . INSTRUCTIONS COLON statements
    (9) instructions_block -> . empty
    (132) empty -> .

    INSTRUCTIONS    shift and go to state 11
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)

    instructions_block             shift and go to state 10
    empty                          shift and go to state 12

state 8

    (4) global_vars_block -> GLOBALS . COLON var_declarations

    COLON           shift and go to state 13


state 9

    (5) global_vars_block -> empty .

    INSTRUCTIONS    reduce using rule 5 (global_vars_block -> empty .)
    PROCEDURES      reduce using rule 5 (global_vars_block -> empty .)
    BEGIN           reduce using rule 5 (global_vars_block -> empty .)


state 10

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block . function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (21) function_block -> . PROCEDURES COLON function_declarations
    (22) function_block -> . empty
    (132) empty -> .

    PROCEDURES      shift and go to state 15
    BEGIN           reduce using rule 132 (empty -> .)

    function_block                 shift and go to state 14
    empty                          shift and go to state 16

state 11

    (8) instructions_block -> INSTRUCTIONS . COLON statements

    COLON           shift and go to state 17


state 12

    (9) instructions_block -> empty .

    PROCEDURES      reduce using rule 9 (instructions_block -> empty .)
    BEGIN           reduce using rule 9 (instructions_block -> empty .)
    RSQBRACKET      reduce using rule 9 (instructions_block -> empty .)
    RBRACKET        reduce using rule 9 (instructions_block -> empty .)
    RETURN          reduce using rule 9 (instructions_block -> empty .)


state 13

    (4) global_vars_block -> GLOBALS COLON . var_declarations
    (12) var_declarations -> . VAR simple_declaration var_declarations
    (13) var_declarations -> . VAR array_declaration var_declarations
    (14) var_declarations -> . VAR matrix_declaration var_declarations
    (15) var_declarations -> . empty
    (132) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 132 (empty -> .)
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)

    var_declarations               shift and go to state 18
    empty                          shift and go to state 20

state 14

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block . BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    BEGIN           shift and go to state 21


state 15

    (21) function_block -> PROCEDURES . COLON function_declarations

    COLON           shift and go to state 22


state 16

    (22) function_block -> empty .

    BEGIN           reduce using rule 22 (function_block -> empty .)


state 17

    (8) instructions_block -> INSTRUCTIONS COLON . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (132) empty -> .
    (58) simple_assignment -> . identifier ASSIGN push_operator expression
    (59) array_assignment -> . array_access ASSIGN push_operator expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    REPEAT          shift and go to state 54

    statements                     shift and go to state 23
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    repeat                         shift and go to state 38
    array_access                   shift and go to state 53

state 18

    (4) global_vars_block -> GLOBALS COLON var_declarations .

    INSTRUCTIONS    reduce using rule 4 (global_vars_block -> GLOBALS COLON var_declarations .)
    PROCEDURES      reduce using rule 4 (global_vars_block -> GLOBALS COLON var_declarations .)
    BEGIN           reduce using rule 4 (global_vars_block -> GLOBALS COLON var_declarations .)


state 19

    (12) var_declarations -> VAR . simple_declaration var_declarations
    (13) var_declarations -> VAR . array_declaration var_declarations
    (14) var_declarations -> VAR . matrix_declaration var_declarations
    (16) simple_declaration -> . ID COLON var_type SEMICOLON
    (17) array_declaration -> . ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
    (18) matrix_declaration -> . ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    ID              shift and go to state 58

    simple_declaration             shift and go to state 55
    array_declaration              shift and go to state 56
    matrix_declaration             shift and go to state 57

state 20

    (15) var_declarations -> empty .

    INSTRUCTIONS    reduce using rule 15 (var_declarations -> empty .)
    PROCEDURES      reduce using rule 15 (var_declarations -> empty .)
    BEGIN           reduce using rule 15 (var_declarations -> empty .)
    RSQBRACKET      reduce using rule 15 (var_declarations -> empty .)
    RBRACKET        reduce using rule 15 (var_declarations -> empty .)
    RETURN          reduce using rule 15 (var_declarations -> empty .)


state 21

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN . COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    COLON           shift and go to state 59


state 22

    (21) function_block -> PROCEDURES COLON . function_declarations
    (23) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (25) function_declarations -> . empty
    (132) empty -> .

    PROC            shift and go to state 61
    BEGIN           reduce using rule 132 (empty -> .)

    function_declarations          shift and go to state 60
    empty                          shift and go to state 62

state 23

    (8) instructions_block -> INSTRUCTIONS COLON statements .

    PROCEDURES      reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)
    BEGIN           reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)
    RSQBRACKET      reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)
    RBRACKET        reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)
    RETURN          reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)


state 24

    (38) statements -> write . SEMICOLON statements

    SEMICOLON       shift and go to state 63


state 25

    (39) statements -> read . SEMICOLON statements

    SEMICOLON       shift and go to state 64


state 26

    (40) statements -> var_assignment . SEMICOLON statements

    SEMICOLON       shift and go to state 65


state 27

    (41) statements -> condition . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (132) empty -> .
    (58) simple_assignment -> . identifier ASSIGN push_operator expression
    (59) array_assignment -> . array_access ASSIGN push_operator expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    REPEAT          shift and go to state 54

    condition                      shift and go to state 27
    statements                     shift and go to state 66
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    repeat                         shift and go to state 38
    array_access                   shift and go to state 53

state 28

    (42) statements -> loop . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (132) empty -> .
    (58) simple_assignment -> . identifier ASSIGN push_operator expression
    (59) array_assignment -> . array_access ASSIGN push_operator expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    REPEAT          shift and go to state 54

    loop                           shift and go to state 28
    statements                     shift and go to state 67
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    repeat                         shift and go to state 38
    array_access                   shift and go to state 53

state 29

    (43) statements -> function_call . SEMICOLON statements

    SEMICOLON       shift and go to state 68


state 30

    (44) statements -> special_function_call . SEMICOLON statements

    SEMICOLON       shift and go to state 69


state 31

    (45) statements -> empty .

    PROCEDURES      reduce using rule 45 (statements -> empty .)
    BEGIN           reduce using rule 45 (statements -> empty .)
    RSQBRACKET      reduce using rule 45 (statements -> empty .)
    RBRACKET        reduce using rule 45 (statements -> empty .)
    RETURN          reduce using rule 45 (statements -> empty .)


state 32

    (46) write -> WRITE . write_params0
    (47) write_params0 -> . write_operator expression produce_write_quad write_params1
    (48) write_params0 -> . write_operator const_text produce_write_quad write_params1
    (53) write_operator -> .

    CONST_TEXT      reduce using rule 53 (write_operator -> .)
    LPAREN          reduce using rule 53 (write_operator -> .)
    ID              reduce using rule 53 (write_operator -> .)
    CONST_INT       reduce using rule 53 (write_operator -> .)
    CONST_FLOAT     reduce using rule 53 (write_operator -> .)
    MEAN            reduce using rule 53 (write_operator -> .)
    MEDIAN          reduce using rule 53 (write_operator -> .)
    MODE            reduce using rule 53 (write_operator -> .)
    STD             reduce using rule 53 (write_operator -> .)
    KURTOSIS        reduce using rule 53 (write_operator -> .)
    PLOT            reduce using rule 53 (write_operator -> .)
    DPLOT           reduce using rule 53 (write_operator -> .)
    VARIANCE        reduce using rule 53 (write_operator -> .)
    SIMMETRY        reduce using rule 53 (write_operator -> .)
    CORRELATION     reduce using rule 53 (write_operator -> .)
    DFREAD          reduce using rule 53 (write_operator -> .)
    HOMERO          reduce using rule 53 (write_operator -> .)
    MARGE           reduce using rule 53 (write_operator -> .)

    write_params0                  shift and go to state 70
    write_operator                 shift and go to state 71

state 33

    (55) read -> READ . push_operator identifier
    (105) push_operator -> .

    ID              reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 72

state 34

    (58) simple_assignment -> identifier . ASSIGN push_operator expression
    (123) array_access -> identifier . lsqbracket expression array_rsqbracket
    (125) lsqbracket -> . LSQBRACKET

    ASSIGN          shift and go to state 73
    LSQBRACKET      shift and go to state 75

    lsqbracket                     shift and go to state 74

state 35

    (56) var_assignment -> simple_assignment .

    SEMICOLON       reduce using rule 56 (var_assignment -> simple_assignment .)


state 36

    (57) var_assignment -> array_assignment .

    SEMICOLON       reduce using rule 57 (var_assignment -> array_assignment .)


state 37

    (60) condition -> IF . cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> IF . cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (62) cond_lparen -> . LPAREN

    LPAREN          shift and go to state 77

    cond_lparen                    shift and go to state 76

state 38

    (66) loop -> repeat . cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (62) cond_lparen -> . LPAREN

    LPAREN          shift and go to state 77

    cond_lparen                    shift and go to state 78

state 39

    (69) function_call -> ID . function_call_check function_call_lparen call_params0 function_call_rparen
    (118) identifier -> ID .
    (70) function_call_check -> .

    ASSIGN          reduce using rule 118 (identifier -> ID .)
    LSQBRACKET      reduce using rule 118 (identifier -> ID .)
    LPAREN          reduce using rule 70 (function_call_check -> .)

    function_call_check            shift and go to state 79

state 40

    (78) special_function_call -> MEAN . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 80


state 41

    (79) special_function_call -> MEDIAN . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 81


state 42

    (80) special_function_call -> MODE . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 82


state 43

    (81) special_function_call -> STD . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 83


state 44

    (82) special_function_call -> KURTOSIS . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 84


state 45

    (83) special_function_call -> PLOT . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 85


state 46

    (84) special_function_call -> DPLOT . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 86


state 47

    (85) special_function_call -> VARIANCE . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 87


state 48

    (86) special_function_call -> SIMMETRY . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 88


state 49

    (87) special_function_call -> CORRELATION . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 89


state 50

    (88) special_function_call -> DFREAD . LPAREN CONST_TEXT RPAREN

    LPAREN          shift and go to state 90


state 51

    (89) special_function_call -> HOMERO .

    SEMICOLON       reduce using rule 89 (special_function_call -> HOMERO .)
    MUL             reduce using rule 89 (special_function_call -> HOMERO .)
    DIV             reduce using rule 89 (special_function_call -> HOMERO .)
    ADD             reduce using rule 89 (special_function_call -> HOMERO .)
    SUB             reduce using rule 89 (special_function_call -> HOMERO .)
    COMMA           reduce using rule 89 (special_function_call -> HOMERO .)
    RSQBRACKET      reduce using rule 89 (special_function_call -> HOMERO .)
    LTHAN           reduce using rule 89 (special_function_call -> HOMERO .)
    GTHAN           reduce using rule 89 (special_function_call -> HOMERO .)
    EQUAL           reduce using rule 89 (special_function_call -> HOMERO .)
    DIFFERENT       reduce using rule 89 (special_function_call -> HOMERO .)
    AND             reduce using rule 89 (special_function_call -> HOMERO .)
    OR              reduce using rule 89 (special_function_call -> HOMERO .)
    RPAREN          reduce using rule 89 (special_function_call -> HOMERO .)


state 52

    (90) special_function_call -> MARGE .

    SEMICOLON       reduce using rule 90 (special_function_call -> MARGE .)
    MUL             reduce using rule 90 (special_function_call -> MARGE .)
    DIV             reduce using rule 90 (special_function_call -> MARGE .)
    ADD             reduce using rule 90 (special_function_call -> MARGE .)
    SUB             reduce using rule 90 (special_function_call -> MARGE .)
    COMMA           reduce using rule 90 (special_function_call -> MARGE .)
    RSQBRACKET      reduce using rule 90 (special_function_call -> MARGE .)
    LTHAN           reduce using rule 90 (special_function_call -> MARGE .)
    GTHAN           reduce using rule 90 (special_function_call -> MARGE .)
    EQUAL           reduce using rule 90 (special_function_call -> MARGE .)
    DIFFERENT       reduce using rule 90 (special_function_call -> MARGE .)
    AND             reduce using rule 90 (special_function_call -> MARGE .)
    OR              reduce using rule 90 (special_function_call -> MARGE .)
    RPAREN          reduce using rule 90 (special_function_call -> MARGE .)


state 53

    (59) array_assignment -> array_access . ASSIGN push_operator expression

    ASSIGN          shift and go to state 91


state 54

    (67) repeat -> REPEAT .

    LPAREN          reduce using rule 67 (repeat -> REPEAT .)


state 55

    (12) var_declarations -> VAR simple_declaration . var_declarations
    (12) var_declarations -> . VAR simple_declaration var_declarations
    (13) var_declarations -> . VAR array_declaration var_declarations
    (14) var_declarations -> . VAR matrix_declaration var_declarations
    (15) var_declarations -> . empty
    (132) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 132 (empty -> .)
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)

    var_declarations               shift and go to state 92
    empty                          shift and go to state 20

state 56

    (13) var_declarations -> VAR array_declaration . var_declarations
    (12) var_declarations -> . VAR simple_declaration var_declarations
    (13) var_declarations -> . VAR array_declaration var_declarations
    (14) var_declarations -> . VAR matrix_declaration var_declarations
    (15) var_declarations -> . empty
    (132) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 132 (empty -> .)
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)

    var_declarations               shift and go to state 93
    empty                          shift and go to state 20

state 57

    (14) var_declarations -> VAR matrix_declaration . var_declarations
    (12) var_declarations -> . VAR simple_declaration var_declarations
    (13) var_declarations -> . VAR array_declaration var_declarations
    (14) var_declarations -> . VAR matrix_declaration var_declarations
    (15) var_declarations -> . empty
    (132) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 132 (empty -> .)
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)

    var_declarations               shift and go to state 94
    empty                          shift and go to state 20

state 58

    (16) simple_declaration -> ID . COLON var_type SEMICOLON
    (17) array_declaration -> ID . LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
    (18) matrix_declaration -> ID . LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    COLON           shift and go to state 95
    LSQBRACKET      shift and go to state 96


state 59

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON . LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    LSQBRACKET      shift and go to state 97


state 60

    (21) function_block -> PROCEDURES COLON function_declarations .

    BEGIN           reduce using rule 21 (function_block -> PROCEDURES COLON function_declarations .)


state 61

    (23) function_declarations -> PROC . ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC . ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    ID              shift and go to state 98


state 62

    (25) function_declarations -> empty .

    BEGIN           reduce using rule 25 (function_declarations -> empty .)


state 63

    (38) statements -> write SEMICOLON . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (132) empty -> .
    (58) simple_assignment -> . identifier ASSIGN push_operator expression
    (59) array_assignment -> . array_access ASSIGN push_operator expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    REPEAT          shift and go to state 54

    write                          shift and go to state 24
    statements                     shift and go to state 99
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    repeat                         shift and go to state 38
    array_access                   shift and go to state 53

state 64

    (39) statements -> read SEMICOLON . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (132) empty -> .
    (58) simple_assignment -> . identifier ASSIGN push_operator expression
    (59) array_assignment -> . array_access ASSIGN push_operator expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    REPEAT          shift and go to state 54

    read                           shift and go to state 25
    statements                     shift and go to state 100
    write                          shift and go to state 24
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    repeat                         shift and go to state 38
    array_access                   shift and go to state 53

state 65

    (40) statements -> var_assignment SEMICOLON . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (132) empty -> .
    (58) simple_assignment -> . identifier ASSIGN push_operator expression
    (59) array_assignment -> . array_access ASSIGN push_operator expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    REPEAT          shift and go to state 54

    var_assignment                 shift and go to state 26
    statements                     shift and go to state 101
    write                          shift and go to state 24
    read                           shift and go to state 25
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    repeat                         shift and go to state 38
    array_access                   shift and go to state 53

state 66

    (41) statements -> condition statements .

    PROCEDURES      reduce using rule 41 (statements -> condition statements .)
    BEGIN           reduce using rule 41 (statements -> condition statements .)
    RSQBRACKET      reduce using rule 41 (statements -> condition statements .)
    RBRACKET        reduce using rule 41 (statements -> condition statements .)
    RETURN          reduce using rule 41 (statements -> condition statements .)


state 67

    (42) statements -> loop statements .

    PROCEDURES      reduce using rule 42 (statements -> loop statements .)
    BEGIN           reduce using rule 42 (statements -> loop statements .)
    RSQBRACKET      reduce using rule 42 (statements -> loop statements .)
    RBRACKET        reduce using rule 42 (statements -> loop statements .)
    RETURN          reduce using rule 42 (statements -> loop statements .)


state 68

    (43) statements -> function_call SEMICOLON . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (132) empty -> .
    (58) simple_assignment -> . identifier ASSIGN push_operator expression
    (59) array_assignment -> . array_access ASSIGN push_operator expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    REPEAT          shift and go to state 54

    function_call                  shift and go to state 29
    statements                     shift and go to state 102
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    repeat                         shift and go to state 38
    array_access                   shift and go to state 53

state 69

    (44) statements -> special_function_call SEMICOLON . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (132) empty -> .
    (58) simple_assignment -> . identifier ASSIGN push_operator expression
    (59) array_assignment -> . array_access ASSIGN push_operator expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 132 (empty -> .)
    BEGIN           reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    REPEAT          shift and go to state 54

    special_function_call          shift and go to state 30
    statements                     shift and go to state 103
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    repeat                         shift and go to state 38
    array_access                   shift and go to state 53

state 70

    (46) write -> WRITE write_params0 .

    SEMICOLON       reduce using rule 46 (write -> WRITE write_params0 .)


state 71

    (47) write_params0 -> write_operator . expression produce_write_quad write_params1
    (48) write_params0 -> write_operator . const_text produce_write_quad write_params1
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (52) const_text -> . CONST_TEXT
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    CONST_TEXT      shift and go to state 107
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 104
    const_text                     shift and go to state 105
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 72

    (55) read -> READ push_operator . identifier
    (118) identifier -> . ID

    ID              shift and go to state 121

    identifier                     shift and go to state 120

state 73

    (58) simple_assignment -> identifier ASSIGN . push_operator expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 122

state 74

    (123) array_access -> identifier lsqbracket . expression array_rsqbracket
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    identifier                     shift and go to state 109
    expression                     shift and go to state 123
    term                           shift and go to state 106
    factor                         shift and go to state 108
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 75

    (125) lsqbracket -> LSQBRACKET .

    LPAREN          reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    ID              reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    CONST_INT       reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    CONST_FLOAT     reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    MEAN            reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    MEDIAN          reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    MODE            reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    STD             reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    KURTOSIS        reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    PLOT            reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    DPLOT           reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    VARIANCE        reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    SIMMETRY        reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    CORRELATION     reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    DFREAD          reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    HOMERO          reduce using rule 125 (lsqbracket -> LSQBRACKET .)
    MARGE           reduce using rule 125 (lsqbracket -> LSQBRACKET .)


state 76

    (60) condition -> IF cond_lparen . hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> IF cond_lparen . hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    hyper_expression               shift and go to state 124
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 77

    (62) cond_lparen -> LPAREN .

    LPAREN          reduce using rule 62 (cond_lparen -> LPAREN .)
    ID              reduce using rule 62 (cond_lparen -> LPAREN .)
    CONST_INT       reduce using rule 62 (cond_lparen -> LPAREN .)
    CONST_FLOAT     reduce using rule 62 (cond_lparen -> LPAREN .)
    MEAN            reduce using rule 62 (cond_lparen -> LPAREN .)
    MEDIAN          reduce using rule 62 (cond_lparen -> LPAREN .)
    MODE            reduce using rule 62 (cond_lparen -> LPAREN .)
    STD             reduce using rule 62 (cond_lparen -> LPAREN .)
    KURTOSIS        reduce using rule 62 (cond_lparen -> LPAREN .)
    PLOT            reduce using rule 62 (cond_lparen -> LPAREN .)
    DPLOT           reduce using rule 62 (cond_lparen -> LPAREN .)
    VARIANCE        reduce using rule 62 (cond_lparen -> LPAREN .)
    SIMMETRY        reduce using rule 62 (cond_lparen -> LPAREN .)
    CORRELATION     reduce using rule 62 (cond_lparen -> LPAREN .)
    DFREAD          reduce using rule 62 (cond_lparen -> LPAREN .)
    HOMERO          reduce using rule 62 (cond_lparen -> LPAREN .)
    MARGE           reduce using rule 62 (cond_lparen -> LPAREN .)


state 78

    (66) loop -> repeat cond_lparen . hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    hyper_expression               shift and go to state 127
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 79

    (69) function_call -> ID function_call_check . function_call_lparen call_params0 function_call_rparen
    (71) function_call_lparen -> . LPAREN

    LPAREN          shift and go to state 129

    function_call_lparen           shift and go to state 128

state 80

    (78) special_function_call -> MEAN LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (132) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 130
    hyper_expression               shift and go to state 131
    empty                          shift and go to state 132
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 81

    (79) special_function_call -> MEDIAN LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (132) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 133
    hyper_expression               shift and go to state 131
    empty                          shift and go to state 132
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 82

    (80) special_function_call -> MODE LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (132) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 134
    hyper_expression               shift and go to state 131
    empty                          shift and go to state 132
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 83

    (81) special_function_call -> STD LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (132) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 135
    hyper_expression               shift and go to state 131
    empty                          shift and go to state 132
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 84

    (82) special_function_call -> KURTOSIS LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (132) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 136
    hyper_expression               shift and go to state 131
    empty                          shift and go to state 132
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 85

    (83) special_function_call -> PLOT LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (132) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 137
    hyper_expression               shift and go to state 131
    empty                          shift and go to state 132
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 86

    (84) special_function_call -> DPLOT LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (132) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 138
    hyper_expression               shift and go to state 131
    empty                          shift and go to state 132
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 87

    (85) special_function_call -> VARIANCE LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (132) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 139
    hyper_expression               shift and go to state 131
    empty                          shift and go to state 132
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 88

    (86) special_function_call -> SIMMETRY LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (132) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 140
    hyper_expression               shift and go to state 131
    empty                          shift and go to state 132
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 89

    (87) special_function_call -> CORRELATION LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (132) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 141
    hyper_expression               shift and go to state 131
    empty                          shift and go to state 132
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 90

    (88) special_function_call -> DFREAD LPAREN . CONST_TEXT RPAREN

    CONST_TEXT      shift and go to state 142


state 91

    (59) array_assignment -> array_access ASSIGN . push_operator expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 143

state 92

    (12) var_declarations -> VAR simple_declaration var_declarations .

    INSTRUCTIONS    reduce using rule 12 (var_declarations -> VAR simple_declaration var_declarations .)
    PROCEDURES      reduce using rule 12 (var_declarations -> VAR simple_declaration var_declarations .)
    BEGIN           reduce using rule 12 (var_declarations -> VAR simple_declaration var_declarations .)
    RSQBRACKET      reduce using rule 12 (var_declarations -> VAR simple_declaration var_declarations .)
    RBRACKET        reduce using rule 12 (var_declarations -> VAR simple_declaration var_declarations .)
    RETURN          reduce using rule 12 (var_declarations -> VAR simple_declaration var_declarations .)


state 93

    (13) var_declarations -> VAR array_declaration var_declarations .

    INSTRUCTIONS    reduce using rule 13 (var_declarations -> VAR array_declaration var_declarations .)
    PROCEDURES      reduce using rule 13 (var_declarations -> VAR array_declaration var_declarations .)
    BEGIN           reduce using rule 13 (var_declarations -> VAR array_declaration var_declarations .)
    RSQBRACKET      reduce using rule 13 (var_declarations -> VAR array_declaration var_declarations .)
    RBRACKET        reduce using rule 13 (var_declarations -> VAR array_declaration var_declarations .)
    RETURN          reduce using rule 13 (var_declarations -> VAR array_declaration var_declarations .)


state 94

    (14) var_declarations -> VAR matrix_declaration var_declarations .

    INSTRUCTIONS    reduce using rule 14 (var_declarations -> VAR matrix_declaration var_declarations .)
    PROCEDURES      reduce using rule 14 (var_declarations -> VAR matrix_declaration var_declarations .)
    BEGIN           reduce using rule 14 (var_declarations -> VAR matrix_declaration var_declarations .)
    RSQBRACKET      reduce using rule 14 (var_declarations -> VAR matrix_declaration var_declarations .)
    RBRACKET        reduce using rule 14 (var_declarations -> VAR matrix_declaration var_declarations .)
    RETURN          reduce using rule 14 (var_declarations -> VAR matrix_declaration var_declarations .)


state 95

    (16) simple_declaration -> ID COLON . var_type SEMICOLON
    (19) var_type -> . type
    (20) var_type -> . DF
    (130) type -> . INT
    (131) type -> . FLOAT

    DF              shift and go to state 146
    INT             shift and go to state 147
    FLOAT           shift and go to state 148

    var_type                       shift and go to state 144
    type                           shift and go to state 145

state 96

    (17) array_declaration -> ID LSQBRACKET . CONST_INT RSQBRACKET COLON type SEMICOLON
    (18) matrix_declaration -> ID LSQBRACKET . CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    CONST_INT       shift and go to state 149


state 97

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET . local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (11) local_scope_init -> .

    LOCALS          reduce using rule 11 (local_scope_init -> .)
    INSTRUCTIONS    reduce using rule 11 (local_scope_init -> .)
    RSQBRACKET      reduce using rule 11 (local_scope_init -> .)

    local_scope_init               shift and go to state 150

state 98

    (23) function_declarations -> PROC ID . proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC ID . proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (27) proc_scope_init -> .

    LPAREN          reduce using rule 27 (proc_scope_init -> .)

    proc_scope_init                shift and go to state 151

state 99

    (38) statements -> write SEMICOLON statements .

    PROCEDURES      reduce using rule 38 (statements -> write SEMICOLON statements .)
    BEGIN           reduce using rule 38 (statements -> write SEMICOLON statements .)
    RSQBRACKET      reduce using rule 38 (statements -> write SEMICOLON statements .)
    RBRACKET        reduce using rule 38 (statements -> write SEMICOLON statements .)
    RETURN          reduce using rule 38 (statements -> write SEMICOLON statements .)


state 100

    (39) statements -> read SEMICOLON statements .

    PROCEDURES      reduce using rule 39 (statements -> read SEMICOLON statements .)
    BEGIN           reduce using rule 39 (statements -> read SEMICOLON statements .)
    RSQBRACKET      reduce using rule 39 (statements -> read SEMICOLON statements .)
    RBRACKET        reduce using rule 39 (statements -> read SEMICOLON statements .)
    RETURN          reduce using rule 39 (statements -> read SEMICOLON statements .)


state 101

    (40) statements -> var_assignment SEMICOLON statements .

    PROCEDURES      reduce using rule 40 (statements -> var_assignment SEMICOLON statements .)
    BEGIN           reduce using rule 40 (statements -> var_assignment SEMICOLON statements .)
    RSQBRACKET      reduce using rule 40 (statements -> var_assignment SEMICOLON statements .)
    RBRACKET        reduce using rule 40 (statements -> var_assignment SEMICOLON statements .)
    RETURN          reduce using rule 40 (statements -> var_assignment SEMICOLON statements .)


state 102

    (43) statements -> function_call SEMICOLON statements .

    PROCEDURES      reduce using rule 43 (statements -> function_call SEMICOLON statements .)
    BEGIN           reduce using rule 43 (statements -> function_call SEMICOLON statements .)
    RSQBRACKET      reduce using rule 43 (statements -> function_call SEMICOLON statements .)
    RBRACKET        reduce using rule 43 (statements -> function_call SEMICOLON statements .)
    RETURN          reduce using rule 43 (statements -> function_call SEMICOLON statements .)


state 103

    (44) statements -> special_function_call SEMICOLON statements .

    PROCEDURES      reduce using rule 44 (statements -> special_function_call SEMICOLON statements .)
    BEGIN           reduce using rule 44 (statements -> special_function_call SEMICOLON statements .)
    RSQBRACKET      reduce using rule 44 (statements -> special_function_call SEMICOLON statements .)
    RBRACKET        reduce using rule 44 (statements -> special_function_call SEMICOLON statements .)
    RETURN          reduce using rule 44 (statements -> special_function_call SEMICOLON statements .)


state 104

    (47) write_params0 -> write_operator expression . produce_write_quad write_params1
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression
    (54) produce_write_quad -> .

    ADD             shift and go to state 153
    SUB             shift and go to state 154
    COMMA           reduce using rule 54 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 54 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 152

state 105

    (48) write_params0 -> write_operator const_text . produce_write_quad write_params1
    (54) produce_write_quad -> .

    COMMA           reduce using rule 54 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 54 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 155

state 106

    (101) expression -> term . produce_exp_quad
    (102) term -> term . MUL push_operator term
    (103) term -> term . DIV push_operator term
    (108) produce_exp_quad -> .

    MUL             shift and go to state 157
    DIV             shift and go to state 158
    ADD             reduce using rule 108 (produce_exp_quad -> .)
    SUB             reduce using rule 108 (produce_exp_quad -> .)
    COMMA           reduce using rule 108 (produce_exp_quad -> .)
    SEMICOLON       reduce using rule 108 (produce_exp_quad -> .)
    RSQBRACKET      reduce using rule 108 (produce_exp_quad -> .)
    LTHAN           reduce using rule 108 (produce_exp_quad -> .)
    GTHAN           reduce using rule 108 (produce_exp_quad -> .)
    EQUAL           reduce using rule 108 (produce_exp_quad -> .)
    DIFFERENT       reduce using rule 108 (produce_exp_quad -> .)
    AND             reduce using rule 108 (produce_exp_quad -> .)
    OR              reduce using rule 108 (produce_exp_quad -> .)
    RPAREN          reduce using rule 108 (produce_exp_quad -> .)

    produce_exp_quad               shift and go to state 156

state 107

    (52) const_text -> CONST_TEXT .

    COMMA           reduce using rule 52 (const_text -> CONST_TEXT .)
    SEMICOLON       reduce using rule 52 (const_text -> CONST_TEXT .)


state 108

    (104) term -> factor . produce_term_quad
    (109) produce_term_quad -> .

    MUL             reduce using rule 109 (produce_term_quad -> .)
    DIV             reduce using rule 109 (produce_term_quad -> .)
    ADD             reduce using rule 109 (produce_term_quad -> .)
    SUB             reduce using rule 109 (produce_term_quad -> .)
    COMMA           reduce using rule 109 (produce_term_quad -> .)
    SEMICOLON       reduce using rule 109 (produce_term_quad -> .)
    RSQBRACKET      reduce using rule 109 (produce_term_quad -> .)
    LTHAN           reduce using rule 109 (produce_term_quad -> .)
    GTHAN           reduce using rule 109 (produce_term_quad -> .)
    EQUAL           reduce using rule 109 (produce_term_quad -> .)
    DIFFERENT       reduce using rule 109 (produce_term_quad -> .)
    AND             reduce using rule 109 (produce_term_quad -> .)
    OR              reduce using rule 109 (produce_term_quad -> .)
    RPAREN          reduce using rule 109 (produce_term_quad -> .)

    produce_term_quad              shift and go to state 159

state 109

    (110) factor -> identifier .
    (123) array_access -> identifier . lsqbracket expression array_rsqbracket
    (124) matrix_access -> identifier . lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (125) lsqbracket -> . LSQBRACKET

    MUL             reduce using rule 110 (factor -> identifier .)
    DIV             reduce using rule 110 (factor -> identifier .)
    ADD             reduce using rule 110 (factor -> identifier .)
    SUB             reduce using rule 110 (factor -> identifier .)
    COMMA           reduce using rule 110 (factor -> identifier .)
    SEMICOLON       reduce using rule 110 (factor -> identifier .)
    RSQBRACKET      reduce using rule 110 (factor -> identifier .)
    LTHAN           reduce using rule 110 (factor -> identifier .)
    GTHAN           reduce using rule 110 (factor -> identifier .)
    EQUAL           reduce using rule 110 (factor -> identifier .)
    DIFFERENT       reduce using rule 110 (factor -> identifier .)
    AND             reduce using rule 110 (factor -> identifier .)
    OR              reduce using rule 110 (factor -> identifier .)
    RPAREN          reduce using rule 110 (factor -> identifier .)
    LSQBRACKET      shift and go to state 75

    lsqbracket                     shift and go to state 160

state 110

    (111) factor -> const_int .

    MUL             reduce using rule 111 (factor -> const_int .)
    DIV             reduce using rule 111 (factor -> const_int .)
    ADD             reduce using rule 111 (factor -> const_int .)
    SUB             reduce using rule 111 (factor -> const_int .)
    COMMA           reduce using rule 111 (factor -> const_int .)
    SEMICOLON       reduce using rule 111 (factor -> const_int .)
    RSQBRACKET      reduce using rule 111 (factor -> const_int .)
    LTHAN           reduce using rule 111 (factor -> const_int .)
    GTHAN           reduce using rule 111 (factor -> const_int .)
    EQUAL           reduce using rule 111 (factor -> const_int .)
    DIFFERENT       reduce using rule 111 (factor -> const_int .)
    AND             reduce using rule 111 (factor -> const_int .)
    OR              reduce using rule 111 (factor -> const_int .)
    RPAREN          reduce using rule 111 (factor -> const_int .)


state 111

    (112) factor -> const_float .

    MUL             reduce using rule 112 (factor -> const_float .)
    DIV             reduce using rule 112 (factor -> const_float .)
    ADD             reduce using rule 112 (factor -> const_float .)
    SUB             reduce using rule 112 (factor -> const_float .)
    COMMA           reduce using rule 112 (factor -> const_float .)
    SEMICOLON       reduce using rule 112 (factor -> const_float .)
    RSQBRACKET      reduce using rule 112 (factor -> const_float .)
    LTHAN           reduce using rule 112 (factor -> const_float .)
    GTHAN           reduce using rule 112 (factor -> const_float .)
    EQUAL           reduce using rule 112 (factor -> const_float .)
    DIFFERENT       reduce using rule 112 (factor -> const_float .)
    AND             reduce using rule 112 (factor -> const_float .)
    OR              reduce using rule 112 (factor -> const_float .)
    RPAREN          reduce using rule 112 (factor -> const_float .)


state 112

    (113) factor -> LPAREN . push_cap expression RPAREN pop_cap
    (121) push_cap -> .

    LPAREN          reduce using rule 121 (push_cap -> .)
    ID              reduce using rule 121 (push_cap -> .)
    CONST_INT       reduce using rule 121 (push_cap -> .)
    CONST_FLOAT     reduce using rule 121 (push_cap -> .)
    MEAN            reduce using rule 121 (push_cap -> .)
    MEDIAN          reduce using rule 121 (push_cap -> .)
    MODE            reduce using rule 121 (push_cap -> .)
    STD             reduce using rule 121 (push_cap -> .)
    KURTOSIS        reduce using rule 121 (push_cap -> .)
    PLOT            reduce using rule 121 (push_cap -> .)
    DPLOT           reduce using rule 121 (push_cap -> .)
    VARIANCE        reduce using rule 121 (push_cap -> .)
    SIMMETRY        reduce using rule 121 (push_cap -> .)
    CORRELATION     reduce using rule 121 (push_cap -> .)
    DFREAD          reduce using rule 121 (push_cap -> .)
    HOMERO          reduce using rule 121 (push_cap -> .)
    MARGE           reduce using rule 121 (push_cap -> .)

    push_cap                       shift and go to state 161

state 113

    (114) factor -> array_access .

    MUL             reduce using rule 114 (factor -> array_access .)
    DIV             reduce using rule 114 (factor -> array_access .)
    ADD             reduce using rule 114 (factor -> array_access .)
    SUB             reduce using rule 114 (factor -> array_access .)
    COMMA           reduce using rule 114 (factor -> array_access .)
    SEMICOLON       reduce using rule 114 (factor -> array_access .)
    RSQBRACKET      reduce using rule 114 (factor -> array_access .)
    LTHAN           reduce using rule 114 (factor -> array_access .)
    GTHAN           reduce using rule 114 (factor -> array_access .)
    EQUAL           reduce using rule 114 (factor -> array_access .)
    DIFFERENT       reduce using rule 114 (factor -> array_access .)
    AND             reduce using rule 114 (factor -> array_access .)
    OR              reduce using rule 114 (factor -> array_access .)
    RPAREN          reduce using rule 114 (factor -> array_access .)


state 114

    (115) factor -> matrix_access .

    MUL             reduce using rule 115 (factor -> matrix_access .)
    DIV             reduce using rule 115 (factor -> matrix_access .)
    ADD             reduce using rule 115 (factor -> matrix_access .)
    SUB             reduce using rule 115 (factor -> matrix_access .)
    COMMA           reduce using rule 115 (factor -> matrix_access .)
    SEMICOLON       reduce using rule 115 (factor -> matrix_access .)
    RSQBRACKET      reduce using rule 115 (factor -> matrix_access .)
    LTHAN           reduce using rule 115 (factor -> matrix_access .)
    GTHAN           reduce using rule 115 (factor -> matrix_access .)
    EQUAL           reduce using rule 115 (factor -> matrix_access .)
    DIFFERENT       reduce using rule 115 (factor -> matrix_access .)
    AND             reduce using rule 115 (factor -> matrix_access .)
    OR              reduce using rule 115 (factor -> matrix_access .)
    RPAREN          reduce using rule 115 (factor -> matrix_access .)


state 115

    (116) factor -> function_call .

    MUL             reduce using rule 116 (factor -> function_call .)
    DIV             reduce using rule 116 (factor -> function_call .)
    ADD             reduce using rule 116 (factor -> function_call .)
    SUB             reduce using rule 116 (factor -> function_call .)
    COMMA           reduce using rule 116 (factor -> function_call .)
    SEMICOLON       reduce using rule 116 (factor -> function_call .)
    RSQBRACKET      reduce using rule 116 (factor -> function_call .)
    LTHAN           reduce using rule 116 (factor -> function_call .)
    GTHAN           reduce using rule 116 (factor -> function_call .)
    EQUAL           reduce using rule 116 (factor -> function_call .)
    DIFFERENT       reduce using rule 116 (factor -> function_call .)
    AND             reduce using rule 116 (factor -> function_call .)
    OR              reduce using rule 116 (factor -> function_call .)
    RPAREN          reduce using rule 116 (factor -> function_call .)


state 116

    (117) factor -> special_function_call .

    MUL             reduce using rule 117 (factor -> special_function_call .)
    DIV             reduce using rule 117 (factor -> special_function_call .)
    ADD             reduce using rule 117 (factor -> special_function_call .)
    SUB             reduce using rule 117 (factor -> special_function_call .)
    COMMA           reduce using rule 117 (factor -> special_function_call .)
    SEMICOLON       reduce using rule 117 (factor -> special_function_call .)
    RSQBRACKET      reduce using rule 117 (factor -> special_function_call .)
    LTHAN           reduce using rule 117 (factor -> special_function_call .)
    GTHAN           reduce using rule 117 (factor -> special_function_call .)
    EQUAL           reduce using rule 117 (factor -> special_function_call .)
    DIFFERENT       reduce using rule 117 (factor -> special_function_call .)
    AND             reduce using rule 117 (factor -> special_function_call .)
    OR              reduce using rule 117 (factor -> special_function_call .)
    RPAREN          reduce using rule 117 (factor -> special_function_call .)


state 117

    (118) identifier -> ID .
    (69) function_call -> ID . function_call_check function_call_lparen call_params0 function_call_rparen
    (70) function_call_check -> .

    LSQBRACKET      reduce using rule 118 (identifier -> ID .)
    MUL             reduce using rule 118 (identifier -> ID .)
    DIV             reduce using rule 118 (identifier -> ID .)
    ADD             reduce using rule 118 (identifier -> ID .)
    SUB             reduce using rule 118 (identifier -> ID .)
    COMMA           reduce using rule 118 (identifier -> ID .)
    SEMICOLON       reduce using rule 118 (identifier -> ID .)
    RSQBRACKET      reduce using rule 118 (identifier -> ID .)
    LTHAN           reduce using rule 118 (identifier -> ID .)
    GTHAN           reduce using rule 118 (identifier -> ID .)
    EQUAL           reduce using rule 118 (identifier -> ID .)
    DIFFERENT       reduce using rule 118 (identifier -> ID .)
    AND             reduce using rule 118 (identifier -> ID .)
    OR              reduce using rule 118 (identifier -> ID .)
    RPAREN          reduce using rule 118 (identifier -> ID .)
    LPAREN          reduce using rule 70 (function_call_check -> .)

    function_call_check            shift and go to state 79

state 118

    (119) const_int -> CONST_INT .

    MUL             reduce using rule 119 (const_int -> CONST_INT .)
    DIV             reduce using rule 119 (const_int -> CONST_INT .)
    ADD             reduce using rule 119 (const_int -> CONST_INT .)
    SUB             reduce using rule 119 (const_int -> CONST_INT .)
    COMMA           reduce using rule 119 (const_int -> CONST_INT .)
    SEMICOLON       reduce using rule 119 (const_int -> CONST_INT .)
    RSQBRACKET      reduce using rule 119 (const_int -> CONST_INT .)
    LTHAN           reduce using rule 119 (const_int -> CONST_INT .)
    GTHAN           reduce using rule 119 (const_int -> CONST_INT .)
    EQUAL           reduce using rule 119 (const_int -> CONST_INT .)
    DIFFERENT       reduce using rule 119 (const_int -> CONST_INT .)
    AND             reduce using rule 119 (const_int -> CONST_INT .)
    OR              reduce using rule 119 (const_int -> CONST_INT .)
    RPAREN          reduce using rule 119 (const_int -> CONST_INT .)


state 119

    (120) const_float -> CONST_FLOAT .

    MUL             reduce using rule 120 (const_float -> CONST_FLOAT .)
    DIV             reduce using rule 120 (const_float -> CONST_FLOAT .)
    ADD             reduce using rule 120 (const_float -> CONST_FLOAT .)
    SUB             reduce using rule 120 (const_float -> CONST_FLOAT .)
    COMMA           reduce using rule 120 (const_float -> CONST_FLOAT .)
    SEMICOLON       reduce using rule 120 (const_float -> CONST_FLOAT .)
    RSQBRACKET      reduce using rule 120 (const_float -> CONST_FLOAT .)
    LTHAN           reduce using rule 120 (const_float -> CONST_FLOAT .)
    GTHAN           reduce using rule 120 (const_float -> CONST_FLOAT .)
    EQUAL           reduce using rule 120 (const_float -> CONST_FLOAT .)
    DIFFERENT       reduce using rule 120 (const_float -> CONST_FLOAT .)
    AND             reduce using rule 120 (const_float -> CONST_FLOAT .)
    OR              reduce using rule 120 (const_float -> CONST_FLOAT .)
    RPAREN          reduce using rule 120 (const_float -> CONST_FLOAT .)


state 120

    (55) read -> READ push_operator identifier .

    SEMICOLON       reduce using rule 55 (read -> READ push_operator identifier .)


state 121

    (118) identifier -> ID .

    SEMICOLON       reduce using rule 118 (identifier -> ID .)


state 122

    (58) simple_assignment -> identifier ASSIGN push_operator . expression
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    identifier                     shift and go to state 109
    expression                     shift and go to state 162
    term                           shift and go to state 106
    factor                         shift and go to state 108
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 123

    (123) array_access -> identifier lsqbracket expression . array_rsqbracket
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression
    (126) array_rsqbracket -> . RSQBRACKET

    ADD             shift and go to state 153
    SUB             shift and go to state 154
    RSQBRACKET      shift and go to state 164

    array_rsqbracket               shift and go to state 163

state 124

    (60) condition -> IF cond_lparen hyper_expression . cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> IF cond_lparen hyper_expression . cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (91) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (92) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (63) cond_rparen -> . RPAREN

    AND             shift and go to state 166
    OR              shift and go to state 167
    RPAREN          shift and go to state 168

    cond_rparen                    shift and go to state 165

state 125

    (93) hyper_expression -> super_expression . produce_hyperexp_quad
    (94) super_expression -> super_expression . LTHAN push_operator super_expression
    (95) super_expression -> super_expression . GTHAN push_operator super_expression
    (96) super_expression -> super_expression . EQUAL push_operator super_expression
    (97) super_expression -> super_expression . DIFFERENT push_operator super_expression
    (106) produce_hyperexp_quad -> .

    LTHAN           shift and go to state 170
    GTHAN           shift and go to state 171
    EQUAL           shift and go to state 172
    DIFFERENT       shift and go to state 173
    AND             reduce using rule 106 (produce_hyperexp_quad -> .)
    OR              reduce using rule 106 (produce_hyperexp_quad -> .)
    RPAREN          reduce using rule 106 (produce_hyperexp_quad -> .)
    COMMA           reduce using rule 106 (produce_hyperexp_quad -> .)

    produce_hyperexp_quad          shift and go to state 169

state 126

    (98) super_expression -> expression . produce_superexp_quad
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression
    (107) produce_superexp_quad -> .

    ADD             shift and go to state 153
    SUB             shift and go to state 154
    LTHAN           reduce using rule 107 (produce_superexp_quad -> .)
    GTHAN           reduce using rule 107 (produce_superexp_quad -> .)
    EQUAL           reduce using rule 107 (produce_superexp_quad -> .)
    DIFFERENT       reduce using rule 107 (produce_superexp_quad -> .)
    AND             reduce using rule 107 (produce_superexp_quad -> .)
    OR              reduce using rule 107 (produce_superexp_quad -> .)
    RPAREN          reduce using rule 107 (produce_superexp_quad -> .)
    COMMA           reduce using rule 107 (produce_superexp_quad -> .)

    produce_superexp_quad          shift and go to state 174

state 127

    (66) loop -> repeat cond_lparen hyper_expression . cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (91) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (92) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (63) cond_rparen -> . RPAREN

    AND             shift and go to state 166
    OR              shift and go to state 167
    RPAREN          shift and go to state 168

    cond_rparen                    shift and go to state 175

state 128

    (69) function_call -> ID function_call_check function_call_lparen . call_params0 function_call_rparen
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (132) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 176
    hyper_expression               shift and go to state 131
    empty                          shift and go to state 132
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 129

    (71) function_call_lparen -> LPAREN .

    LPAREN          reduce using rule 71 (function_call_lparen -> LPAREN .)
    ID              reduce using rule 71 (function_call_lparen -> LPAREN .)
    CONST_INT       reduce using rule 71 (function_call_lparen -> LPAREN .)
    CONST_FLOAT     reduce using rule 71 (function_call_lparen -> LPAREN .)
    MEAN            reduce using rule 71 (function_call_lparen -> LPAREN .)
    MEDIAN          reduce using rule 71 (function_call_lparen -> LPAREN .)
    MODE            reduce using rule 71 (function_call_lparen -> LPAREN .)
    STD             reduce using rule 71 (function_call_lparen -> LPAREN .)
    KURTOSIS        reduce using rule 71 (function_call_lparen -> LPAREN .)
    PLOT            reduce using rule 71 (function_call_lparen -> LPAREN .)
    DPLOT           reduce using rule 71 (function_call_lparen -> LPAREN .)
    VARIANCE        reduce using rule 71 (function_call_lparen -> LPAREN .)
    SIMMETRY        reduce using rule 71 (function_call_lparen -> LPAREN .)
    CORRELATION     reduce using rule 71 (function_call_lparen -> LPAREN .)
    DFREAD          reduce using rule 71 (function_call_lparen -> LPAREN .)
    HOMERO          reduce using rule 71 (function_call_lparen -> LPAREN .)
    MARGE           reduce using rule 71 (function_call_lparen -> LPAREN .)
    RPAREN          reduce using rule 71 (function_call_lparen -> LPAREN .)


state 130

    (78) special_function_call -> MEAN LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 177


state 131

    (73) call_params0 -> hyper_expression . handle_call_param call_params1
    (91) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (92) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (77) handle_call_param -> .

    AND             shift and go to state 166
    OR              shift and go to state 167
    COMMA           reduce using rule 77 (handle_call_param -> .)
    RPAREN          reduce using rule 77 (handle_call_param -> .)

    handle_call_param              shift and go to state 178

state 132

    (74) call_params0 -> empty .

    RPAREN          reduce using rule 74 (call_params0 -> empty .)


state 133

    (79) special_function_call -> MEDIAN LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 179


state 134

    (80) special_function_call -> MODE LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 180


state 135

    (81) special_function_call -> STD LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 181


state 136

    (82) special_function_call -> KURTOSIS LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 182


state 137

    (83) special_function_call -> PLOT LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 183


state 138

    (84) special_function_call -> DPLOT LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 184


state 139

    (85) special_function_call -> VARIANCE LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 185


state 140

    (86) special_function_call -> SIMMETRY LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 186


state 141

    (87) special_function_call -> CORRELATION LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 187


state 142

    (88) special_function_call -> DFREAD LPAREN CONST_TEXT . RPAREN

    RPAREN          shift and go to state 188


state 143

    (59) array_assignment -> array_access ASSIGN push_operator . expression
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    array_access                   shift and go to state 113
    expression                     shift and go to state 189
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 144

    (16) simple_declaration -> ID COLON var_type . SEMICOLON

    SEMICOLON       shift and go to state 190


state 145

    (19) var_type -> type .

    SEMICOLON       reduce using rule 19 (var_type -> type .)


state 146

    (20) var_type -> DF .

    SEMICOLON       reduce using rule 20 (var_type -> DF .)


state 147

    (130) type -> INT .

    SEMICOLON       reduce using rule 130 (type -> INT .)
    COMMA           reduce using rule 130 (type -> INT .)
    RPAREN          reduce using rule 130 (type -> INT .)
    LBRACKET        reduce using rule 130 (type -> INT .)


state 148

    (131) type -> FLOAT .

    SEMICOLON       reduce using rule 131 (type -> FLOAT .)
    COMMA           reduce using rule 131 (type -> FLOAT .)
    RPAREN          reduce using rule 131 (type -> FLOAT .)
    LBRACKET        reduce using rule 131 (type -> FLOAT .)


state 149

    (17) array_declaration -> ID LSQBRACKET CONST_INT . RSQBRACKET COLON type SEMICOLON
    (18) matrix_declaration -> ID LSQBRACKET CONST_INT . RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    RSQBRACKET      shift and go to state 191


state 150

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init . local_vars_block fill_main_jump instructions_block RSQBRACKET
    (6) local_vars_block -> . LOCALS COLON var_declarations
    (7) local_vars_block -> . empty
    (132) empty -> .

    LOCALS          shift and go to state 193
    INSTRUCTIONS    reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)

    local_vars_block               shift and go to state 192
    empty                          shift and go to state 194

state 151

    (23) function_declarations -> PROC ID proc_scope_init . LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC ID proc_scope_init . LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    LPAREN          shift and go to state 195


state 152

    (47) write_params0 -> write_operator expression produce_write_quad . write_params1
    (49) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (50) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (51) write_params1 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 197
    SEMICOLON       reduce using rule 132 (empty -> .)

    write_params1                  shift and go to state 196
    empty                          shift and go to state 198

state 153

    (99) expression -> expression ADD . push_operator expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 199

state 154

    (100) expression -> expression SUB . push_operator expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 200

state 155

    (48) write_params0 -> write_operator const_text produce_write_quad . write_params1
    (49) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (50) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (51) write_params1 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 197
    SEMICOLON       reduce using rule 132 (empty -> .)

    write_params1                  shift and go to state 201
    empty                          shift and go to state 198

state 156

    (101) expression -> term produce_exp_quad .

    ADD             reduce using rule 101 (expression -> term produce_exp_quad .)
    SUB             reduce using rule 101 (expression -> term produce_exp_quad .)
    COMMA           reduce using rule 101 (expression -> term produce_exp_quad .)
    SEMICOLON       reduce using rule 101 (expression -> term produce_exp_quad .)
    RSQBRACKET      reduce using rule 101 (expression -> term produce_exp_quad .)
    LTHAN           reduce using rule 101 (expression -> term produce_exp_quad .)
    GTHAN           reduce using rule 101 (expression -> term produce_exp_quad .)
    EQUAL           reduce using rule 101 (expression -> term produce_exp_quad .)
    DIFFERENT       reduce using rule 101 (expression -> term produce_exp_quad .)
    AND             reduce using rule 101 (expression -> term produce_exp_quad .)
    OR              reduce using rule 101 (expression -> term produce_exp_quad .)
    RPAREN          reduce using rule 101 (expression -> term produce_exp_quad .)


state 157

    (102) term -> term MUL . push_operator term
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 202

state 158

    (103) term -> term DIV . push_operator term
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 203

state 159

    (104) term -> factor produce_term_quad .

    MUL             reduce using rule 104 (term -> factor produce_term_quad .)
    DIV             reduce using rule 104 (term -> factor produce_term_quad .)
    ADD             reduce using rule 104 (term -> factor produce_term_quad .)
    SUB             reduce using rule 104 (term -> factor produce_term_quad .)
    COMMA           reduce using rule 104 (term -> factor produce_term_quad .)
    SEMICOLON       reduce using rule 104 (term -> factor produce_term_quad .)
    RSQBRACKET      reduce using rule 104 (term -> factor produce_term_quad .)
    LTHAN           reduce using rule 104 (term -> factor produce_term_quad .)
    GTHAN           reduce using rule 104 (term -> factor produce_term_quad .)
    EQUAL           reduce using rule 104 (term -> factor produce_term_quad .)
    DIFFERENT       reduce using rule 104 (term -> factor produce_term_quad .)
    AND             reduce using rule 104 (term -> factor produce_term_quad .)
    OR              reduce using rule 104 (term -> factor produce_term_quad .)
    RPAREN          reduce using rule 104 (term -> factor produce_term_quad .)


state 160

    (123) array_access -> identifier lsqbracket . expression array_rsqbracket
    (124) matrix_access -> identifier lsqbracket . expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    identifier                     shift and go to state 109
    expression                     shift and go to state 204
    term                           shift and go to state 106
    factor                         shift and go to state 108
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 161

    (113) factor -> LPAREN push_cap . expression RPAREN pop_cap
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 205
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 162

    (58) simple_assignment -> identifier ASSIGN push_operator expression .
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

    SEMICOLON       reduce using rule 58 (simple_assignment -> identifier ASSIGN push_operator expression .)
    ADD             shift and go to state 153
    SUB             shift and go to state 154


state 163

    (123) array_access -> identifier lsqbracket expression array_rsqbracket .

    ASSIGN          reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    MUL             reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    DIV             reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    ADD             reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    SUB             reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    COMMA           reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    SEMICOLON       reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    RSQBRACKET      reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    LTHAN           reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    GTHAN           reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    EQUAL           reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    DIFFERENT       reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    AND             reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    OR              reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    RPAREN          reduce using rule 123 (array_access -> identifier lsqbracket expression array_rsqbracket .)


state 164

    (126) array_rsqbracket -> RSQBRACKET .

    ASSIGN          reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    MUL             reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    DIV             reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    ADD             reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    SUB             reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    RSQBRACKET      reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)


state 165

    (60) condition -> IF cond_lparen hyper_expression cond_rparen . LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> IF cond_lparen hyper_expression cond_rparen . LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump

    LBRACKET        shift and go to state 206


state 166

    (91) hyper_expression -> hyper_expression AND . push_operator hyper_expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 207

state 167

    (92) hyper_expression -> hyper_expression OR . push_operator hyper_expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 208

state 168

    (63) cond_rparen -> RPAREN .

    LBRACKET        reduce using rule 63 (cond_rparen -> RPAREN .)


state 169

    (93) hyper_expression -> super_expression produce_hyperexp_quad .

    AND             reduce using rule 93 (hyper_expression -> super_expression produce_hyperexp_quad .)
    OR              reduce using rule 93 (hyper_expression -> super_expression produce_hyperexp_quad .)
    RPAREN          reduce using rule 93 (hyper_expression -> super_expression produce_hyperexp_quad .)
    COMMA           reduce using rule 93 (hyper_expression -> super_expression produce_hyperexp_quad .)


state 170

    (94) super_expression -> super_expression LTHAN . push_operator super_expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 209

state 171

    (95) super_expression -> super_expression GTHAN . push_operator super_expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 210

state 172

    (96) super_expression -> super_expression EQUAL . push_operator super_expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 211

state 173

    (97) super_expression -> super_expression DIFFERENT . push_operator super_expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 212

state 174

    (98) super_expression -> expression produce_superexp_quad .

    LTHAN           reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    GTHAN           reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    EQUAL           reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    DIFFERENT       reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    AND             reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    OR              reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    RPAREN          reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    COMMA           reduce using rule 98 (super_expression -> expression produce_superexp_quad .)


state 175

    (66) loop -> repeat cond_lparen hyper_expression cond_rparen . LBRACKET statements RBRACKET fill_returning_jump

    LBRACKET        shift and go to state 213


state 176

    (69) function_call -> ID function_call_check function_call_lparen call_params0 . function_call_rparen
    (72) function_call_rparen -> . RPAREN

    RPAREN          shift and go to state 215

    function_call_rparen           shift and go to state 214

state 177

    (78) special_function_call -> MEAN LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    AND             reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    OR              reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)


state 178

    (73) call_params0 -> hyper_expression handle_call_param . call_params1
    (75) call_params1 -> . COMMA hyper_expression handle_call_param call_params1
    (76) call_params1 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 217
    RPAREN          reduce using rule 132 (empty -> .)

    call_params1                   shift and go to state 216
    empty                          shift and go to state 218

state 179

    (79) special_function_call -> MEDIAN LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    AND             reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    OR              reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)


state 180

    (80) special_function_call -> MODE LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    AND             reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    OR              reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)


state 181

    (81) special_function_call -> STD LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    AND             reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    OR              reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)


state 182

    (82) special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    AND             reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    OR              reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)


state 183

    (83) special_function_call -> PLOT LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    AND             reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    OR              reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)


state 184

    (84) special_function_call -> DPLOT LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    AND             reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    OR              reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)


state 185

    (85) special_function_call -> VARIANCE LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    AND             reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    OR              reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)


state 186

    (86) special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    AND             reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    OR              reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)


state 187

    (87) special_function_call -> CORRELATION LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    AND             reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    OR              reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)


state 188

    (88) special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .

    SEMICOLON       reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    MUL             reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    DIV             reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    ADD             reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    SUB             reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    COMMA           reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    RSQBRACKET      reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    LTHAN           reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    GTHAN           reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    EQUAL           reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    DIFFERENT       reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    AND             reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    OR              reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    RPAREN          reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)


state 189

    (59) array_assignment -> array_access ASSIGN push_operator expression .
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

    SEMICOLON       reduce using rule 59 (array_assignment -> array_access ASSIGN push_operator expression .)
    ADD             shift and go to state 153
    SUB             shift and go to state 154


state 190

    (16) simple_declaration -> ID COLON var_type SEMICOLON .

    VAR             reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)
    INSTRUCTIONS    reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)
    PROCEDURES      reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)
    BEGIN           reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)
    RSQBRACKET      reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)
    RBRACKET        reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)
    RETURN          reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)


state 191

    (17) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET . COLON type SEMICOLON
    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET . LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    COLON           shift and go to state 220
    LSQBRACKET      shift and go to state 219


state 192

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block . fill_main_jump instructions_block RSQBRACKET
    (3) fill_main_jump -> .

    INSTRUCTIONS    reduce using rule 3 (fill_main_jump -> .)
    RSQBRACKET      reduce using rule 3 (fill_main_jump -> .)

    fill_main_jump                 shift and go to state 221

state 193

    (6) local_vars_block -> LOCALS . COLON var_declarations

    COLON           shift and go to state 222


state 194

    (7) local_vars_block -> empty .

    INSTRUCTIONS    reduce using rule 7 (local_vars_block -> empty .)
    RSQBRACKET      reduce using rule 7 (local_vars_block -> empty .)
    RBRACKET        reduce using rule 7 (local_vars_block -> empty .)
    RETURN          reduce using rule 7 (local_vars_block -> empty .)


state 195

    (23) function_declarations -> PROC ID proc_scope_init LPAREN . params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC ID proc_scope_init LPAREN . params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (33) params0 -> . param params1
    (34) params0 -> . empty
    (37) param -> . ID COLON type
    (132) empty -> .

    ID              shift and go to state 223
    RPAREN          reduce using rule 132 (empty -> .)

    params0                        shift and go to state 224
    param                          shift and go to state 225
    empty                          shift and go to state 226

state 196

    (47) write_params0 -> write_operator expression produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 47 (write_params0 -> write_operator expression produce_write_quad write_params1 .)


state 197

    (49) write_params1 -> COMMA . write_operator expression produce_write_quad write_params1
    (50) write_params1 -> COMMA . write_operator const_text produce_write_quad write_params1
    (53) write_operator -> .

    CONST_TEXT      reduce using rule 53 (write_operator -> .)
    LPAREN          reduce using rule 53 (write_operator -> .)
    ID              reduce using rule 53 (write_operator -> .)
    CONST_INT       reduce using rule 53 (write_operator -> .)
    CONST_FLOAT     reduce using rule 53 (write_operator -> .)
    MEAN            reduce using rule 53 (write_operator -> .)
    MEDIAN          reduce using rule 53 (write_operator -> .)
    MODE            reduce using rule 53 (write_operator -> .)
    STD             reduce using rule 53 (write_operator -> .)
    KURTOSIS        reduce using rule 53 (write_operator -> .)
    PLOT            reduce using rule 53 (write_operator -> .)
    DPLOT           reduce using rule 53 (write_operator -> .)
    VARIANCE        reduce using rule 53 (write_operator -> .)
    SIMMETRY        reduce using rule 53 (write_operator -> .)
    CORRELATION     reduce using rule 53 (write_operator -> .)
    DFREAD          reduce using rule 53 (write_operator -> .)
    HOMERO          reduce using rule 53 (write_operator -> .)
    MARGE           reduce using rule 53 (write_operator -> .)

    write_operator                 shift and go to state 227

state 198

    (51) write_params1 -> empty .

    SEMICOLON       reduce using rule 51 (write_params1 -> empty .)


state 199

    (99) expression -> expression ADD push_operator . expression
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 228
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 200

    (100) expression -> expression SUB push_operator . expression
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 229
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 201

    (48) write_params0 -> write_operator const_text produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 48 (write_params0 -> write_operator const_text produce_write_quad write_params1 .)


state 202

    (102) term -> term MUL push_operator . term
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    term                           shift and go to state 230
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 203

    (103) term -> term DIV push_operator . term
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    term                           shift and go to state 231
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 204

    (123) array_access -> identifier lsqbracket expression . array_rsqbracket
    (124) matrix_access -> identifier lsqbracket expression . matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression
    (126) array_rsqbracket -> . RSQBRACKET
    (127) matrix_rsqbracket_1 -> . RSQBRACKET

    ADD             shift and go to state 153
    SUB             shift and go to state 154
    RSQBRACKET      shift and go to state 233

    array_rsqbracket               shift and go to state 163
    matrix_rsqbracket_1            shift and go to state 232

state 205

    (113) factor -> LPAREN push_cap expression . RPAREN pop_cap
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

    RPAREN          shift and go to state 234
    ADD             shift and go to state 153
    SUB             shift and go to state 154


state 206

    (60) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET . statements RBRACKET fill_pending_jump
    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET . statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (132) empty -> .
    (58) simple_assignment -> . identifier ASSIGN push_operator expression
    (59) array_assignment -> . array_access ASSIGN push_operator expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    RBRACKET        reduce using rule 132 (empty -> .)
    REPEAT          shift and go to state 54

    statements                     shift and go to state 235
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    repeat                         shift and go to state 38
    array_access                   shift and go to state 53

state 207

    (91) hyper_expression -> hyper_expression AND push_operator . hyper_expression
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    hyper_expression               shift and go to state 236
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 208

    (92) hyper_expression -> hyper_expression OR push_operator . hyper_expression
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    hyper_expression               shift and go to state 237
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 209

    (94) super_expression -> super_expression LTHAN push_operator . super_expression
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    super_expression               shift and go to state 238
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 210

    (95) super_expression -> super_expression GTHAN push_operator . super_expression
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    super_expression               shift and go to state 239
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 211

    (96) super_expression -> super_expression EQUAL push_operator . super_expression
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    super_expression               shift and go to state 240
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 212

    (97) super_expression -> super_expression DIFFERENT push_operator . super_expression
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    super_expression               shift and go to state 241
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 213

    (66) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET . statements RBRACKET fill_returning_jump
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (132) empty -> .
    (58) simple_assignment -> . identifier ASSIGN push_operator expression
    (59) array_assignment -> . array_access ASSIGN push_operator expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    RBRACKET        reduce using rule 132 (empty -> .)
    REPEAT          shift and go to state 54

    repeat                         shift and go to state 38
    statements                     shift and go to state 242
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    array_access                   shift and go to state 53

state 214

    (69) function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .

    SEMICOLON       reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    MUL             reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    DIV             reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    ADD             reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    SUB             reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    COMMA           reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    RSQBRACKET      reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    LTHAN           reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    GTHAN           reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    EQUAL           reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    DIFFERENT       reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    AND             reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    OR              reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    RPAREN          reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)


state 215

    (72) function_call_rparen -> RPAREN .

    SEMICOLON       reduce using rule 72 (function_call_rparen -> RPAREN .)
    MUL             reduce using rule 72 (function_call_rparen -> RPAREN .)
    DIV             reduce using rule 72 (function_call_rparen -> RPAREN .)
    ADD             reduce using rule 72 (function_call_rparen -> RPAREN .)
    SUB             reduce using rule 72 (function_call_rparen -> RPAREN .)
    COMMA           reduce using rule 72 (function_call_rparen -> RPAREN .)
    RSQBRACKET      reduce using rule 72 (function_call_rparen -> RPAREN .)
    LTHAN           reduce using rule 72 (function_call_rparen -> RPAREN .)
    GTHAN           reduce using rule 72 (function_call_rparen -> RPAREN .)
    EQUAL           reduce using rule 72 (function_call_rparen -> RPAREN .)
    DIFFERENT       reduce using rule 72 (function_call_rparen -> RPAREN .)
    AND             reduce using rule 72 (function_call_rparen -> RPAREN .)
    OR              reduce using rule 72 (function_call_rparen -> RPAREN .)
    RPAREN          reduce using rule 72 (function_call_rparen -> RPAREN .)


state 216

    (73) call_params0 -> hyper_expression handle_call_param call_params1 .

    RPAREN          reduce using rule 73 (call_params0 -> hyper_expression handle_call_param call_params1 .)


state 217

    (75) call_params1 -> COMMA . hyper_expression handle_call_param call_params1
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    hyper_expression               shift and go to state 243
    super_expression               shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 218

    (76) call_params1 -> empty .

    RPAREN          reduce using rule 76 (call_params1 -> empty .)


state 219

    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET . CONST_INT RSQBRACKET COLON type SEMICOLON

    CONST_INT       shift and go to state 244


state 220

    (17) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON . type SEMICOLON
    (130) type -> . INT
    (131) type -> . FLOAT

    INT             shift and go to state 147
    FLOAT           shift and go to state 148

    type                           shift and go to state 245

state 221

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump . instructions_block RSQBRACKET
    (8) instructions_block -> . INSTRUCTIONS COLON statements
    (9) instructions_block -> . empty
    (132) empty -> .

    INSTRUCTIONS    shift and go to state 11
    RSQBRACKET      reduce using rule 132 (empty -> .)

    instructions_block             shift and go to state 246
    empty                          shift and go to state 12

state 222

    (6) local_vars_block -> LOCALS COLON . var_declarations
    (12) var_declarations -> . VAR simple_declaration var_declarations
    (13) var_declarations -> . VAR array_declaration var_declarations
    (14) var_declarations -> . VAR matrix_declaration var_declarations
    (15) var_declarations -> . empty
    (132) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 132 (empty -> .)
    RSQBRACKET      reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)

    var_declarations               shift and go to state 247
    empty                          shift and go to state 20

state 223

    (37) param -> ID . COLON type

    COLON           shift and go to state 248


state 224

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 . RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 . RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    RPAREN          shift and go to state 249


state 225

    (33) params0 -> param . params1
    (35) params1 -> . COMMA param params1
    (36) params1 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 251
    RPAREN          reduce using rule 132 (empty -> .)

    params1                        shift and go to state 250
    empty                          shift and go to state 252

state 226

    (34) params0 -> empty .

    RPAREN          reduce using rule 34 (params0 -> empty .)


state 227

    (49) write_params1 -> COMMA write_operator . expression produce_write_quad write_params1
    (50) write_params1 -> COMMA write_operator . const_text produce_write_quad write_params1
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (52) const_text -> . CONST_TEXT
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    CONST_TEXT      shift and go to state 107
    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 253
    const_text                     shift and go to state 254
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 228

    (99) expression -> expression ADD push_operator expression .
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    COMMA           reduce using rule 99 (expression -> expression ADD push_operator expression .)
    SEMICOLON       reduce using rule 99 (expression -> expression ADD push_operator expression .)
    RSQBRACKET      reduce using rule 99 (expression -> expression ADD push_operator expression .)
    LTHAN           reduce using rule 99 (expression -> expression ADD push_operator expression .)
    GTHAN           reduce using rule 99 (expression -> expression ADD push_operator expression .)
    EQUAL           reduce using rule 99 (expression -> expression ADD push_operator expression .)
    DIFFERENT       reduce using rule 99 (expression -> expression ADD push_operator expression .)
    AND             reduce using rule 99 (expression -> expression ADD push_operator expression .)
    OR              reduce using rule 99 (expression -> expression ADD push_operator expression .)
    RPAREN          reduce using rule 99 (expression -> expression ADD push_operator expression .)
    ADD             shift and go to state 153
    SUB             shift and go to state 154

  ! ADD             [ reduce using rule 99 (expression -> expression ADD push_operator expression .) ]
  ! SUB             [ reduce using rule 99 (expression -> expression ADD push_operator expression .) ]


state 229

    (100) expression -> expression SUB push_operator expression .
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    COMMA           reduce using rule 100 (expression -> expression SUB push_operator expression .)
    SEMICOLON       reduce using rule 100 (expression -> expression SUB push_operator expression .)
    RSQBRACKET      reduce using rule 100 (expression -> expression SUB push_operator expression .)
    LTHAN           reduce using rule 100 (expression -> expression SUB push_operator expression .)
    GTHAN           reduce using rule 100 (expression -> expression SUB push_operator expression .)
    EQUAL           reduce using rule 100 (expression -> expression SUB push_operator expression .)
    DIFFERENT       reduce using rule 100 (expression -> expression SUB push_operator expression .)
    AND             reduce using rule 100 (expression -> expression SUB push_operator expression .)
    OR              reduce using rule 100 (expression -> expression SUB push_operator expression .)
    RPAREN          reduce using rule 100 (expression -> expression SUB push_operator expression .)
    ADD             shift and go to state 153
    SUB             shift and go to state 154

  ! ADD             [ reduce using rule 100 (expression -> expression SUB push_operator expression .) ]
  ! SUB             [ reduce using rule 100 (expression -> expression SUB push_operator expression .) ]


state 230

    (102) term -> term MUL push_operator term .
    (102) term -> term . MUL push_operator term
    (103) term -> term . DIV push_operator term

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    ADD             reduce using rule 102 (term -> term MUL push_operator term .)
    SUB             reduce using rule 102 (term -> term MUL push_operator term .)
    COMMA           reduce using rule 102 (term -> term MUL push_operator term .)
    SEMICOLON       reduce using rule 102 (term -> term MUL push_operator term .)
    RSQBRACKET      reduce using rule 102 (term -> term MUL push_operator term .)
    LTHAN           reduce using rule 102 (term -> term MUL push_operator term .)
    GTHAN           reduce using rule 102 (term -> term MUL push_operator term .)
    EQUAL           reduce using rule 102 (term -> term MUL push_operator term .)
    DIFFERENT       reduce using rule 102 (term -> term MUL push_operator term .)
    AND             reduce using rule 102 (term -> term MUL push_operator term .)
    OR              reduce using rule 102 (term -> term MUL push_operator term .)
    RPAREN          reduce using rule 102 (term -> term MUL push_operator term .)
    MUL             shift and go to state 157
    DIV             shift and go to state 158

  ! MUL             [ reduce using rule 102 (term -> term MUL push_operator term .) ]
  ! DIV             [ reduce using rule 102 (term -> term MUL push_operator term .) ]


state 231

    (103) term -> term DIV push_operator term .
    (102) term -> term . MUL push_operator term
    (103) term -> term . DIV push_operator term

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    ADD             reduce using rule 103 (term -> term DIV push_operator term .)
    SUB             reduce using rule 103 (term -> term DIV push_operator term .)
    COMMA           reduce using rule 103 (term -> term DIV push_operator term .)
    SEMICOLON       reduce using rule 103 (term -> term DIV push_operator term .)
    RSQBRACKET      reduce using rule 103 (term -> term DIV push_operator term .)
    LTHAN           reduce using rule 103 (term -> term DIV push_operator term .)
    GTHAN           reduce using rule 103 (term -> term DIV push_operator term .)
    EQUAL           reduce using rule 103 (term -> term DIV push_operator term .)
    DIFFERENT       reduce using rule 103 (term -> term DIV push_operator term .)
    AND             reduce using rule 103 (term -> term DIV push_operator term .)
    OR              reduce using rule 103 (term -> term DIV push_operator term .)
    RPAREN          reduce using rule 103 (term -> term DIV push_operator term .)
    MUL             shift and go to state 157
    DIV             shift and go to state 158

  ! MUL             [ reduce using rule 103 (term -> term DIV push_operator term .) ]
  ! DIV             [ reduce using rule 103 (term -> term DIV push_operator term .) ]


state 232

    (124) matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 . matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (128) matrix_lsqbracket_2 -> . LSQBRACKET

    LSQBRACKET      shift and go to state 256

    matrix_lsqbracket_2            shift and go to state 255

state 233

    (126) array_rsqbracket -> RSQBRACKET .
    (127) matrix_rsqbracket_1 -> RSQBRACKET .

    MUL             reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    DIV             reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    ADD             reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    SUB             reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    COMMA           reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    SEMICOLON       reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    RSQBRACKET      reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    LTHAN           reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    GTHAN           reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    EQUAL           reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    DIFFERENT       reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    AND             reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    OR              reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    RPAREN          reduce using rule 126 (array_rsqbracket -> RSQBRACKET .)
    LSQBRACKET      reduce using rule 127 (matrix_rsqbracket_1 -> RSQBRACKET .)


state 234

    (113) factor -> LPAREN push_cap expression RPAREN . pop_cap
    (122) pop_cap -> .

    MUL             reduce using rule 122 (pop_cap -> .)
    DIV             reduce using rule 122 (pop_cap -> .)
    ADD             reduce using rule 122 (pop_cap -> .)
    SUB             reduce using rule 122 (pop_cap -> .)
    COMMA           reduce using rule 122 (pop_cap -> .)
    SEMICOLON       reduce using rule 122 (pop_cap -> .)
    RSQBRACKET      reduce using rule 122 (pop_cap -> .)
    LTHAN           reduce using rule 122 (pop_cap -> .)
    GTHAN           reduce using rule 122 (pop_cap -> .)
    EQUAL           reduce using rule 122 (pop_cap -> .)
    DIFFERENT       reduce using rule 122 (pop_cap -> .)
    AND             reduce using rule 122 (pop_cap -> .)
    OR              reduce using rule 122 (pop_cap -> .)
    RPAREN          reduce using rule 122 (pop_cap -> .)

    pop_cap                        shift and go to state 257

state 235

    (60) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements . RBRACKET fill_pending_jump
    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements . RBRACKET else LBRACKET statements RBRACKET fill_pending_jump

    RBRACKET        shift and go to state 258


state 236

    (91) hyper_expression -> hyper_expression AND push_operator hyper_expression .
    (91) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (92) hyper_expression -> hyper_expression . OR push_operator hyper_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 91 (hyper_expression -> hyper_expression AND push_operator hyper_expression .)
    COMMA           reduce using rule 91 (hyper_expression -> hyper_expression AND push_operator hyper_expression .)
    AND             shift and go to state 166
    OR              shift and go to state 167

  ! AND             [ reduce using rule 91 (hyper_expression -> hyper_expression AND push_operator hyper_expression .) ]
  ! OR              [ reduce using rule 91 (hyper_expression -> hyper_expression AND push_operator hyper_expression .) ]


state 237

    (92) hyper_expression -> hyper_expression OR push_operator hyper_expression .
    (91) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (92) hyper_expression -> hyper_expression . OR push_operator hyper_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 92 (hyper_expression -> hyper_expression OR push_operator hyper_expression .)
    COMMA           reduce using rule 92 (hyper_expression -> hyper_expression OR push_operator hyper_expression .)
    AND             shift and go to state 166
    OR              shift and go to state 167

  ! AND             [ reduce using rule 92 (hyper_expression -> hyper_expression OR push_operator hyper_expression .) ]
  ! OR              [ reduce using rule 92 (hyper_expression -> hyper_expression OR push_operator hyper_expression .) ]


state 238

    (94) super_expression -> super_expression LTHAN push_operator super_expression .
    (94) super_expression -> super_expression . LTHAN push_operator super_expression
    (95) super_expression -> super_expression . GTHAN push_operator super_expression
    (96) super_expression -> super_expression . EQUAL push_operator super_expression
    (97) super_expression -> super_expression . DIFFERENT push_operator super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .)
    OR              reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .)
    RPAREN          reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .)
    COMMA           reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .)
    LTHAN           shift and go to state 170
    GTHAN           shift and go to state 171
    EQUAL           shift and go to state 172
    DIFFERENT       shift and go to state 173

  ! LTHAN           [ reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .) ]


state 239

    (95) super_expression -> super_expression GTHAN push_operator super_expression .
    (94) super_expression -> super_expression . LTHAN push_operator super_expression
    (95) super_expression -> super_expression . GTHAN push_operator super_expression
    (96) super_expression -> super_expression . EQUAL push_operator super_expression
    (97) super_expression -> super_expression . DIFFERENT push_operator super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .)
    OR              reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .)
    RPAREN          reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .)
    COMMA           reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .)
    LTHAN           shift and go to state 170
    GTHAN           shift and go to state 171
    EQUAL           shift and go to state 172
    DIFFERENT       shift and go to state 173

  ! LTHAN           [ reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .) ]


state 240

    (96) super_expression -> super_expression EQUAL push_operator super_expression .
    (94) super_expression -> super_expression . LTHAN push_operator super_expression
    (95) super_expression -> super_expression . GTHAN push_operator super_expression
    (96) super_expression -> super_expression . EQUAL push_operator super_expression
    (97) super_expression -> super_expression . DIFFERENT push_operator super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .)
    OR              reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .)
    RPAREN          reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .)
    COMMA           reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .)
    LTHAN           shift and go to state 170
    GTHAN           shift and go to state 171
    EQUAL           shift and go to state 172
    DIFFERENT       shift and go to state 173

  ! LTHAN           [ reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .) ]


state 241

    (97) super_expression -> super_expression DIFFERENT push_operator super_expression .
    (94) super_expression -> super_expression . LTHAN push_operator super_expression
    (95) super_expression -> super_expression . GTHAN push_operator super_expression
    (96) super_expression -> super_expression . EQUAL push_operator super_expression
    (97) super_expression -> super_expression . DIFFERENT push_operator super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 97 (super_expression -> super_expression DIFFERENT push_operator super_expression .)
    OR              reduce using rule 97 (super_expression -> super_expression DIFFERENT push_operator super_expression .)
    RPAREN          reduce using rule 97 (super_expression -> super_expression DIFFERENT push_operator super_expression .)
    COMMA           reduce using rule 97 (super_expression -> super_expression DIFFERENT push_operator super_expression .)
    LTHAN           shift and go to state 170
    GTHAN           shift and go to state 171
    EQUAL           shift and go to state 172
    DIFFERENT       shift and go to state 173

  ! LTHAN           [ reduce using rule 97 (super_expression -> super_expression DIFFERENT push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 97 (super_expression -> super_expression DIFFERENT push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 97 (super_expression -> super_expression DIFFERENT push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 97 (super_expression -> super_expression DIFFERENT push_operator super_expression .) ]


state 242

    (66) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements . RBRACKET fill_returning_jump

    RBRACKET        shift and go to state 259


state 243

    (75) call_params1 -> COMMA hyper_expression . handle_call_param call_params1
    (91) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (92) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (77) handle_call_param -> .

    AND             shift and go to state 166
    OR              shift and go to state 167
    COMMA           reduce using rule 77 (handle_call_param -> .)
    RPAREN          reduce using rule 77 (handle_call_param -> .)

    handle_call_param              shift and go to state 260

state 244

    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT . RSQBRACKET COLON type SEMICOLON

    RSQBRACKET      shift and go to state 261


state 245

    (17) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type . SEMICOLON

    SEMICOLON       shift and go to state 262


state 246

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block . RSQBRACKET

    RSQBRACKET      shift and go to state 263


state 247

    (6) local_vars_block -> LOCALS COLON var_declarations .

    INSTRUCTIONS    reduce using rule 6 (local_vars_block -> LOCALS COLON var_declarations .)
    RSQBRACKET      reduce using rule 6 (local_vars_block -> LOCALS COLON var_declarations .)
    RBRACKET        reduce using rule 6 (local_vars_block -> LOCALS COLON var_declarations .)
    RETURN          reduce using rule 6 (local_vars_block -> LOCALS COLON var_declarations .)


state 248

    (37) param -> ID COLON . type
    (130) type -> . INT
    (131) type -> . FLOAT

    INT             shift and go to state 147
    FLOAT           shift and go to state 148

    type                           shift and go to state 264

state 249

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN . COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN . COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    COLON           shift and go to state 265


state 250

    (33) params0 -> param params1 .

    RPAREN          reduce using rule 33 (params0 -> param params1 .)


state 251

    (35) params1 -> COMMA . param params1
    (37) param -> . ID COLON type

    ID              shift and go to state 223

    param                          shift and go to state 266

state 252

    (36) params1 -> empty .

    RPAREN          reduce using rule 36 (params1 -> empty .)


state 253

    (49) write_params1 -> COMMA write_operator expression . produce_write_quad write_params1
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression
    (54) produce_write_quad -> .

    ADD             shift and go to state 153
    SUB             shift and go to state 154
    COMMA           reduce using rule 54 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 54 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 267

state 254

    (50) write_params1 -> COMMA write_operator const_text . produce_write_quad write_params1
    (54) produce_write_quad -> .

    COMMA           reduce using rule 54 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 54 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 268

state 255

    (124) matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 . expression matrix_rsqbracket_2
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    identifier                     shift and go to state 109
    expression                     shift and go to state 269
    term                           shift and go to state 106
    factor                         shift and go to state 108
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 256

    (128) matrix_lsqbracket_2 -> LSQBRACKET .

    LPAREN          reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    ID              reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    CONST_INT       reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    CONST_FLOAT     reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    MEAN            reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    MEDIAN          reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    MODE            reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    STD             reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    KURTOSIS        reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    PLOT            reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    DPLOT           reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    VARIANCE        reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    SIMMETRY        reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    CORRELATION     reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    DFREAD          reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    HOMERO          reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)
    MARGE           reduce using rule 128 (matrix_lsqbracket_2 -> LSQBRACKET .)


state 257

    (113) factor -> LPAREN push_cap expression RPAREN pop_cap .

    MUL             reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    DIV             reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    ADD             reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    SUB             reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    COMMA           reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    SEMICOLON       reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    RSQBRACKET      reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    LTHAN           reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    GTHAN           reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    EQUAL           reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    DIFFERENT       reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    AND             reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    OR              reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    RPAREN          reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)


state 258

    (60) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET . fill_pending_jump
    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET . else LBRACKET statements RBRACKET fill_pending_jump
    (64) fill_pending_jump -> .
    (65) else -> . ELSE

    WRITE           reduce using rule 64 (fill_pending_jump -> .)
    READ            reduce using rule 64 (fill_pending_jump -> .)
    IF              reduce using rule 64 (fill_pending_jump -> .)
    ID              reduce using rule 64 (fill_pending_jump -> .)
    MEAN            reduce using rule 64 (fill_pending_jump -> .)
    MEDIAN          reduce using rule 64 (fill_pending_jump -> .)
    MODE            reduce using rule 64 (fill_pending_jump -> .)
    STD             reduce using rule 64 (fill_pending_jump -> .)
    KURTOSIS        reduce using rule 64 (fill_pending_jump -> .)
    PLOT            reduce using rule 64 (fill_pending_jump -> .)
    DPLOT           reduce using rule 64 (fill_pending_jump -> .)
    VARIANCE        reduce using rule 64 (fill_pending_jump -> .)
    SIMMETRY        reduce using rule 64 (fill_pending_jump -> .)
    CORRELATION     reduce using rule 64 (fill_pending_jump -> .)
    DFREAD          reduce using rule 64 (fill_pending_jump -> .)
    HOMERO          reduce using rule 64 (fill_pending_jump -> .)
    MARGE           reduce using rule 64 (fill_pending_jump -> .)
    REPEAT          reduce using rule 64 (fill_pending_jump -> .)
    PROCEDURES      reduce using rule 64 (fill_pending_jump -> .)
    BEGIN           reduce using rule 64 (fill_pending_jump -> .)
    RSQBRACKET      reduce using rule 64 (fill_pending_jump -> .)
    RBRACKET        reduce using rule 64 (fill_pending_jump -> .)
    RETURN          reduce using rule 64 (fill_pending_jump -> .)
    ELSE            shift and go to state 272

    fill_pending_jump              shift and go to state 270
    else                           shift and go to state 271

state 259

    (66) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET . fill_returning_jump
    (68) fill_returning_jump -> .

    WRITE           reduce using rule 68 (fill_returning_jump -> .)
    READ            reduce using rule 68 (fill_returning_jump -> .)
    IF              reduce using rule 68 (fill_returning_jump -> .)
    ID              reduce using rule 68 (fill_returning_jump -> .)
    MEAN            reduce using rule 68 (fill_returning_jump -> .)
    MEDIAN          reduce using rule 68 (fill_returning_jump -> .)
    MODE            reduce using rule 68 (fill_returning_jump -> .)
    STD             reduce using rule 68 (fill_returning_jump -> .)
    KURTOSIS        reduce using rule 68 (fill_returning_jump -> .)
    PLOT            reduce using rule 68 (fill_returning_jump -> .)
    DPLOT           reduce using rule 68 (fill_returning_jump -> .)
    VARIANCE        reduce using rule 68 (fill_returning_jump -> .)
    SIMMETRY        reduce using rule 68 (fill_returning_jump -> .)
    CORRELATION     reduce using rule 68 (fill_returning_jump -> .)
    DFREAD          reduce using rule 68 (fill_returning_jump -> .)
    HOMERO          reduce using rule 68 (fill_returning_jump -> .)
    MARGE           reduce using rule 68 (fill_returning_jump -> .)
    REPEAT          reduce using rule 68 (fill_returning_jump -> .)
    PROCEDURES      reduce using rule 68 (fill_returning_jump -> .)
    BEGIN           reduce using rule 68 (fill_returning_jump -> .)
    RSQBRACKET      reduce using rule 68 (fill_returning_jump -> .)
    RBRACKET        reduce using rule 68 (fill_returning_jump -> .)
    RETURN          reduce using rule 68 (fill_returning_jump -> .)

    fill_returning_jump            shift and go to state 273

state 260

    (75) call_params1 -> COMMA hyper_expression handle_call_param . call_params1
    (75) call_params1 -> . COMMA hyper_expression handle_call_param call_params1
    (76) call_params1 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 217
    RPAREN          reduce using rule 132 (empty -> .)

    call_params1                   shift and go to state 274
    empty                          shift and go to state 218

state 261

    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET . COLON type SEMICOLON

    COLON           shift and go to state 275


state 262

    (17) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .

    VAR             reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    INSTRUCTIONS    reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    PROCEDURES      reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    BEGIN           reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RSQBRACKET      reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RBRACKET        reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RETURN          reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)


state 263

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET .

    $end            reduce using rule 1 (routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET .)


state 264

    (37) param -> ID COLON type .

    COMMA           reduce using rule 37 (param -> ID COLON type .)
    RPAREN          reduce using rule 37 (param -> ID COLON type .)


state 265

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON . VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON . func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (32) func_type -> . type
    (130) type -> . INT
    (131) type -> . FLOAT

    VOID            shift and go to state 276
    INT             shift and go to state 147
    FLOAT           shift and go to state 148

    func_type                      shift and go to state 277
    type                           shift and go to state 278

state 266

    (35) params1 -> COMMA param . params1
    (35) params1 -> . COMMA param params1
    (36) params1 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 251
    RPAREN          reduce using rule 132 (empty -> .)

    params1                        shift and go to state 279
    empty                          shift and go to state 252

state 267

    (49) write_params1 -> COMMA write_operator expression produce_write_quad . write_params1
    (49) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (50) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (51) write_params1 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 197
    SEMICOLON       reduce using rule 132 (empty -> .)

    write_params1                  shift and go to state 280
    empty                          shift and go to state 198

state 268

    (50) write_params1 -> COMMA write_operator const_text produce_write_quad . write_params1
    (49) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (50) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (51) write_params1 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 197
    SEMICOLON       reduce using rule 132 (empty -> .)

    write_params1                  shift and go to state 281
    empty                          shift and go to state 198

state 269

    (124) matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression . matrix_rsqbracket_2
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression
    (129) matrix_rsqbracket_2 -> . RSQBRACKET

    ADD             shift and go to state 153
    SUB             shift and go to state 154
    RSQBRACKET      shift and go to state 283

    matrix_rsqbracket_2            shift and go to state 282

state 270

    (60) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .

    WRITE           reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    READ            reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    IF              reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    ID              reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MEAN            reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MEDIAN          reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MODE            reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    STD             reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    KURTOSIS        reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    PLOT            reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    DPLOT           reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    VARIANCE        reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    SIMMETRY        reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    CORRELATION     reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    DFREAD          reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    HOMERO          reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MARGE           reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    REPEAT          reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    PROCEDURES      reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    BEGIN           reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    RSQBRACKET      reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    RBRACKET        reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    RETURN          reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)


state 271

    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else . LBRACKET statements RBRACKET fill_pending_jump

    LBRACKET        shift and go to state 284


state 272

    (65) else -> ELSE .

    LBRACKET        reduce using rule 65 (else -> ELSE .)


state 273

    (66) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .

    WRITE           reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    READ            reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    IF              reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    ID              reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MEAN            reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MEDIAN          reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MODE            reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    STD             reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    KURTOSIS        reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    PLOT            reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    DPLOT           reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    VARIANCE        reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    SIMMETRY        reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    CORRELATION     reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    DFREAD          reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    HOMERO          reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MARGE           reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    REPEAT          reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    PROCEDURES      reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    BEGIN           reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    RSQBRACKET      reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    RBRACKET        reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    RETURN          reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)


state 274

    (75) call_params1 -> COMMA hyper_expression handle_call_param call_params1 .

    RPAREN          reduce using rule 75 (call_params1 -> COMMA hyper_expression handle_call_param call_params1 .)


state 275

    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON . type SEMICOLON
    (130) type -> . INT
    (131) type -> . FLOAT

    INT             shift and go to state 147
    FLOAT           shift and go to state 148

    type                           shift and go to state 285

state 276

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID . set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (29) set_return_type -> .

    LBRACKET        reduce using rule 29 (set_return_type -> .)

    set_return_type                shift and go to state 286

state 277

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type . set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (29) set_return_type -> .

    LBRACKET        reduce using rule 29 (set_return_type -> .)

    set_return_type                shift and go to state 287

state 278

    (32) func_type -> type .

    LBRACKET        reduce using rule 32 (func_type -> type .)


state 279

    (35) params1 -> COMMA param params1 .

    RPAREN          reduce using rule 35 (params1 -> COMMA param params1 .)


state 280

    (49) write_params1 -> COMMA write_operator expression produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 49 (write_params1 -> COMMA write_operator expression produce_write_quad write_params1 .)


state 281

    (50) write_params1 -> COMMA write_operator const_text produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 50 (write_params1 -> COMMA write_operator const_text produce_write_quad write_params1 .)


state 282

    (124) matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .

    MUL             reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    DIV             reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    ADD             reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    SUB             reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    COMMA           reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    SEMICOLON       reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    RSQBRACKET      reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    LTHAN           reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    GTHAN           reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    EQUAL           reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    DIFFERENT       reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    AND             reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    OR              reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    RPAREN          reduce using rule 124 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)


state 283

    (129) matrix_rsqbracket_2 -> RSQBRACKET .

    MUL             reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    DIV             reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    ADD             reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    SUB             reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    COMMA           reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    SEMICOLON       reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    RSQBRACKET      reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    LTHAN           reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    GTHAN           reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    EQUAL           reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    DIFFERENT       reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    AND             reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    OR              reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)
    RPAREN          reduce using rule 129 (matrix_rsqbracket_2 -> RSQBRACKET .)


state 284

    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET . statements RBRACKET fill_pending_jump
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (132) empty -> .
    (58) simple_assignment -> . identifier ASSIGN push_operator expression
    (59) array_assignment -> . array_access ASSIGN push_operator expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    RBRACKET        reduce using rule 132 (empty -> .)
    REPEAT          shift and go to state 54

    statements                     shift and go to state 288
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    repeat                         shift and go to state 38
    array_access                   shift and go to state 53

state 285

    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type . SEMICOLON

    SEMICOLON       shift and go to state 289


state 286

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type . LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations

    LBRACKET        shift and go to state 290


state 287

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type . LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    LBRACKET        shift and go to state 291


state 288

    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements . RBRACKET fill_pending_jump

    RBRACKET        shift and go to state 292


state 289

    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .

    VAR             reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    INSTRUCTIONS    reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    PROCEDURES      reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    BEGIN           reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RSQBRACKET      reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RBRACKET        reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RETURN          reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)


state 290

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET . local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (6) local_vars_block -> . LOCALS COLON var_declarations
    (7) local_vars_block -> . empty
    (132) empty -> .

    LOCALS          shift and go to state 193
    INSTRUCTIONS    reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)

    local_vars_block               shift and go to state 293
    empty                          shift and go to state 194

state 291

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET . local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (6) local_vars_block -> . LOCALS COLON var_declarations
    (7) local_vars_block -> . empty
    (132) empty -> .

    LOCALS          shift and go to state 193
    INSTRUCTIONS    reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)

    local_vars_block               shift and go to state 294
    empty                          shift and go to state 194

state 292

    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET . fill_pending_jump
    (64) fill_pending_jump -> .

    WRITE           reduce using rule 64 (fill_pending_jump -> .)
    READ            reduce using rule 64 (fill_pending_jump -> .)
    IF              reduce using rule 64 (fill_pending_jump -> .)
    ID              reduce using rule 64 (fill_pending_jump -> .)
    MEAN            reduce using rule 64 (fill_pending_jump -> .)
    MEDIAN          reduce using rule 64 (fill_pending_jump -> .)
    MODE            reduce using rule 64 (fill_pending_jump -> .)
    STD             reduce using rule 64 (fill_pending_jump -> .)
    KURTOSIS        reduce using rule 64 (fill_pending_jump -> .)
    PLOT            reduce using rule 64 (fill_pending_jump -> .)
    DPLOT           reduce using rule 64 (fill_pending_jump -> .)
    VARIANCE        reduce using rule 64 (fill_pending_jump -> .)
    SIMMETRY        reduce using rule 64 (fill_pending_jump -> .)
    CORRELATION     reduce using rule 64 (fill_pending_jump -> .)
    DFREAD          reduce using rule 64 (fill_pending_jump -> .)
    HOMERO          reduce using rule 64 (fill_pending_jump -> .)
    MARGE           reduce using rule 64 (fill_pending_jump -> .)
    REPEAT          reduce using rule 64 (fill_pending_jump -> .)
    PROCEDURES      reduce using rule 64 (fill_pending_jump -> .)
    BEGIN           reduce using rule 64 (fill_pending_jump -> .)
    RSQBRACKET      reduce using rule 64 (fill_pending_jump -> .)
    RBRACKET        reduce using rule 64 (fill_pending_jump -> .)
    RETURN          reduce using rule 64 (fill_pending_jump -> .)

    fill_pending_jump              shift and go to state 295

state 293

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block . store_curr_ip instructions_block function_rbracket function_declarations
    (28) store_curr_ip -> .

    INSTRUCTIONS    reduce using rule 28 (store_curr_ip -> .)
    RBRACKET        reduce using rule 28 (store_curr_ip -> .)

    store_curr_ip                  shift and go to state 296

state 294

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block . store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (28) store_curr_ip -> .

    INSTRUCTIONS    reduce using rule 28 (store_curr_ip -> .)
    RETURN          reduce using rule 28 (store_curr_ip -> .)

    store_curr_ip                  shift and go to state 297

state 295

    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .

    WRITE           reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    READ            reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    IF              reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    ID              reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MEAN            reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MEDIAN          reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MODE            reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    STD             reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    KURTOSIS        reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    PLOT            reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    DPLOT           reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    VARIANCE        reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    SIMMETRY        reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    CORRELATION     reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    DFREAD          reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    HOMERO          reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MARGE           reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    REPEAT          reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    PROCEDURES      reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    BEGIN           reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    RSQBRACKET      reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    RBRACKET        reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    RETURN          reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)


state 296

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip . instructions_block function_rbracket function_declarations
    (8) instructions_block -> . INSTRUCTIONS COLON statements
    (9) instructions_block -> . empty
    (132) empty -> .

    INSTRUCTIONS    shift and go to state 11
    RBRACKET        reduce using rule 132 (empty -> .)

    instructions_block             shift and go to state 298
    empty                          shift and go to state 12

state 297

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip . instructions_block return expression return_semicolon function_rbracket function_declarations
    (8) instructions_block -> . INSTRUCTIONS COLON statements
    (9) instructions_block -> . empty
    (132) empty -> .

    INSTRUCTIONS    shift and go to state 11
    RETURN          reduce using rule 132 (empty -> .)

    instructions_block             shift and go to state 299
    empty                          shift and go to state 12

state 298

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block . function_rbracket function_declarations
    (26) function_rbracket -> . RBRACKET

    RBRACKET        shift and go to state 301

    function_rbracket              shift and go to state 300

state 299

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block . return expression return_semicolon function_rbracket function_declarations
    (30) return -> . RETURN

    RETURN          shift and go to state 303

    return                         shift and go to state 302

state 300

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket . function_declarations
    (23) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (25) function_declarations -> . empty
    (132) empty -> .

    PROC            shift and go to state 61
    BEGIN           reduce using rule 132 (empty -> .)

    function_declarations          shift and go to state 304
    empty                          shift and go to state 62

state 301

    (26) function_rbracket -> RBRACKET .

    PROC            reduce using rule 26 (function_rbracket -> RBRACKET .)
    BEGIN           reduce using rule 26 (function_rbracket -> RBRACKET .)


state 302

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return . expression return_semicolon function_rbracket function_declarations
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . identifier lsqbracket expression array_rsqbracket
    (124) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 112
    ID              shift and go to state 117
    CONST_INT       shift and go to state 118
    CONST_FLOAT     shift and go to state 119
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 305
    term                           shift and go to state 106
    factor                         shift and go to state 108
    identifier                     shift and go to state 109
    const_int                      shift and go to state 110
    const_float                    shift and go to state 111
    array_access                   shift and go to state 113
    matrix_access                  shift and go to state 114
    function_call                  shift and go to state 115
    special_function_call          shift and go to state 116

state 303

    (30) return -> RETURN .

    LPAREN          reduce using rule 30 (return -> RETURN .)
    ID              reduce using rule 30 (return -> RETURN .)
    CONST_INT       reduce using rule 30 (return -> RETURN .)
    CONST_FLOAT     reduce using rule 30 (return -> RETURN .)
    MEAN            reduce using rule 30 (return -> RETURN .)
    MEDIAN          reduce using rule 30 (return -> RETURN .)
    MODE            reduce using rule 30 (return -> RETURN .)
    STD             reduce using rule 30 (return -> RETURN .)
    KURTOSIS        reduce using rule 30 (return -> RETURN .)
    PLOT            reduce using rule 30 (return -> RETURN .)
    DPLOT           reduce using rule 30 (return -> RETURN .)
    VARIANCE        reduce using rule 30 (return -> RETURN .)
    SIMMETRY        reduce using rule 30 (return -> RETURN .)
    CORRELATION     reduce using rule 30 (return -> RETURN .)
    DFREAD          reduce using rule 30 (return -> RETURN .)
    HOMERO          reduce using rule 30 (return -> RETURN .)
    MARGE           reduce using rule 30 (return -> RETURN .)


state 304

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations .

    BEGIN           reduce using rule 23 (function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations .)


state 305

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression . return_semicolon function_rbracket function_declarations
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression
    (31) return_semicolon -> . SEMICOLON

    ADD             shift and go to state 153
    SUB             shift and go to state 154
    SEMICOLON       shift and go to state 307

    return_semicolon               shift and go to state 306

state 306

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon . function_rbracket function_declarations
    (26) function_rbracket -> . RBRACKET

    RBRACKET        shift and go to state 301

    function_rbracket              shift and go to state 308

state 307

    (31) return_semicolon -> SEMICOLON .

    RBRACKET        reduce using rule 31 (return_semicolon -> SEMICOLON .)


state 308

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket . function_declarations
    (23) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (25) function_declarations -> . empty
    (132) empty -> .

    PROC            shift and go to state 61
    BEGIN           reduce using rule 132 (empty -> .)

    function_declarations          shift and go to state 309
    empty                          shift and go to state 62

state 309

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations .

    BEGIN           reduce using rule 24 (function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADD in state 228 resolved as shift
WARNING: shift/reduce conflict for SUB in state 228 resolved as shift
WARNING: shift/reduce conflict for ADD in state 229 resolved as shift
WARNING: shift/reduce conflict for SUB in state 229 resolved as shift
WARNING: shift/reduce conflict for MUL in state 230 resolved as shift
WARNING: shift/reduce conflict for DIV in state 230 resolved as shift
WARNING: shift/reduce conflict for MUL in state 231 resolved as shift
WARNING: shift/reduce conflict for DIV in state 231 resolved as shift
WARNING: shift/reduce conflict for AND in state 236 resolved as shift
WARNING: shift/reduce conflict for OR in state 236 resolved as shift
WARNING: shift/reduce conflict for AND in state 237 resolved as shift
WARNING: shift/reduce conflict for OR in state 237 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 238 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 238 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 238 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 238 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 239 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 239 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 239 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 239 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 240 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 240 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 240 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 240 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 241 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 241 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 241 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 241 resolved as shift
