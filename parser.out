Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT

Grammar

Rule 0     S' -> routine
Rule 1     routine -> ROUTINE ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET
Rule 2     global_vars_block -> GLOBALS COLON var_declarations
Rule 3     global_vars_block -> empty
Rule 4     local_vars_block -> LOCALS COLON var_declarations
Rule 5     local_vars_block -> empty
Rule 6     instructions_block -> INSTRUCTIONS COLON statements
Rule 7     instructions_block -> empty
Rule 8     global_scope_init -> <empty>
Rule 9     local_scope_init -> <empty>
Rule 10    var_declarations -> VAR simple_declaration var_declarations
Rule 11    var_declarations -> VAR array_declaration var_declarations
Rule 12    var_declarations -> VAR matrix_declaration var_declarations
Rule 13    var_declarations -> empty
Rule 14    simple_declaration -> ID COLON var_type SEMICOLON
Rule 15    array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
Rule 16    matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
Rule 17    var_type -> type
Rule 18    var_type -> DF
Rule 19    function_block -> PROCEDURES COLON function_declarations
Rule 20    function_block -> empty
Rule 21    function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
Rule 22    function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
Rule 23    function_declarations -> empty
Rule 24    function_rbracket -> RBRACKET
Rule 25    proc_scope_init -> <empty>
Rule 26    store_curr_ip -> <empty>
Rule 27    set_return_type -> <empty>
Rule 28    return -> RETURN
Rule 29    return_semicolon -> SEMICOLON
Rule 30    func_type -> type
Rule 31    params0 -> param params1
Rule 32    params0 -> empty
Rule 33    params1 -> COMMA param params1
Rule 34    params1 -> empty
Rule 35    param -> ID COLON type
Rule 36    statements -> write SEMICOLON statements
Rule 37    statements -> read SEMICOLON statements
Rule 38    statements -> var_assignment SEMICOLON statements
Rule 39    statements -> condition statements
Rule 40    statements -> loop statements
Rule 41    statements -> function_call SEMICOLON statements
Rule 42    statements -> special_function_call SEMICOLON statements
Rule 43    statements -> empty
Rule 44    write -> WRITE write_params0
Rule 45    write_params0 -> write_operator expression produce_write_quad write_params1
Rule 46    write_params0 -> write_operator const_text produce_write_quad write_params1
Rule 47    write_params1 -> COMMA write_operator expression produce_write_quad write_params1
Rule 48    write_params1 -> COMMA write_operator const_text produce_write_quad write_params1
Rule 49    write_params1 -> empty
Rule 50    const_text -> CONST_TEXT
Rule 51    write_operator -> <empty>
Rule 52    produce_write_quad -> <empty>
Rule 53    read -> READ push_operator identifier
Rule 54    var_assignment -> simple_assignment
Rule 55    var_assignment -> array_assignment
Rule 56    var_assignment -> matrix_assignment
Rule 57    simple_assignment -> identifier ASSIGN push_operator expression
Rule 58    array_assignment -> ID LSQBRACKET expression RSQBRACKET ASSIGN expression
Rule 59    matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
Rule 60    condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
Rule 61    condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
Rule 62    cond_lparen -> LPAREN
Rule 63    cond_rparen -> RPAREN
Rule 64    fill_pending_jump -> <empty>
Rule 65    else -> ELSE
Rule 66    loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
Rule 67    repeat -> REPEAT
Rule 68    fill_returning_jump -> <empty>
Rule 69    function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen
Rule 70    function_call_check -> <empty>
Rule 71    function_call_lparen -> LPAREN
Rule 72    function_call_rparen -> RPAREN
Rule 73    call_params0 -> hyper_expression handle_call_param call_params1
Rule 74    call_params0 -> empty
Rule 75    call_params1 -> COMMA hyper_expression handle_call_param call_params1
Rule 76    call_params1 -> empty
Rule 77    handle_call_param -> <empty>
Rule 78    special_function_call -> MEAN LPAREN call_params0 RPAREN
Rule 79    special_function_call -> MEDIAN LPAREN call_params0 RPAREN
Rule 80    special_function_call -> MODE LPAREN call_params0 RPAREN
Rule 81    special_function_call -> STD LPAREN call_params0 RPAREN
Rule 82    special_function_call -> KURTOSIS LPAREN call_params0 RPAREN
Rule 83    special_function_call -> PLOT LPAREN call_params0 RPAREN
Rule 84    special_function_call -> DPLOT LPAREN call_params0 RPAREN
Rule 85    special_function_call -> VARIANCE LPAREN call_params0 RPAREN
Rule 86    special_function_call -> SIMMETRY LPAREN call_params0 RPAREN
Rule 87    special_function_call -> CORRELATION LPAREN call_params0 RPAREN
Rule 88    special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN
Rule 89    special_function_call -> HOMERO
Rule 90    special_function_call -> MARGE
Rule 91    hyper_expression -> hyper_expression AND push_operator hyper_expression
Rule 92    hyper_expression -> hyper_expression OR push_operator hyper_expression
Rule 93    hyper_expression -> super_expression produce_hyperexp_quad
Rule 94    super_expression -> super_expression LTHAN push_operator super_expression
Rule 95    super_expression -> super_expression GTHAN push_operator super_expression
Rule 96    super_expression -> super_expression EQUAL push_operator super_expression
Rule 97    super_expression -> super_expression DIFFERENT super_expression
Rule 98    super_expression -> expression produce_superexp_quad
Rule 99    expression -> expression ADD push_operator expression
Rule 100   expression -> expression SUB push_operator expression
Rule 101   expression -> term produce_exp_quad
Rule 102   term -> term MUL push_operator term
Rule 103   term -> term DIV push_operator term
Rule 104   term -> factor produce_term_quad
Rule 105   push_operator -> <empty>
Rule 106   produce_hyperexp_quad -> <empty>
Rule 107   produce_superexp_quad -> <empty>
Rule 108   produce_exp_quad -> <empty>
Rule 109   produce_term_quad -> <empty>
Rule 110   factor -> identifier
Rule 111   factor -> const_int
Rule 112   factor -> const_float
Rule 113   factor -> LPAREN push_cap expression RPAREN pop_cap
Rule 114   factor -> array_access
Rule 115   factor -> matrix_access
Rule 116   factor -> function_call
Rule 117   factor -> special_function_call
Rule 118   identifier -> ID
Rule 119   const_int -> CONST_INT
Rule 120   const_float -> CONST_FLOAT
Rule 121   push_cap -> <empty>
Rule 122   pop_cap -> <empty>
Rule 123   array_access -> ID LSQBRACKET expression RSQBRACKET
Rule 124   matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
Rule 125   type -> INT
Rule 126   type -> FLOAT
Rule 127   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 99
AND                  : 91
ASSIGN               : 57 58 59
BEGIN                : 1
COLON                : 1 2 4 6 14 15 16 19 21 22 35
COMMA                : 33 47 48 75
CONST_FLOAT          : 120
CONST_INT            : 15 16 16 119
CONST_TEXT           : 50 88
CORRELATION          : 87
DF                   : 18
DFREAD               : 88
DIFFERENT            : 97
DIV                  : 103
DPLOT                : 84
ELSE                 : 65
EQUAL                : 96
FLOAT                : 126
GLOBALS              : 2
GTHAN                : 95
HOMERO               : 89
ID                   : 1 14 15 16 21 22 35 58 59 69 118 123 124
IF                   : 60 61
INSTRUCTIONS         : 6
INT                  : 125
KURTOSIS             : 82
LBRACKET             : 21 22 60 61 61 66
LOCALS               : 4
LPAREN               : 21 22 62 71 78 79 80 81 82 83 84 85 86 87 88 113
LSQBRACKET           : 1 15 16 16 58 59 59 123 124 124
LTHAN                : 94
MARGE                : 90
MEAN                 : 78
MEDIAN               : 79
MODE                 : 80
MUL                  : 102
NOT                  : 
OR                   : 92
PLOT                 : 83
PROC                 : 21 22
PROCEDURES           : 19
RBRACKET             : 24 60 61 61 66
READ                 : 53
REPEAT               : 67
RETURN               : 28
ROUTINE              : 1
RPAREN               : 21 22 63 72 78 79 80 81 82 83 84 85 86 87 88 113
RSQBRACKET           : 1 15 16 16 58 59 59 123 124 124
SEMICOLON            : 1 14 15 16 29 36 37 38 41 42
SIMMETRY             : 86
STD                  : 81
SUB                  : 100
VAR                  : 10 11 12
VARIANCE             : 85
VOID                 : 21
WRITE                : 44
error                : 

Nonterminals, with rules where they appear

array_access         : 114
array_assignment     : 55
array_declaration    : 11
call_params0         : 69 78 79 80 81 82 83 84 85 86 87
call_params1         : 73 75
cond_lparen          : 60 61 66
cond_rparen          : 60 61 66
condition            : 39
const_float          : 112
const_int            : 111
const_text           : 46 48
else                 : 61
empty                : 3 5 7 13 20 23 32 34 43 49 74 76
expression           : 22 45 47 57 58 58 59 59 59 98 99 99 100 100 113 123 124 124
factor               : 104
fill_pending_jump    : 60 61
fill_returning_jump  : 66
func_type            : 22
function_block       : 1
function_call        : 41 116
function_call_check  : 69
function_call_lparen : 69
function_call_rparen : 69
function_declarations : 19 21 22
function_rbracket    : 21 22
global_scope_init    : 1
global_vars_block    : 1
handle_call_param    : 73 75
hyper_expression     : 60 61 66 73 75 91 91 92 92
identifier           : 53 57 110
instructions_block   : 1 1 21 22
local_scope_init     : 1
local_vars_block     : 1 21 22
loop                 : 40
matrix_access        : 115
matrix_assignment    : 56
matrix_declaration   : 12
param                : 31 33
params0              : 21 22
params1              : 31 33
pop_cap              : 113
proc_scope_init      : 21 22
produce_exp_quad     : 101
produce_hyperexp_quad : 93
produce_superexp_quad : 98
produce_term_quad    : 104
produce_write_quad   : 45 46 47 48
push_cap             : 113
push_operator        : 53 57 91 92 94 95 96 99 100 102 103
read                 : 37
repeat               : 66
return               : 22
return_semicolon     : 22
routine              : 0
set_return_type      : 21 22
simple_assignment    : 54
simple_declaration   : 10
special_function_call : 42 117
statements           : 6 36 37 38 39 40 41 42 60 61 61 66
store_curr_ip        : 21 22
super_expression     : 93 94 94 95 95 96 96 97 97
term                 : 101 102 102 103 103
type                 : 15 16 17 30 35
var_assignment       : 38
var_declarations     : 2 4 10 11 12
var_type             : 14
write                : 36
write_operator       : 45 46 47 48
write_params0        : 44
write_params1        : 45 46 47 48

Parsing method: LALR

state 0

    (0) S' -> . routine
    (1) routine -> . ROUTINE ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET

    ROUTINE         shift and go to state 2

    routine                        shift and go to state 1

state 1

    (0) S' -> routine .



state 2

    (1) routine -> ROUTINE . ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET

    ID              shift and go to state 3


state 3

    (1) routine -> ROUTINE ID . SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET

    SEMICOLON       shift and go to state 4


state 4

    (1) routine -> ROUTINE ID SEMICOLON . global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET
    (8) global_scope_init -> .

    GLOBALS         reduce using rule 8 (global_scope_init -> .)
    INSTRUCTIONS    reduce using rule 8 (global_scope_init -> .)
    PROCEDURES      reduce using rule 8 (global_scope_init -> .)
    BEGIN           reduce using rule 8 (global_scope_init -> .)

    global_scope_init              shift and go to state 5

state 5

    (1) routine -> ROUTINE ID SEMICOLON global_scope_init . global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET
    (2) global_vars_block -> . GLOBALS COLON var_declarations
    (3) global_vars_block -> . empty
    (127) empty -> .

    GLOBALS         shift and go to state 7
    INSTRUCTIONS    reduce using rule 127 (empty -> .)
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)

    global_vars_block              shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) routine -> ROUTINE ID SEMICOLON global_scope_init global_vars_block . instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET
    (6) instructions_block -> . INSTRUCTIONS COLON statements
    (7) instructions_block -> . empty
    (127) empty -> .

    INSTRUCTIONS    shift and go to state 10
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)

    instructions_block             shift and go to state 9
    empty                          shift and go to state 11

state 7

    (2) global_vars_block -> GLOBALS . COLON var_declarations

    COLON           shift and go to state 12


state 8

    (3) global_vars_block -> empty .

    INSTRUCTIONS    reduce using rule 3 (global_vars_block -> empty .)
    PROCEDURES      reduce using rule 3 (global_vars_block -> empty .)
    BEGIN           reduce using rule 3 (global_vars_block -> empty .)


state 9

    (1) routine -> ROUTINE ID SEMICOLON global_scope_init global_vars_block instructions_block . function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET
    (19) function_block -> . PROCEDURES COLON function_declarations
    (20) function_block -> . empty
    (127) empty -> .

    PROCEDURES      shift and go to state 14
    BEGIN           reduce using rule 127 (empty -> .)

    function_block                 shift and go to state 13
    empty                          shift and go to state 15

state 10

    (6) instructions_block -> INSTRUCTIONS . COLON statements

    COLON           shift and go to state 16


state 11

    (7) instructions_block -> empty .

    PROCEDURES      reduce using rule 7 (instructions_block -> empty .)
    BEGIN           reduce using rule 7 (instructions_block -> empty .)
    RSQBRACKET      reduce using rule 7 (instructions_block -> empty .)
    RBRACKET        reduce using rule 7 (instructions_block -> empty .)
    RETURN          reduce using rule 7 (instructions_block -> empty .)


state 12

    (2) global_vars_block -> GLOBALS COLON . var_declarations
    (10) var_declarations -> . VAR simple_declaration var_declarations
    (11) var_declarations -> . VAR array_declaration var_declarations
    (12) var_declarations -> . VAR matrix_declaration var_declarations
    (13) var_declarations -> . empty
    (127) empty -> .

    VAR             shift and go to state 18
    INSTRUCTIONS    reduce using rule 127 (empty -> .)
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)

    var_declarations               shift and go to state 17
    empty                          shift and go to state 19

state 13

    (1) routine -> ROUTINE ID SEMICOLON global_scope_init global_vars_block instructions_block function_block . BEGIN COLON LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET

    BEGIN           shift and go to state 20


state 14

    (19) function_block -> PROCEDURES . COLON function_declarations

    COLON           shift and go to state 21


state 15

    (20) function_block -> empty .

    BEGIN           reduce using rule 20 (function_block -> empty .)


state 16

    (6) instructions_block -> INSTRUCTIONS COLON . statements
    (36) statements -> . write SEMICOLON statements
    (37) statements -> . read SEMICOLON statements
    (38) statements -> . var_assignment SEMICOLON statements
    (39) statements -> . condition statements
    (40) statements -> . loop statements
    (41) statements -> . function_call SEMICOLON statements
    (42) statements -> . special_function_call SEMICOLON statements
    (43) statements -> . empty
    (44) write -> . WRITE write_params0
    (53) read -> . READ push_operator identifier
    (54) var_assignment -> . simple_assignment
    (55) var_assignment -> . array_assignment
    (56) var_assignment -> . matrix_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (127) empty -> .
    (57) simple_assignment -> . identifier ASSIGN push_operator expression
    (58) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID

    WRITE           shift and go to state 31
    READ            shift and go to state 32
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)
    REPEAT          shift and go to state 53

    statements                     shift and go to state 22
    write                          shift and go to state 23
    read                           shift and go to state 24
    var_assignment                 shift and go to state 25
    condition                      shift and go to state 26
    loop                           shift and go to state 27
    function_call                  shift and go to state 28
    special_function_call          shift and go to state 29
    empty                          shift and go to state 30
    identifier                     shift and go to state 33
    simple_assignment              shift and go to state 34
    array_assignment               shift and go to state 35
    matrix_assignment              shift and go to state 36
    repeat                         shift and go to state 38

state 17

    (2) global_vars_block -> GLOBALS COLON var_declarations .

    INSTRUCTIONS    reduce using rule 2 (global_vars_block -> GLOBALS COLON var_declarations .)
    PROCEDURES      reduce using rule 2 (global_vars_block -> GLOBALS COLON var_declarations .)
    BEGIN           reduce using rule 2 (global_vars_block -> GLOBALS COLON var_declarations .)


state 18

    (10) var_declarations -> VAR . simple_declaration var_declarations
    (11) var_declarations -> VAR . array_declaration var_declarations
    (12) var_declarations -> VAR . matrix_declaration var_declarations
    (14) simple_declaration -> . ID COLON var_type SEMICOLON
    (15) array_declaration -> . ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
    (16) matrix_declaration -> . ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    ID              shift and go to state 57

    simple_declaration             shift and go to state 54
    array_declaration              shift and go to state 55
    matrix_declaration             shift and go to state 56

state 19

    (13) var_declarations -> empty .

    INSTRUCTIONS    reduce using rule 13 (var_declarations -> empty .)
    PROCEDURES      reduce using rule 13 (var_declarations -> empty .)
    BEGIN           reduce using rule 13 (var_declarations -> empty .)
    RSQBRACKET      reduce using rule 13 (var_declarations -> empty .)
    RBRACKET        reduce using rule 13 (var_declarations -> empty .)
    RETURN          reduce using rule 13 (var_declarations -> empty .)


state 20

    (1) routine -> ROUTINE ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN . COLON LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET

    COLON           shift and go to state 58


state 21

    (19) function_block -> PROCEDURES COLON . function_declarations
    (21) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (22) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (23) function_declarations -> . empty
    (127) empty -> .

    PROC            shift and go to state 60
    BEGIN           reduce using rule 127 (empty -> .)

    function_declarations          shift and go to state 59
    empty                          shift and go to state 61

state 22

    (6) instructions_block -> INSTRUCTIONS COLON statements .

    PROCEDURES      reduce using rule 6 (instructions_block -> INSTRUCTIONS COLON statements .)
    BEGIN           reduce using rule 6 (instructions_block -> INSTRUCTIONS COLON statements .)
    RSQBRACKET      reduce using rule 6 (instructions_block -> INSTRUCTIONS COLON statements .)
    RBRACKET        reduce using rule 6 (instructions_block -> INSTRUCTIONS COLON statements .)
    RETURN          reduce using rule 6 (instructions_block -> INSTRUCTIONS COLON statements .)


state 23

    (36) statements -> write . SEMICOLON statements

    SEMICOLON       shift and go to state 62


state 24

    (37) statements -> read . SEMICOLON statements

    SEMICOLON       shift and go to state 63


state 25

    (38) statements -> var_assignment . SEMICOLON statements

    SEMICOLON       shift and go to state 64


state 26

    (39) statements -> condition . statements
    (36) statements -> . write SEMICOLON statements
    (37) statements -> . read SEMICOLON statements
    (38) statements -> . var_assignment SEMICOLON statements
    (39) statements -> . condition statements
    (40) statements -> . loop statements
    (41) statements -> . function_call SEMICOLON statements
    (42) statements -> . special_function_call SEMICOLON statements
    (43) statements -> . empty
    (44) write -> . WRITE write_params0
    (53) read -> . READ push_operator identifier
    (54) var_assignment -> . simple_assignment
    (55) var_assignment -> . array_assignment
    (56) var_assignment -> . matrix_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (127) empty -> .
    (57) simple_assignment -> . identifier ASSIGN push_operator expression
    (58) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID

    WRITE           shift and go to state 31
    READ            shift and go to state 32
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)
    REPEAT          shift and go to state 53

    condition                      shift and go to state 26
    statements                     shift and go to state 65
    write                          shift and go to state 23
    read                           shift and go to state 24
    var_assignment                 shift and go to state 25
    loop                           shift and go to state 27
    function_call                  shift and go to state 28
    special_function_call          shift and go to state 29
    empty                          shift and go to state 30
    identifier                     shift and go to state 33
    simple_assignment              shift and go to state 34
    array_assignment               shift and go to state 35
    matrix_assignment              shift and go to state 36
    repeat                         shift and go to state 38

state 27

    (40) statements -> loop . statements
    (36) statements -> . write SEMICOLON statements
    (37) statements -> . read SEMICOLON statements
    (38) statements -> . var_assignment SEMICOLON statements
    (39) statements -> . condition statements
    (40) statements -> . loop statements
    (41) statements -> . function_call SEMICOLON statements
    (42) statements -> . special_function_call SEMICOLON statements
    (43) statements -> . empty
    (44) write -> . WRITE write_params0
    (53) read -> . READ push_operator identifier
    (54) var_assignment -> . simple_assignment
    (55) var_assignment -> . array_assignment
    (56) var_assignment -> . matrix_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (127) empty -> .
    (57) simple_assignment -> . identifier ASSIGN push_operator expression
    (58) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID

    WRITE           shift and go to state 31
    READ            shift and go to state 32
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)
    REPEAT          shift and go to state 53

    loop                           shift and go to state 27
    statements                     shift and go to state 66
    write                          shift and go to state 23
    read                           shift and go to state 24
    var_assignment                 shift and go to state 25
    condition                      shift and go to state 26
    function_call                  shift and go to state 28
    special_function_call          shift and go to state 29
    empty                          shift and go to state 30
    identifier                     shift and go to state 33
    simple_assignment              shift and go to state 34
    array_assignment               shift and go to state 35
    matrix_assignment              shift and go to state 36
    repeat                         shift and go to state 38

state 28

    (41) statements -> function_call . SEMICOLON statements

    SEMICOLON       shift and go to state 67


state 29

    (42) statements -> special_function_call . SEMICOLON statements

    SEMICOLON       shift and go to state 68


state 30

    (43) statements -> empty .

    PROCEDURES      reduce using rule 43 (statements -> empty .)
    BEGIN           reduce using rule 43 (statements -> empty .)
    RSQBRACKET      reduce using rule 43 (statements -> empty .)
    RBRACKET        reduce using rule 43 (statements -> empty .)
    RETURN          reduce using rule 43 (statements -> empty .)


state 31

    (44) write -> WRITE . write_params0
    (45) write_params0 -> . write_operator expression produce_write_quad write_params1
    (46) write_params0 -> . write_operator const_text produce_write_quad write_params1
    (51) write_operator -> .

    CONST_TEXT      reduce using rule 51 (write_operator -> .)
    LPAREN          reduce using rule 51 (write_operator -> .)
    ID              reduce using rule 51 (write_operator -> .)
    CONST_INT       reduce using rule 51 (write_operator -> .)
    CONST_FLOAT     reduce using rule 51 (write_operator -> .)
    MEAN            reduce using rule 51 (write_operator -> .)
    MEDIAN          reduce using rule 51 (write_operator -> .)
    MODE            reduce using rule 51 (write_operator -> .)
    STD             reduce using rule 51 (write_operator -> .)
    KURTOSIS        reduce using rule 51 (write_operator -> .)
    PLOT            reduce using rule 51 (write_operator -> .)
    DPLOT           reduce using rule 51 (write_operator -> .)
    VARIANCE        reduce using rule 51 (write_operator -> .)
    SIMMETRY        reduce using rule 51 (write_operator -> .)
    CORRELATION     reduce using rule 51 (write_operator -> .)
    DFREAD          reduce using rule 51 (write_operator -> .)
    HOMERO          reduce using rule 51 (write_operator -> .)
    MARGE           reduce using rule 51 (write_operator -> .)

    write_params0                  shift and go to state 69
    write_operator                 shift and go to state 70

state 32

    (53) read -> READ . push_operator identifier
    (105) push_operator -> .

    ID              reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 71

state 33

    (57) simple_assignment -> identifier . ASSIGN push_operator expression

    ASSIGN          shift and go to state 72


state 34

    (54) var_assignment -> simple_assignment .

    SEMICOLON       reduce using rule 54 (var_assignment -> simple_assignment .)


state 35

    (55) var_assignment -> array_assignment .

    SEMICOLON       reduce using rule 55 (var_assignment -> array_assignment .)


state 36

    (56) var_assignment -> matrix_assignment .

    SEMICOLON       reduce using rule 56 (var_assignment -> matrix_assignment .)


state 37

    (60) condition -> IF . cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> IF . cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (62) cond_lparen -> . LPAREN

    LPAREN          shift and go to state 74

    cond_lparen                    shift and go to state 73

state 38

    (66) loop -> repeat . cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (62) cond_lparen -> . LPAREN

    LPAREN          shift and go to state 74

    cond_lparen                    shift and go to state 75

state 39

    (69) function_call -> ID . function_call_check function_call_lparen call_params0 function_call_rparen
    (58) array_assignment -> ID . LSQBRACKET expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> ID . LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (118) identifier -> ID .
    (70) function_call_check -> .

    LSQBRACKET      shift and go to state 77
    ASSIGN          reduce using rule 118 (identifier -> ID .)
    LPAREN          reduce using rule 70 (function_call_check -> .)

    function_call_check            shift and go to state 76

state 40

    (78) special_function_call -> MEAN . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 78


state 41

    (79) special_function_call -> MEDIAN . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 79


state 42

    (80) special_function_call -> MODE . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 80


state 43

    (81) special_function_call -> STD . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 81


state 44

    (82) special_function_call -> KURTOSIS . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 82


state 45

    (83) special_function_call -> PLOT . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 83


state 46

    (84) special_function_call -> DPLOT . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 84


state 47

    (85) special_function_call -> VARIANCE . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 85


state 48

    (86) special_function_call -> SIMMETRY . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 86


state 49

    (87) special_function_call -> CORRELATION . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 87


state 50

    (88) special_function_call -> DFREAD . LPAREN CONST_TEXT RPAREN

    LPAREN          shift and go to state 88


state 51

    (89) special_function_call -> HOMERO .

    SEMICOLON       reduce using rule 89 (special_function_call -> HOMERO .)
    MUL             reduce using rule 89 (special_function_call -> HOMERO .)
    DIV             reduce using rule 89 (special_function_call -> HOMERO .)
    ADD             reduce using rule 89 (special_function_call -> HOMERO .)
    SUB             reduce using rule 89 (special_function_call -> HOMERO .)
    COMMA           reduce using rule 89 (special_function_call -> HOMERO .)
    LTHAN           reduce using rule 89 (special_function_call -> HOMERO .)
    GTHAN           reduce using rule 89 (special_function_call -> HOMERO .)
    EQUAL           reduce using rule 89 (special_function_call -> HOMERO .)
    DIFFERENT       reduce using rule 89 (special_function_call -> HOMERO .)
    AND             reduce using rule 89 (special_function_call -> HOMERO .)
    OR              reduce using rule 89 (special_function_call -> HOMERO .)
    RPAREN          reduce using rule 89 (special_function_call -> HOMERO .)
    RSQBRACKET      reduce using rule 89 (special_function_call -> HOMERO .)


state 52

    (90) special_function_call -> MARGE .

    SEMICOLON       reduce using rule 90 (special_function_call -> MARGE .)
    MUL             reduce using rule 90 (special_function_call -> MARGE .)
    DIV             reduce using rule 90 (special_function_call -> MARGE .)
    ADD             reduce using rule 90 (special_function_call -> MARGE .)
    SUB             reduce using rule 90 (special_function_call -> MARGE .)
    COMMA           reduce using rule 90 (special_function_call -> MARGE .)
    LTHAN           reduce using rule 90 (special_function_call -> MARGE .)
    GTHAN           reduce using rule 90 (special_function_call -> MARGE .)
    EQUAL           reduce using rule 90 (special_function_call -> MARGE .)
    DIFFERENT       reduce using rule 90 (special_function_call -> MARGE .)
    AND             reduce using rule 90 (special_function_call -> MARGE .)
    OR              reduce using rule 90 (special_function_call -> MARGE .)
    RPAREN          reduce using rule 90 (special_function_call -> MARGE .)
    RSQBRACKET      reduce using rule 90 (special_function_call -> MARGE .)


state 53

    (67) repeat -> REPEAT .

    LPAREN          reduce using rule 67 (repeat -> REPEAT .)


state 54

    (10) var_declarations -> VAR simple_declaration . var_declarations
    (10) var_declarations -> . VAR simple_declaration var_declarations
    (11) var_declarations -> . VAR array_declaration var_declarations
    (12) var_declarations -> . VAR matrix_declaration var_declarations
    (13) var_declarations -> . empty
    (127) empty -> .

    VAR             shift and go to state 18
    INSTRUCTIONS    reduce using rule 127 (empty -> .)
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)

    var_declarations               shift and go to state 89
    empty                          shift and go to state 19

state 55

    (11) var_declarations -> VAR array_declaration . var_declarations
    (10) var_declarations -> . VAR simple_declaration var_declarations
    (11) var_declarations -> . VAR array_declaration var_declarations
    (12) var_declarations -> . VAR matrix_declaration var_declarations
    (13) var_declarations -> . empty
    (127) empty -> .

    VAR             shift and go to state 18
    INSTRUCTIONS    reduce using rule 127 (empty -> .)
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)

    var_declarations               shift and go to state 90
    empty                          shift and go to state 19

state 56

    (12) var_declarations -> VAR matrix_declaration . var_declarations
    (10) var_declarations -> . VAR simple_declaration var_declarations
    (11) var_declarations -> . VAR array_declaration var_declarations
    (12) var_declarations -> . VAR matrix_declaration var_declarations
    (13) var_declarations -> . empty
    (127) empty -> .

    VAR             shift and go to state 18
    INSTRUCTIONS    reduce using rule 127 (empty -> .)
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)

    var_declarations               shift and go to state 91
    empty                          shift and go to state 19

state 57

    (14) simple_declaration -> ID . COLON var_type SEMICOLON
    (15) array_declaration -> ID . LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
    (16) matrix_declaration -> ID . LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    COLON           shift and go to state 92
    LSQBRACKET      shift and go to state 93


state 58

    (1) routine -> ROUTINE ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON . LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET

    LSQBRACKET      shift and go to state 94


state 59

    (19) function_block -> PROCEDURES COLON function_declarations .

    BEGIN           reduce using rule 19 (function_block -> PROCEDURES COLON function_declarations .)


state 60

    (21) function_declarations -> PROC . ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (22) function_declarations -> PROC . ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    ID              shift and go to state 95


state 61

    (23) function_declarations -> empty .

    BEGIN           reduce using rule 23 (function_declarations -> empty .)


state 62

    (36) statements -> write SEMICOLON . statements
    (36) statements -> . write SEMICOLON statements
    (37) statements -> . read SEMICOLON statements
    (38) statements -> . var_assignment SEMICOLON statements
    (39) statements -> . condition statements
    (40) statements -> . loop statements
    (41) statements -> . function_call SEMICOLON statements
    (42) statements -> . special_function_call SEMICOLON statements
    (43) statements -> . empty
    (44) write -> . WRITE write_params0
    (53) read -> . READ push_operator identifier
    (54) var_assignment -> . simple_assignment
    (55) var_assignment -> . array_assignment
    (56) var_assignment -> . matrix_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (127) empty -> .
    (57) simple_assignment -> . identifier ASSIGN push_operator expression
    (58) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID

    WRITE           shift and go to state 31
    READ            shift and go to state 32
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)
    REPEAT          shift and go to state 53

    write                          shift and go to state 23
    statements                     shift and go to state 96
    read                           shift and go to state 24
    var_assignment                 shift and go to state 25
    condition                      shift and go to state 26
    loop                           shift and go to state 27
    function_call                  shift and go to state 28
    special_function_call          shift and go to state 29
    empty                          shift and go to state 30
    identifier                     shift and go to state 33
    simple_assignment              shift and go to state 34
    array_assignment               shift and go to state 35
    matrix_assignment              shift and go to state 36
    repeat                         shift and go to state 38

state 63

    (37) statements -> read SEMICOLON . statements
    (36) statements -> . write SEMICOLON statements
    (37) statements -> . read SEMICOLON statements
    (38) statements -> . var_assignment SEMICOLON statements
    (39) statements -> . condition statements
    (40) statements -> . loop statements
    (41) statements -> . function_call SEMICOLON statements
    (42) statements -> . special_function_call SEMICOLON statements
    (43) statements -> . empty
    (44) write -> . WRITE write_params0
    (53) read -> . READ push_operator identifier
    (54) var_assignment -> . simple_assignment
    (55) var_assignment -> . array_assignment
    (56) var_assignment -> . matrix_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (127) empty -> .
    (57) simple_assignment -> . identifier ASSIGN push_operator expression
    (58) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID

    WRITE           shift and go to state 31
    READ            shift and go to state 32
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)
    REPEAT          shift and go to state 53

    read                           shift and go to state 24
    statements                     shift and go to state 97
    write                          shift and go to state 23
    var_assignment                 shift and go to state 25
    condition                      shift and go to state 26
    loop                           shift and go to state 27
    function_call                  shift and go to state 28
    special_function_call          shift and go to state 29
    empty                          shift and go to state 30
    identifier                     shift and go to state 33
    simple_assignment              shift and go to state 34
    array_assignment               shift and go to state 35
    matrix_assignment              shift and go to state 36
    repeat                         shift and go to state 38

state 64

    (38) statements -> var_assignment SEMICOLON . statements
    (36) statements -> . write SEMICOLON statements
    (37) statements -> . read SEMICOLON statements
    (38) statements -> . var_assignment SEMICOLON statements
    (39) statements -> . condition statements
    (40) statements -> . loop statements
    (41) statements -> . function_call SEMICOLON statements
    (42) statements -> . special_function_call SEMICOLON statements
    (43) statements -> . empty
    (44) write -> . WRITE write_params0
    (53) read -> . READ push_operator identifier
    (54) var_assignment -> . simple_assignment
    (55) var_assignment -> . array_assignment
    (56) var_assignment -> . matrix_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (127) empty -> .
    (57) simple_assignment -> . identifier ASSIGN push_operator expression
    (58) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID

    WRITE           shift and go to state 31
    READ            shift and go to state 32
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)
    REPEAT          shift and go to state 53

    var_assignment                 shift and go to state 25
    statements                     shift and go to state 98
    write                          shift and go to state 23
    read                           shift and go to state 24
    condition                      shift and go to state 26
    loop                           shift and go to state 27
    function_call                  shift and go to state 28
    special_function_call          shift and go to state 29
    empty                          shift and go to state 30
    identifier                     shift and go to state 33
    simple_assignment              shift and go to state 34
    array_assignment               shift and go to state 35
    matrix_assignment              shift and go to state 36
    repeat                         shift and go to state 38

state 65

    (39) statements -> condition statements .

    PROCEDURES      reduce using rule 39 (statements -> condition statements .)
    BEGIN           reduce using rule 39 (statements -> condition statements .)
    RSQBRACKET      reduce using rule 39 (statements -> condition statements .)
    RBRACKET        reduce using rule 39 (statements -> condition statements .)
    RETURN          reduce using rule 39 (statements -> condition statements .)


state 66

    (40) statements -> loop statements .

    PROCEDURES      reduce using rule 40 (statements -> loop statements .)
    BEGIN           reduce using rule 40 (statements -> loop statements .)
    RSQBRACKET      reduce using rule 40 (statements -> loop statements .)
    RBRACKET        reduce using rule 40 (statements -> loop statements .)
    RETURN          reduce using rule 40 (statements -> loop statements .)


state 67

    (41) statements -> function_call SEMICOLON . statements
    (36) statements -> . write SEMICOLON statements
    (37) statements -> . read SEMICOLON statements
    (38) statements -> . var_assignment SEMICOLON statements
    (39) statements -> . condition statements
    (40) statements -> . loop statements
    (41) statements -> . function_call SEMICOLON statements
    (42) statements -> . special_function_call SEMICOLON statements
    (43) statements -> . empty
    (44) write -> . WRITE write_params0
    (53) read -> . READ push_operator identifier
    (54) var_assignment -> . simple_assignment
    (55) var_assignment -> . array_assignment
    (56) var_assignment -> . matrix_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (127) empty -> .
    (57) simple_assignment -> . identifier ASSIGN push_operator expression
    (58) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID

    WRITE           shift and go to state 31
    READ            shift and go to state 32
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)
    REPEAT          shift and go to state 53

    function_call                  shift and go to state 28
    statements                     shift and go to state 99
    write                          shift and go to state 23
    read                           shift and go to state 24
    var_assignment                 shift and go to state 25
    condition                      shift and go to state 26
    loop                           shift and go to state 27
    special_function_call          shift and go to state 29
    empty                          shift and go to state 30
    identifier                     shift and go to state 33
    simple_assignment              shift and go to state 34
    array_assignment               shift and go to state 35
    matrix_assignment              shift and go to state 36
    repeat                         shift and go to state 38

state 68

    (42) statements -> special_function_call SEMICOLON . statements
    (36) statements -> . write SEMICOLON statements
    (37) statements -> . read SEMICOLON statements
    (38) statements -> . var_assignment SEMICOLON statements
    (39) statements -> . condition statements
    (40) statements -> . loop statements
    (41) statements -> . function_call SEMICOLON statements
    (42) statements -> . special_function_call SEMICOLON statements
    (43) statements -> . empty
    (44) write -> . WRITE write_params0
    (53) read -> . READ push_operator identifier
    (54) var_assignment -> . simple_assignment
    (55) var_assignment -> . array_assignment
    (56) var_assignment -> . matrix_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (127) empty -> .
    (57) simple_assignment -> . identifier ASSIGN push_operator expression
    (58) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID

    WRITE           shift and go to state 31
    READ            shift and go to state 32
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    PROCEDURES      reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)
    REPEAT          shift and go to state 53

    special_function_call          shift and go to state 29
    statements                     shift and go to state 100
    write                          shift and go to state 23
    read                           shift and go to state 24
    var_assignment                 shift and go to state 25
    condition                      shift and go to state 26
    loop                           shift and go to state 27
    function_call                  shift and go to state 28
    empty                          shift and go to state 30
    identifier                     shift and go to state 33
    simple_assignment              shift and go to state 34
    array_assignment               shift and go to state 35
    matrix_assignment              shift and go to state 36
    repeat                         shift and go to state 38

state 69

    (44) write -> WRITE write_params0 .

    SEMICOLON       reduce using rule 44 (write -> WRITE write_params0 .)


state 70

    (45) write_params0 -> write_operator . expression produce_write_quad write_params1
    (46) write_params0 -> write_operator . const_text produce_write_quad write_params1
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (50) const_text -> . CONST_TEXT
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    CONST_TEXT      shift and go to state 104
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 101
    const_text                     shift and go to state 102
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 71

    (53) read -> READ push_operator . identifier
    (118) identifier -> . ID

    ID              shift and go to state 118

    identifier                     shift and go to state 117

state 72

    (57) simple_assignment -> identifier ASSIGN . push_operator expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 119

state 73

    (60) condition -> IF cond_lparen . hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> IF cond_lparen . hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    hyper_expression               shift and go to state 120
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 74

    (62) cond_lparen -> LPAREN .

    LPAREN          reduce using rule 62 (cond_lparen -> LPAREN .)
    ID              reduce using rule 62 (cond_lparen -> LPAREN .)
    CONST_INT       reduce using rule 62 (cond_lparen -> LPAREN .)
    CONST_FLOAT     reduce using rule 62 (cond_lparen -> LPAREN .)
    MEAN            reduce using rule 62 (cond_lparen -> LPAREN .)
    MEDIAN          reduce using rule 62 (cond_lparen -> LPAREN .)
    MODE            reduce using rule 62 (cond_lparen -> LPAREN .)
    STD             reduce using rule 62 (cond_lparen -> LPAREN .)
    KURTOSIS        reduce using rule 62 (cond_lparen -> LPAREN .)
    PLOT            reduce using rule 62 (cond_lparen -> LPAREN .)
    DPLOT           reduce using rule 62 (cond_lparen -> LPAREN .)
    VARIANCE        reduce using rule 62 (cond_lparen -> LPAREN .)
    SIMMETRY        reduce using rule 62 (cond_lparen -> LPAREN .)
    CORRELATION     reduce using rule 62 (cond_lparen -> LPAREN .)
    DFREAD          reduce using rule 62 (cond_lparen -> LPAREN .)
    HOMERO          reduce using rule 62 (cond_lparen -> LPAREN .)
    MARGE           reduce using rule 62 (cond_lparen -> LPAREN .)


state 75

    (66) loop -> repeat cond_lparen . hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    hyper_expression               shift and go to state 123
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 76

    (69) function_call -> ID function_call_check . function_call_lparen call_params0 function_call_rparen
    (71) function_call_lparen -> . LPAREN

    LPAREN          shift and go to state 125

    function_call_lparen           shift and go to state 124

state 77

    (58) array_assignment -> ID LSQBRACKET . expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> ID LSQBRACKET . expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 126
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 78

    (78) special_function_call -> MEAN LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (127) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 127 (empty -> .)
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 127
    hyper_expression               shift and go to state 128
    empty                          shift and go to state 129
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 79

    (79) special_function_call -> MEDIAN LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (127) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 127 (empty -> .)
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 130
    hyper_expression               shift and go to state 128
    empty                          shift and go to state 129
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 80

    (80) special_function_call -> MODE LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (127) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 127 (empty -> .)
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 131
    hyper_expression               shift and go to state 128
    empty                          shift and go to state 129
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 81

    (81) special_function_call -> STD LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (127) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 127 (empty -> .)
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 132
    hyper_expression               shift and go to state 128
    empty                          shift and go to state 129
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 82

    (82) special_function_call -> KURTOSIS LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (127) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 127 (empty -> .)
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 133
    hyper_expression               shift and go to state 128
    empty                          shift and go to state 129
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 83

    (83) special_function_call -> PLOT LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (127) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 127 (empty -> .)
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 134
    hyper_expression               shift and go to state 128
    empty                          shift and go to state 129
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 84

    (84) special_function_call -> DPLOT LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (127) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 127 (empty -> .)
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 135
    hyper_expression               shift and go to state 128
    empty                          shift and go to state 129
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 85

    (85) special_function_call -> VARIANCE LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (127) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 127 (empty -> .)
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 136
    hyper_expression               shift and go to state 128
    empty                          shift and go to state 129
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 86

    (86) special_function_call -> SIMMETRY LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (127) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 127 (empty -> .)
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 137
    hyper_expression               shift and go to state 128
    empty                          shift and go to state 129
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 87

    (87) special_function_call -> CORRELATION LPAREN . call_params0 RPAREN
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (127) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 127 (empty -> .)
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 138
    hyper_expression               shift and go to state 128
    empty                          shift and go to state 129
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 88

    (88) special_function_call -> DFREAD LPAREN . CONST_TEXT RPAREN

    CONST_TEXT      shift and go to state 139


state 89

    (10) var_declarations -> VAR simple_declaration var_declarations .

    INSTRUCTIONS    reduce using rule 10 (var_declarations -> VAR simple_declaration var_declarations .)
    PROCEDURES      reduce using rule 10 (var_declarations -> VAR simple_declaration var_declarations .)
    BEGIN           reduce using rule 10 (var_declarations -> VAR simple_declaration var_declarations .)
    RSQBRACKET      reduce using rule 10 (var_declarations -> VAR simple_declaration var_declarations .)
    RBRACKET        reduce using rule 10 (var_declarations -> VAR simple_declaration var_declarations .)
    RETURN          reduce using rule 10 (var_declarations -> VAR simple_declaration var_declarations .)


state 90

    (11) var_declarations -> VAR array_declaration var_declarations .

    INSTRUCTIONS    reduce using rule 11 (var_declarations -> VAR array_declaration var_declarations .)
    PROCEDURES      reduce using rule 11 (var_declarations -> VAR array_declaration var_declarations .)
    BEGIN           reduce using rule 11 (var_declarations -> VAR array_declaration var_declarations .)
    RSQBRACKET      reduce using rule 11 (var_declarations -> VAR array_declaration var_declarations .)
    RBRACKET        reduce using rule 11 (var_declarations -> VAR array_declaration var_declarations .)
    RETURN          reduce using rule 11 (var_declarations -> VAR array_declaration var_declarations .)


state 91

    (12) var_declarations -> VAR matrix_declaration var_declarations .

    INSTRUCTIONS    reduce using rule 12 (var_declarations -> VAR matrix_declaration var_declarations .)
    PROCEDURES      reduce using rule 12 (var_declarations -> VAR matrix_declaration var_declarations .)
    BEGIN           reduce using rule 12 (var_declarations -> VAR matrix_declaration var_declarations .)
    RSQBRACKET      reduce using rule 12 (var_declarations -> VAR matrix_declaration var_declarations .)
    RBRACKET        reduce using rule 12 (var_declarations -> VAR matrix_declaration var_declarations .)
    RETURN          reduce using rule 12 (var_declarations -> VAR matrix_declaration var_declarations .)


state 92

    (14) simple_declaration -> ID COLON . var_type SEMICOLON
    (17) var_type -> . type
    (18) var_type -> . DF
    (125) type -> . INT
    (126) type -> . FLOAT

    DF              shift and go to state 142
    INT             shift and go to state 143
    FLOAT           shift and go to state 144

    var_type                       shift and go to state 140
    type                           shift and go to state 141

state 93

    (15) array_declaration -> ID LSQBRACKET . CONST_INT RSQBRACKET COLON type SEMICOLON
    (16) matrix_declaration -> ID LSQBRACKET . CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    CONST_INT       shift and go to state 145


state 94

    (1) routine -> ROUTINE ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET . local_scope_init local_vars_block instructions_block RSQBRACKET
    (9) local_scope_init -> .

    LOCALS          reduce using rule 9 (local_scope_init -> .)
    INSTRUCTIONS    reduce using rule 9 (local_scope_init -> .)
    RSQBRACKET      reduce using rule 9 (local_scope_init -> .)

    local_scope_init               shift and go to state 146

state 95

    (21) function_declarations -> PROC ID . proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (22) function_declarations -> PROC ID . proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (25) proc_scope_init -> .

    LPAREN          reduce using rule 25 (proc_scope_init -> .)

    proc_scope_init                shift and go to state 147

state 96

    (36) statements -> write SEMICOLON statements .

    PROCEDURES      reduce using rule 36 (statements -> write SEMICOLON statements .)
    BEGIN           reduce using rule 36 (statements -> write SEMICOLON statements .)
    RSQBRACKET      reduce using rule 36 (statements -> write SEMICOLON statements .)
    RBRACKET        reduce using rule 36 (statements -> write SEMICOLON statements .)
    RETURN          reduce using rule 36 (statements -> write SEMICOLON statements .)


state 97

    (37) statements -> read SEMICOLON statements .

    PROCEDURES      reduce using rule 37 (statements -> read SEMICOLON statements .)
    BEGIN           reduce using rule 37 (statements -> read SEMICOLON statements .)
    RSQBRACKET      reduce using rule 37 (statements -> read SEMICOLON statements .)
    RBRACKET        reduce using rule 37 (statements -> read SEMICOLON statements .)
    RETURN          reduce using rule 37 (statements -> read SEMICOLON statements .)


state 98

    (38) statements -> var_assignment SEMICOLON statements .

    PROCEDURES      reduce using rule 38 (statements -> var_assignment SEMICOLON statements .)
    BEGIN           reduce using rule 38 (statements -> var_assignment SEMICOLON statements .)
    RSQBRACKET      reduce using rule 38 (statements -> var_assignment SEMICOLON statements .)
    RBRACKET        reduce using rule 38 (statements -> var_assignment SEMICOLON statements .)
    RETURN          reduce using rule 38 (statements -> var_assignment SEMICOLON statements .)


state 99

    (41) statements -> function_call SEMICOLON statements .

    PROCEDURES      reduce using rule 41 (statements -> function_call SEMICOLON statements .)
    BEGIN           reduce using rule 41 (statements -> function_call SEMICOLON statements .)
    RSQBRACKET      reduce using rule 41 (statements -> function_call SEMICOLON statements .)
    RBRACKET        reduce using rule 41 (statements -> function_call SEMICOLON statements .)
    RETURN          reduce using rule 41 (statements -> function_call SEMICOLON statements .)


state 100

    (42) statements -> special_function_call SEMICOLON statements .

    PROCEDURES      reduce using rule 42 (statements -> special_function_call SEMICOLON statements .)
    BEGIN           reduce using rule 42 (statements -> special_function_call SEMICOLON statements .)
    RSQBRACKET      reduce using rule 42 (statements -> special_function_call SEMICOLON statements .)
    RBRACKET        reduce using rule 42 (statements -> special_function_call SEMICOLON statements .)
    RETURN          reduce using rule 42 (statements -> special_function_call SEMICOLON statements .)


state 101

    (45) write_params0 -> write_operator expression . produce_write_quad write_params1
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression
    (52) produce_write_quad -> .

    ADD             shift and go to state 149
    SUB             shift and go to state 150
    COMMA           reduce using rule 52 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 52 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 148

state 102

    (46) write_params0 -> write_operator const_text . produce_write_quad write_params1
    (52) produce_write_quad -> .

    COMMA           reduce using rule 52 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 52 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 151

state 103

    (101) expression -> term . produce_exp_quad
    (102) term -> term . MUL push_operator term
    (103) term -> term . DIV push_operator term
    (108) produce_exp_quad -> .

    MUL             shift and go to state 153
    DIV             shift and go to state 154
    ADD             reduce using rule 108 (produce_exp_quad -> .)
    SUB             reduce using rule 108 (produce_exp_quad -> .)
    COMMA           reduce using rule 108 (produce_exp_quad -> .)
    SEMICOLON       reduce using rule 108 (produce_exp_quad -> .)
    LTHAN           reduce using rule 108 (produce_exp_quad -> .)
    GTHAN           reduce using rule 108 (produce_exp_quad -> .)
    EQUAL           reduce using rule 108 (produce_exp_quad -> .)
    DIFFERENT       reduce using rule 108 (produce_exp_quad -> .)
    AND             reduce using rule 108 (produce_exp_quad -> .)
    OR              reduce using rule 108 (produce_exp_quad -> .)
    RPAREN          reduce using rule 108 (produce_exp_quad -> .)
    RSQBRACKET      reduce using rule 108 (produce_exp_quad -> .)

    produce_exp_quad               shift and go to state 152

state 104

    (50) const_text -> CONST_TEXT .

    COMMA           reduce using rule 50 (const_text -> CONST_TEXT .)
    SEMICOLON       reduce using rule 50 (const_text -> CONST_TEXT .)


state 105

    (104) term -> factor . produce_term_quad
    (109) produce_term_quad -> .

    MUL             reduce using rule 109 (produce_term_quad -> .)
    DIV             reduce using rule 109 (produce_term_quad -> .)
    ADD             reduce using rule 109 (produce_term_quad -> .)
    SUB             reduce using rule 109 (produce_term_quad -> .)
    COMMA           reduce using rule 109 (produce_term_quad -> .)
    SEMICOLON       reduce using rule 109 (produce_term_quad -> .)
    LTHAN           reduce using rule 109 (produce_term_quad -> .)
    GTHAN           reduce using rule 109 (produce_term_quad -> .)
    EQUAL           reduce using rule 109 (produce_term_quad -> .)
    DIFFERENT       reduce using rule 109 (produce_term_quad -> .)
    AND             reduce using rule 109 (produce_term_quad -> .)
    OR              reduce using rule 109 (produce_term_quad -> .)
    RPAREN          reduce using rule 109 (produce_term_quad -> .)
    RSQBRACKET      reduce using rule 109 (produce_term_quad -> .)

    produce_term_quad              shift and go to state 155

state 106

    (110) factor -> identifier .

    MUL             reduce using rule 110 (factor -> identifier .)
    DIV             reduce using rule 110 (factor -> identifier .)
    ADD             reduce using rule 110 (factor -> identifier .)
    SUB             reduce using rule 110 (factor -> identifier .)
    COMMA           reduce using rule 110 (factor -> identifier .)
    SEMICOLON       reduce using rule 110 (factor -> identifier .)
    LTHAN           reduce using rule 110 (factor -> identifier .)
    GTHAN           reduce using rule 110 (factor -> identifier .)
    EQUAL           reduce using rule 110 (factor -> identifier .)
    DIFFERENT       reduce using rule 110 (factor -> identifier .)
    AND             reduce using rule 110 (factor -> identifier .)
    OR              reduce using rule 110 (factor -> identifier .)
    RPAREN          reduce using rule 110 (factor -> identifier .)
    RSQBRACKET      reduce using rule 110 (factor -> identifier .)


state 107

    (111) factor -> const_int .

    MUL             reduce using rule 111 (factor -> const_int .)
    DIV             reduce using rule 111 (factor -> const_int .)
    ADD             reduce using rule 111 (factor -> const_int .)
    SUB             reduce using rule 111 (factor -> const_int .)
    COMMA           reduce using rule 111 (factor -> const_int .)
    SEMICOLON       reduce using rule 111 (factor -> const_int .)
    LTHAN           reduce using rule 111 (factor -> const_int .)
    GTHAN           reduce using rule 111 (factor -> const_int .)
    EQUAL           reduce using rule 111 (factor -> const_int .)
    DIFFERENT       reduce using rule 111 (factor -> const_int .)
    AND             reduce using rule 111 (factor -> const_int .)
    OR              reduce using rule 111 (factor -> const_int .)
    RPAREN          reduce using rule 111 (factor -> const_int .)
    RSQBRACKET      reduce using rule 111 (factor -> const_int .)


state 108

    (112) factor -> const_float .

    MUL             reduce using rule 112 (factor -> const_float .)
    DIV             reduce using rule 112 (factor -> const_float .)
    ADD             reduce using rule 112 (factor -> const_float .)
    SUB             reduce using rule 112 (factor -> const_float .)
    COMMA           reduce using rule 112 (factor -> const_float .)
    SEMICOLON       reduce using rule 112 (factor -> const_float .)
    LTHAN           reduce using rule 112 (factor -> const_float .)
    GTHAN           reduce using rule 112 (factor -> const_float .)
    EQUAL           reduce using rule 112 (factor -> const_float .)
    DIFFERENT       reduce using rule 112 (factor -> const_float .)
    AND             reduce using rule 112 (factor -> const_float .)
    OR              reduce using rule 112 (factor -> const_float .)
    RPAREN          reduce using rule 112 (factor -> const_float .)
    RSQBRACKET      reduce using rule 112 (factor -> const_float .)


state 109

    (113) factor -> LPAREN . push_cap expression RPAREN pop_cap
    (121) push_cap -> .

    LPAREN          reduce using rule 121 (push_cap -> .)
    ID              reduce using rule 121 (push_cap -> .)
    CONST_INT       reduce using rule 121 (push_cap -> .)
    CONST_FLOAT     reduce using rule 121 (push_cap -> .)
    MEAN            reduce using rule 121 (push_cap -> .)
    MEDIAN          reduce using rule 121 (push_cap -> .)
    MODE            reduce using rule 121 (push_cap -> .)
    STD             reduce using rule 121 (push_cap -> .)
    KURTOSIS        reduce using rule 121 (push_cap -> .)
    PLOT            reduce using rule 121 (push_cap -> .)
    DPLOT           reduce using rule 121 (push_cap -> .)
    VARIANCE        reduce using rule 121 (push_cap -> .)
    SIMMETRY        reduce using rule 121 (push_cap -> .)
    CORRELATION     reduce using rule 121 (push_cap -> .)
    DFREAD          reduce using rule 121 (push_cap -> .)
    HOMERO          reduce using rule 121 (push_cap -> .)
    MARGE           reduce using rule 121 (push_cap -> .)

    push_cap                       shift and go to state 156

state 110

    (114) factor -> array_access .

    MUL             reduce using rule 114 (factor -> array_access .)
    DIV             reduce using rule 114 (factor -> array_access .)
    ADD             reduce using rule 114 (factor -> array_access .)
    SUB             reduce using rule 114 (factor -> array_access .)
    COMMA           reduce using rule 114 (factor -> array_access .)
    SEMICOLON       reduce using rule 114 (factor -> array_access .)
    LTHAN           reduce using rule 114 (factor -> array_access .)
    GTHAN           reduce using rule 114 (factor -> array_access .)
    EQUAL           reduce using rule 114 (factor -> array_access .)
    DIFFERENT       reduce using rule 114 (factor -> array_access .)
    AND             reduce using rule 114 (factor -> array_access .)
    OR              reduce using rule 114 (factor -> array_access .)
    RPAREN          reduce using rule 114 (factor -> array_access .)
    RSQBRACKET      reduce using rule 114 (factor -> array_access .)


state 111

    (115) factor -> matrix_access .

    MUL             reduce using rule 115 (factor -> matrix_access .)
    DIV             reduce using rule 115 (factor -> matrix_access .)
    ADD             reduce using rule 115 (factor -> matrix_access .)
    SUB             reduce using rule 115 (factor -> matrix_access .)
    COMMA           reduce using rule 115 (factor -> matrix_access .)
    SEMICOLON       reduce using rule 115 (factor -> matrix_access .)
    LTHAN           reduce using rule 115 (factor -> matrix_access .)
    GTHAN           reduce using rule 115 (factor -> matrix_access .)
    EQUAL           reduce using rule 115 (factor -> matrix_access .)
    DIFFERENT       reduce using rule 115 (factor -> matrix_access .)
    AND             reduce using rule 115 (factor -> matrix_access .)
    OR              reduce using rule 115 (factor -> matrix_access .)
    RPAREN          reduce using rule 115 (factor -> matrix_access .)
    RSQBRACKET      reduce using rule 115 (factor -> matrix_access .)


state 112

    (116) factor -> function_call .

    MUL             reduce using rule 116 (factor -> function_call .)
    DIV             reduce using rule 116 (factor -> function_call .)
    ADD             reduce using rule 116 (factor -> function_call .)
    SUB             reduce using rule 116 (factor -> function_call .)
    COMMA           reduce using rule 116 (factor -> function_call .)
    SEMICOLON       reduce using rule 116 (factor -> function_call .)
    LTHAN           reduce using rule 116 (factor -> function_call .)
    GTHAN           reduce using rule 116 (factor -> function_call .)
    EQUAL           reduce using rule 116 (factor -> function_call .)
    DIFFERENT       reduce using rule 116 (factor -> function_call .)
    AND             reduce using rule 116 (factor -> function_call .)
    OR              reduce using rule 116 (factor -> function_call .)
    RPAREN          reduce using rule 116 (factor -> function_call .)
    RSQBRACKET      reduce using rule 116 (factor -> function_call .)


state 113

    (117) factor -> special_function_call .

    MUL             reduce using rule 117 (factor -> special_function_call .)
    DIV             reduce using rule 117 (factor -> special_function_call .)
    ADD             reduce using rule 117 (factor -> special_function_call .)
    SUB             reduce using rule 117 (factor -> special_function_call .)
    COMMA           reduce using rule 117 (factor -> special_function_call .)
    SEMICOLON       reduce using rule 117 (factor -> special_function_call .)
    LTHAN           reduce using rule 117 (factor -> special_function_call .)
    GTHAN           reduce using rule 117 (factor -> special_function_call .)
    EQUAL           reduce using rule 117 (factor -> special_function_call .)
    DIFFERENT       reduce using rule 117 (factor -> special_function_call .)
    AND             reduce using rule 117 (factor -> special_function_call .)
    OR              reduce using rule 117 (factor -> special_function_call .)
    RPAREN          reduce using rule 117 (factor -> special_function_call .)
    RSQBRACKET      reduce using rule 117 (factor -> special_function_call .)


state 114

    (118) identifier -> ID .
    (123) array_access -> ID . LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> ID . LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> ID . function_call_check function_call_lparen call_params0 function_call_rparen
    (70) function_call_check -> .

    MUL             reduce using rule 118 (identifier -> ID .)
    DIV             reduce using rule 118 (identifier -> ID .)
    ADD             reduce using rule 118 (identifier -> ID .)
    SUB             reduce using rule 118 (identifier -> ID .)
    COMMA           reduce using rule 118 (identifier -> ID .)
    SEMICOLON       reduce using rule 118 (identifier -> ID .)
    LTHAN           reduce using rule 118 (identifier -> ID .)
    GTHAN           reduce using rule 118 (identifier -> ID .)
    EQUAL           reduce using rule 118 (identifier -> ID .)
    DIFFERENT       reduce using rule 118 (identifier -> ID .)
    AND             reduce using rule 118 (identifier -> ID .)
    OR              reduce using rule 118 (identifier -> ID .)
    RPAREN          reduce using rule 118 (identifier -> ID .)
    RSQBRACKET      reduce using rule 118 (identifier -> ID .)
    LSQBRACKET      shift and go to state 157
    LPAREN          reduce using rule 70 (function_call_check -> .)

    function_call_check            shift and go to state 76

state 115

    (119) const_int -> CONST_INT .

    MUL             reduce using rule 119 (const_int -> CONST_INT .)
    DIV             reduce using rule 119 (const_int -> CONST_INT .)
    ADD             reduce using rule 119 (const_int -> CONST_INT .)
    SUB             reduce using rule 119 (const_int -> CONST_INT .)
    COMMA           reduce using rule 119 (const_int -> CONST_INT .)
    SEMICOLON       reduce using rule 119 (const_int -> CONST_INT .)
    LTHAN           reduce using rule 119 (const_int -> CONST_INT .)
    GTHAN           reduce using rule 119 (const_int -> CONST_INT .)
    EQUAL           reduce using rule 119 (const_int -> CONST_INT .)
    DIFFERENT       reduce using rule 119 (const_int -> CONST_INT .)
    AND             reduce using rule 119 (const_int -> CONST_INT .)
    OR              reduce using rule 119 (const_int -> CONST_INT .)
    RPAREN          reduce using rule 119 (const_int -> CONST_INT .)
    RSQBRACKET      reduce using rule 119 (const_int -> CONST_INT .)


state 116

    (120) const_float -> CONST_FLOAT .

    MUL             reduce using rule 120 (const_float -> CONST_FLOAT .)
    DIV             reduce using rule 120 (const_float -> CONST_FLOAT .)
    ADD             reduce using rule 120 (const_float -> CONST_FLOAT .)
    SUB             reduce using rule 120 (const_float -> CONST_FLOAT .)
    COMMA           reduce using rule 120 (const_float -> CONST_FLOAT .)
    SEMICOLON       reduce using rule 120 (const_float -> CONST_FLOAT .)
    LTHAN           reduce using rule 120 (const_float -> CONST_FLOAT .)
    GTHAN           reduce using rule 120 (const_float -> CONST_FLOAT .)
    EQUAL           reduce using rule 120 (const_float -> CONST_FLOAT .)
    DIFFERENT       reduce using rule 120 (const_float -> CONST_FLOAT .)
    AND             reduce using rule 120 (const_float -> CONST_FLOAT .)
    OR              reduce using rule 120 (const_float -> CONST_FLOAT .)
    RPAREN          reduce using rule 120 (const_float -> CONST_FLOAT .)
    RSQBRACKET      reduce using rule 120 (const_float -> CONST_FLOAT .)


state 117

    (53) read -> READ push_operator identifier .

    SEMICOLON       reduce using rule 53 (read -> READ push_operator identifier .)


state 118

    (118) identifier -> ID .

    SEMICOLON       reduce using rule 118 (identifier -> ID .)


state 119

    (57) simple_assignment -> identifier ASSIGN push_operator . expression
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    identifier                     shift and go to state 106
    expression                     shift and go to state 158
    term                           shift and go to state 103
    factor                         shift and go to state 105
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 120

    (60) condition -> IF cond_lparen hyper_expression . cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> IF cond_lparen hyper_expression . cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (91) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (92) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (63) cond_rparen -> . RPAREN

    AND             shift and go to state 160
    OR              shift and go to state 161
    RPAREN          shift and go to state 162

    cond_rparen                    shift and go to state 159

state 121

    (93) hyper_expression -> super_expression . produce_hyperexp_quad
    (94) super_expression -> super_expression . LTHAN push_operator super_expression
    (95) super_expression -> super_expression . GTHAN push_operator super_expression
    (96) super_expression -> super_expression . EQUAL push_operator super_expression
    (97) super_expression -> super_expression . DIFFERENT super_expression
    (106) produce_hyperexp_quad -> .

    LTHAN           shift and go to state 164
    GTHAN           shift and go to state 165
    EQUAL           shift and go to state 166
    DIFFERENT       shift and go to state 167
    AND             reduce using rule 106 (produce_hyperexp_quad -> .)
    OR              reduce using rule 106 (produce_hyperexp_quad -> .)
    RPAREN          reduce using rule 106 (produce_hyperexp_quad -> .)
    COMMA           reduce using rule 106 (produce_hyperexp_quad -> .)

    produce_hyperexp_quad          shift and go to state 163

state 122

    (98) super_expression -> expression . produce_superexp_quad
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression
    (107) produce_superexp_quad -> .

    ADD             shift and go to state 149
    SUB             shift and go to state 150
    LTHAN           reduce using rule 107 (produce_superexp_quad -> .)
    GTHAN           reduce using rule 107 (produce_superexp_quad -> .)
    EQUAL           reduce using rule 107 (produce_superexp_quad -> .)
    DIFFERENT       reduce using rule 107 (produce_superexp_quad -> .)
    AND             reduce using rule 107 (produce_superexp_quad -> .)
    OR              reduce using rule 107 (produce_superexp_quad -> .)
    RPAREN          reduce using rule 107 (produce_superexp_quad -> .)
    COMMA           reduce using rule 107 (produce_superexp_quad -> .)

    produce_superexp_quad          shift and go to state 168

state 123

    (66) loop -> repeat cond_lparen hyper_expression . cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (91) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (92) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (63) cond_rparen -> . RPAREN

    AND             shift and go to state 160
    OR              shift and go to state 161
    RPAREN          shift and go to state 162

    cond_rparen                    shift and go to state 169

state 124

    (69) function_call -> ID function_call_check function_call_lparen . call_params0 function_call_rparen
    (73) call_params0 -> . hyper_expression handle_call_param call_params1
    (74) call_params0 -> . empty
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (127) empty -> .
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    RPAREN          reduce using rule 127 (empty -> .)
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    call_params0                   shift and go to state 170
    hyper_expression               shift and go to state 128
    empty                          shift and go to state 129
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 125

    (71) function_call_lparen -> LPAREN .

    LPAREN          reduce using rule 71 (function_call_lparen -> LPAREN .)
    ID              reduce using rule 71 (function_call_lparen -> LPAREN .)
    CONST_INT       reduce using rule 71 (function_call_lparen -> LPAREN .)
    CONST_FLOAT     reduce using rule 71 (function_call_lparen -> LPAREN .)
    MEAN            reduce using rule 71 (function_call_lparen -> LPAREN .)
    MEDIAN          reduce using rule 71 (function_call_lparen -> LPAREN .)
    MODE            reduce using rule 71 (function_call_lparen -> LPAREN .)
    STD             reduce using rule 71 (function_call_lparen -> LPAREN .)
    KURTOSIS        reduce using rule 71 (function_call_lparen -> LPAREN .)
    PLOT            reduce using rule 71 (function_call_lparen -> LPAREN .)
    DPLOT           reduce using rule 71 (function_call_lparen -> LPAREN .)
    VARIANCE        reduce using rule 71 (function_call_lparen -> LPAREN .)
    SIMMETRY        reduce using rule 71 (function_call_lparen -> LPAREN .)
    CORRELATION     reduce using rule 71 (function_call_lparen -> LPAREN .)
    DFREAD          reduce using rule 71 (function_call_lparen -> LPAREN .)
    HOMERO          reduce using rule 71 (function_call_lparen -> LPAREN .)
    MARGE           reduce using rule 71 (function_call_lparen -> LPAREN .)
    RPAREN          reduce using rule 71 (function_call_lparen -> LPAREN .)


state 126

    (58) array_assignment -> ID LSQBRACKET expression . RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> ID LSQBRACKET expression . RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

    RSQBRACKET      shift and go to state 171
    ADD             shift and go to state 149
    SUB             shift and go to state 150


state 127

    (78) special_function_call -> MEAN LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 172


state 128

    (73) call_params0 -> hyper_expression . handle_call_param call_params1
    (91) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (92) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (77) handle_call_param -> .

    AND             shift and go to state 160
    OR              shift and go to state 161
    COMMA           reduce using rule 77 (handle_call_param -> .)
    RPAREN          reduce using rule 77 (handle_call_param -> .)

    handle_call_param              shift and go to state 173

state 129

    (74) call_params0 -> empty .

    RPAREN          reduce using rule 74 (call_params0 -> empty .)


state 130

    (79) special_function_call -> MEDIAN LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 174


state 131

    (80) special_function_call -> MODE LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 175


state 132

    (81) special_function_call -> STD LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 176


state 133

    (82) special_function_call -> KURTOSIS LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 177


state 134

    (83) special_function_call -> PLOT LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 178


state 135

    (84) special_function_call -> DPLOT LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 179


state 136

    (85) special_function_call -> VARIANCE LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 180


state 137

    (86) special_function_call -> SIMMETRY LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 181


state 138

    (87) special_function_call -> CORRELATION LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 182


state 139

    (88) special_function_call -> DFREAD LPAREN CONST_TEXT . RPAREN

    RPAREN          shift and go to state 183


state 140

    (14) simple_declaration -> ID COLON var_type . SEMICOLON

    SEMICOLON       shift and go to state 184


state 141

    (17) var_type -> type .

    SEMICOLON       reduce using rule 17 (var_type -> type .)


state 142

    (18) var_type -> DF .

    SEMICOLON       reduce using rule 18 (var_type -> DF .)


state 143

    (125) type -> INT .

    SEMICOLON       reduce using rule 125 (type -> INT .)
    COMMA           reduce using rule 125 (type -> INT .)
    RPAREN          reduce using rule 125 (type -> INT .)
    LBRACKET        reduce using rule 125 (type -> INT .)


state 144

    (126) type -> FLOAT .

    SEMICOLON       reduce using rule 126 (type -> FLOAT .)
    COMMA           reduce using rule 126 (type -> FLOAT .)
    RPAREN          reduce using rule 126 (type -> FLOAT .)
    LBRACKET        reduce using rule 126 (type -> FLOAT .)


state 145

    (15) array_declaration -> ID LSQBRACKET CONST_INT . RSQBRACKET COLON type SEMICOLON
    (16) matrix_declaration -> ID LSQBRACKET CONST_INT . RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    RSQBRACKET      shift and go to state 185


state 146

    (1) routine -> ROUTINE ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init . local_vars_block instructions_block RSQBRACKET
    (4) local_vars_block -> . LOCALS COLON var_declarations
    (5) local_vars_block -> . empty
    (127) empty -> .

    LOCALS          shift and go to state 187
    INSTRUCTIONS    reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)

    local_vars_block               shift and go to state 186
    empty                          shift and go to state 188

state 147

    (21) function_declarations -> PROC ID proc_scope_init . LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (22) function_declarations -> PROC ID proc_scope_init . LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    LPAREN          shift and go to state 189


state 148

    (45) write_params0 -> write_operator expression produce_write_quad . write_params1
    (47) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (48) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (49) write_params1 -> . empty
    (127) empty -> .

    COMMA           shift and go to state 191
    SEMICOLON       reduce using rule 127 (empty -> .)

    write_params1                  shift and go to state 190
    empty                          shift and go to state 192

state 149

    (99) expression -> expression ADD . push_operator expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 193

state 150

    (100) expression -> expression SUB . push_operator expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 194

state 151

    (46) write_params0 -> write_operator const_text produce_write_quad . write_params1
    (47) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (48) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (49) write_params1 -> . empty
    (127) empty -> .

    COMMA           shift and go to state 191
    SEMICOLON       reduce using rule 127 (empty -> .)

    write_params1                  shift and go to state 195
    empty                          shift and go to state 192

state 152

    (101) expression -> term produce_exp_quad .

    ADD             reduce using rule 101 (expression -> term produce_exp_quad .)
    SUB             reduce using rule 101 (expression -> term produce_exp_quad .)
    COMMA           reduce using rule 101 (expression -> term produce_exp_quad .)
    SEMICOLON       reduce using rule 101 (expression -> term produce_exp_quad .)
    LTHAN           reduce using rule 101 (expression -> term produce_exp_quad .)
    GTHAN           reduce using rule 101 (expression -> term produce_exp_quad .)
    EQUAL           reduce using rule 101 (expression -> term produce_exp_quad .)
    DIFFERENT       reduce using rule 101 (expression -> term produce_exp_quad .)
    AND             reduce using rule 101 (expression -> term produce_exp_quad .)
    OR              reduce using rule 101 (expression -> term produce_exp_quad .)
    RPAREN          reduce using rule 101 (expression -> term produce_exp_quad .)
    RSQBRACKET      reduce using rule 101 (expression -> term produce_exp_quad .)


state 153

    (102) term -> term MUL . push_operator term
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 196

state 154

    (103) term -> term DIV . push_operator term
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 197

state 155

    (104) term -> factor produce_term_quad .

    MUL             reduce using rule 104 (term -> factor produce_term_quad .)
    DIV             reduce using rule 104 (term -> factor produce_term_quad .)
    ADD             reduce using rule 104 (term -> factor produce_term_quad .)
    SUB             reduce using rule 104 (term -> factor produce_term_quad .)
    COMMA           reduce using rule 104 (term -> factor produce_term_quad .)
    SEMICOLON       reduce using rule 104 (term -> factor produce_term_quad .)
    LTHAN           reduce using rule 104 (term -> factor produce_term_quad .)
    GTHAN           reduce using rule 104 (term -> factor produce_term_quad .)
    EQUAL           reduce using rule 104 (term -> factor produce_term_quad .)
    DIFFERENT       reduce using rule 104 (term -> factor produce_term_quad .)
    AND             reduce using rule 104 (term -> factor produce_term_quad .)
    OR              reduce using rule 104 (term -> factor produce_term_quad .)
    RPAREN          reduce using rule 104 (term -> factor produce_term_quad .)
    RSQBRACKET      reduce using rule 104 (term -> factor produce_term_quad .)


state 156

    (113) factor -> LPAREN push_cap . expression RPAREN pop_cap
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 198
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 157

    (123) array_access -> ID LSQBRACKET . expression RSQBRACKET
    (124) matrix_access -> ID LSQBRACKET . expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 199
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 158

    (57) simple_assignment -> identifier ASSIGN push_operator expression .
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

    SEMICOLON       reduce using rule 57 (simple_assignment -> identifier ASSIGN push_operator expression .)
    ADD             shift and go to state 149
    SUB             shift and go to state 150


state 159

    (60) condition -> IF cond_lparen hyper_expression cond_rparen . LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> IF cond_lparen hyper_expression cond_rparen . LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump

    LBRACKET        shift and go to state 200


state 160

    (91) hyper_expression -> hyper_expression AND . push_operator hyper_expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 201

state 161

    (92) hyper_expression -> hyper_expression OR . push_operator hyper_expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 202

state 162

    (63) cond_rparen -> RPAREN .

    LBRACKET        reduce using rule 63 (cond_rparen -> RPAREN .)


state 163

    (93) hyper_expression -> super_expression produce_hyperexp_quad .

    AND             reduce using rule 93 (hyper_expression -> super_expression produce_hyperexp_quad .)
    OR              reduce using rule 93 (hyper_expression -> super_expression produce_hyperexp_quad .)
    RPAREN          reduce using rule 93 (hyper_expression -> super_expression produce_hyperexp_quad .)
    COMMA           reduce using rule 93 (hyper_expression -> super_expression produce_hyperexp_quad .)


state 164

    (94) super_expression -> super_expression LTHAN . push_operator super_expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 203

state 165

    (95) super_expression -> super_expression GTHAN . push_operator super_expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 204

state 166

    (96) super_expression -> super_expression EQUAL . push_operator super_expression
    (105) push_operator -> .

    LPAREN          reduce using rule 105 (push_operator -> .)
    ID              reduce using rule 105 (push_operator -> .)
    CONST_INT       reduce using rule 105 (push_operator -> .)
    CONST_FLOAT     reduce using rule 105 (push_operator -> .)
    MEAN            reduce using rule 105 (push_operator -> .)
    MEDIAN          reduce using rule 105 (push_operator -> .)
    MODE            reduce using rule 105 (push_operator -> .)
    STD             reduce using rule 105 (push_operator -> .)
    KURTOSIS        reduce using rule 105 (push_operator -> .)
    PLOT            reduce using rule 105 (push_operator -> .)
    DPLOT           reduce using rule 105 (push_operator -> .)
    VARIANCE        reduce using rule 105 (push_operator -> .)
    SIMMETRY        reduce using rule 105 (push_operator -> .)
    CORRELATION     reduce using rule 105 (push_operator -> .)
    DFREAD          reduce using rule 105 (push_operator -> .)
    HOMERO          reduce using rule 105 (push_operator -> .)
    MARGE           reduce using rule 105 (push_operator -> .)

    push_operator                  shift and go to state 205

state 167

    (97) super_expression -> super_expression DIFFERENT . super_expression
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    super_expression               shift and go to state 206
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 168

    (98) super_expression -> expression produce_superexp_quad .

    LTHAN           reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    GTHAN           reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    EQUAL           reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    DIFFERENT       reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    AND             reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    OR              reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    RPAREN          reduce using rule 98 (super_expression -> expression produce_superexp_quad .)
    COMMA           reduce using rule 98 (super_expression -> expression produce_superexp_quad .)


state 169

    (66) loop -> repeat cond_lparen hyper_expression cond_rparen . LBRACKET statements RBRACKET fill_returning_jump

    LBRACKET        shift and go to state 207


state 170

    (69) function_call -> ID function_call_check function_call_lparen call_params0 . function_call_rparen
    (72) function_call_rparen -> . RPAREN

    RPAREN          shift and go to state 209

    function_call_rparen           shift and go to state 208

state 171

    (58) array_assignment -> ID LSQBRACKET expression RSQBRACKET . ASSIGN expression
    (59) matrix_assignment -> ID LSQBRACKET expression RSQBRACKET . LSQBRACKET expression RSQBRACKET ASSIGN expression

    ASSIGN          shift and go to state 211
    LSQBRACKET      shift and go to state 210


state 172

    (78) special_function_call -> MEAN LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    AND             reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    OR              reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 78 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)


state 173

    (73) call_params0 -> hyper_expression handle_call_param . call_params1
    (75) call_params1 -> . COMMA hyper_expression handle_call_param call_params1
    (76) call_params1 -> . empty
    (127) empty -> .

    COMMA           shift and go to state 213
    RPAREN          reduce using rule 127 (empty -> .)

    call_params1                   shift and go to state 212
    empty                          shift and go to state 214

state 174

    (79) special_function_call -> MEDIAN LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    AND             reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    OR              reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 79 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)


state 175

    (80) special_function_call -> MODE LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    AND             reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    OR              reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 80 (special_function_call -> MODE LPAREN call_params0 RPAREN .)


state 176

    (81) special_function_call -> STD LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    AND             reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    OR              reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 81 (special_function_call -> STD LPAREN call_params0 RPAREN .)


state 177

    (82) special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    AND             reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    OR              reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 82 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)


state 178

    (83) special_function_call -> PLOT LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    AND             reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    OR              reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 83 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)


state 179

    (84) special_function_call -> DPLOT LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    AND             reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    OR              reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 84 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)


state 180

    (85) special_function_call -> VARIANCE LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    AND             reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    OR              reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 85 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)


state 181

    (86) special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    AND             reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    OR              reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 86 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)


state 182

    (87) special_function_call -> CORRELATION LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    AND             reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    OR              reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 87 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)


state 183

    (88) special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .

    SEMICOLON       reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    MUL             reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    DIV             reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    ADD             reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    SUB             reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    COMMA           reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    LTHAN           reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    GTHAN           reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    EQUAL           reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    DIFFERENT       reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    AND             reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    OR              reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    RPAREN          reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    RSQBRACKET      reduce using rule 88 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)


state 184

    (14) simple_declaration -> ID COLON var_type SEMICOLON .

    VAR             reduce using rule 14 (simple_declaration -> ID COLON var_type SEMICOLON .)
    INSTRUCTIONS    reduce using rule 14 (simple_declaration -> ID COLON var_type SEMICOLON .)
    PROCEDURES      reduce using rule 14 (simple_declaration -> ID COLON var_type SEMICOLON .)
    BEGIN           reduce using rule 14 (simple_declaration -> ID COLON var_type SEMICOLON .)
    RSQBRACKET      reduce using rule 14 (simple_declaration -> ID COLON var_type SEMICOLON .)
    RBRACKET        reduce using rule 14 (simple_declaration -> ID COLON var_type SEMICOLON .)
    RETURN          reduce using rule 14 (simple_declaration -> ID COLON var_type SEMICOLON .)


state 185

    (15) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET . COLON type SEMICOLON
    (16) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET . LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    COLON           shift and go to state 216
    LSQBRACKET      shift and go to state 215


state 186

    (1) routine -> ROUTINE ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block . instructions_block RSQBRACKET
    (6) instructions_block -> . INSTRUCTIONS COLON statements
    (7) instructions_block -> . empty
    (127) empty -> .

    INSTRUCTIONS    shift and go to state 10
    RSQBRACKET      reduce using rule 127 (empty -> .)

    instructions_block             shift and go to state 217
    empty                          shift and go to state 11

state 187

    (4) local_vars_block -> LOCALS . COLON var_declarations

    COLON           shift and go to state 218


state 188

    (5) local_vars_block -> empty .

    INSTRUCTIONS    reduce using rule 5 (local_vars_block -> empty .)
    RSQBRACKET      reduce using rule 5 (local_vars_block -> empty .)
    RBRACKET        reduce using rule 5 (local_vars_block -> empty .)
    RETURN          reduce using rule 5 (local_vars_block -> empty .)


state 189

    (21) function_declarations -> PROC ID proc_scope_init LPAREN . params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (22) function_declarations -> PROC ID proc_scope_init LPAREN . params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (31) params0 -> . param params1
    (32) params0 -> . empty
    (35) param -> . ID COLON type
    (127) empty -> .

    ID              shift and go to state 219
    RPAREN          reduce using rule 127 (empty -> .)

    params0                        shift and go to state 220
    param                          shift and go to state 221
    empty                          shift and go to state 222

state 190

    (45) write_params0 -> write_operator expression produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 45 (write_params0 -> write_operator expression produce_write_quad write_params1 .)


state 191

    (47) write_params1 -> COMMA . write_operator expression produce_write_quad write_params1
    (48) write_params1 -> COMMA . write_operator const_text produce_write_quad write_params1
    (51) write_operator -> .

    CONST_TEXT      reduce using rule 51 (write_operator -> .)
    LPAREN          reduce using rule 51 (write_operator -> .)
    ID              reduce using rule 51 (write_operator -> .)
    CONST_INT       reduce using rule 51 (write_operator -> .)
    CONST_FLOAT     reduce using rule 51 (write_operator -> .)
    MEAN            reduce using rule 51 (write_operator -> .)
    MEDIAN          reduce using rule 51 (write_operator -> .)
    MODE            reduce using rule 51 (write_operator -> .)
    STD             reduce using rule 51 (write_operator -> .)
    KURTOSIS        reduce using rule 51 (write_operator -> .)
    PLOT            reduce using rule 51 (write_operator -> .)
    DPLOT           reduce using rule 51 (write_operator -> .)
    VARIANCE        reduce using rule 51 (write_operator -> .)
    SIMMETRY        reduce using rule 51 (write_operator -> .)
    CORRELATION     reduce using rule 51 (write_operator -> .)
    DFREAD          reduce using rule 51 (write_operator -> .)
    HOMERO          reduce using rule 51 (write_operator -> .)
    MARGE           reduce using rule 51 (write_operator -> .)

    write_operator                 shift and go to state 223

state 192

    (49) write_params1 -> empty .

    SEMICOLON       reduce using rule 49 (write_params1 -> empty .)


state 193

    (99) expression -> expression ADD push_operator . expression
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 224
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 194

    (100) expression -> expression SUB push_operator . expression
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 225
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 195

    (46) write_params0 -> write_operator const_text produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 46 (write_params0 -> write_operator const_text produce_write_quad write_params1 .)


state 196

    (102) term -> term MUL push_operator . term
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    term                           shift and go to state 226
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 197

    (103) term -> term DIV push_operator . term
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    term                           shift and go to state 227
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 198

    (113) factor -> LPAREN push_cap expression . RPAREN pop_cap
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

    RPAREN          shift and go to state 228
    ADD             shift and go to state 149
    SUB             shift and go to state 150


state 199

    (123) array_access -> ID LSQBRACKET expression . RSQBRACKET
    (124) matrix_access -> ID LSQBRACKET expression . RSQBRACKET LSQBRACKET expression RSQBRACKET
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

    RSQBRACKET      shift and go to state 229
    ADD             shift and go to state 149
    SUB             shift and go to state 150


state 200

    (60) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET . statements RBRACKET fill_pending_jump
    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET . statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (36) statements -> . write SEMICOLON statements
    (37) statements -> . read SEMICOLON statements
    (38) statements -> . var_assignment SEMICOLON statements
    (39) statements -> . condition statements
    (40) statements -> . loop statements
    (41) statements -> . function_call SEMICOLON statements
    (42) statements -> . special_function_call SEMICOLON statements
    (43) statements -> . empty
    (44) write -> . WRITE write_params0
    (53) read -> . READ push_operator identifier
    (54) var_assignment -> . simple_assignment
    (55) var_assignment -> . array_assignment
    (56) var_assignment -> . matrix_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (127) empty -> .
    (57) simple_assignment -> . identifier ASSIGN push_operator expression
    (58) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID

    WRITE           shift and go to state 31
    READ            shift and go to state 32
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    RBRACKET        reduce using rule 127 (empty -> .)
    REPEAT          shift and go to state 53

    statements                     shift and go to state 230
    write                          shift and go to state 23
    read                           shift and go to state 24
    var_assignment                 shift and go to state 25
    condition                      shift and go to state 26
    loop                           shift and go to state 27
    function_call                  shift and go to state 28
    special_function_call          shift and go to state 29
    empty                          shift and go to state 30
    identifier                     shift and go to state 33
    simple_assignment              shift and go to state 34
    array_assignment               shift and go to state 35
    matrix_assignment              shift and go to state 36
    repeat                         shift and go to state 38

state 201

    (91) hyper_expression -> hyper_expression AND push_operator . hyper_expression
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    hyper_expression               shift and go to state 231
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 202

    (92) hyper_expression -> hyper_expression OR push_operator . hyper_expression
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    hyper_expression               shift and go to state 232
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 203

    (94) super_expression -> super_expression LTHAN push_operator . super_expression
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    super_expression               shift and go to state 233
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 204

    (95) super_expression -> super_expression GTHAN push_operator . super_expression
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    super_expression               shift and go to state 234
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 205

    (96) super_expression -> super_expression EQUAL push_operator . super_expression
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    super_expression               shift and go to state 235
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 206

    (97) super_expression -> super_expression DIFFERENT super_expression .
    (94) super_expression -> super_expression . LTHAN push_operator super_expression
    (95) super_expression -> super_expression . GTHAN push_operator super_expression
    (96) super_expression -> super_expression . EQUAL push_operator super_expression
    (97) super_expression -> super_expression . DIFFERENT super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 97 (super_expression -> super_expression DIFFERENT super_expression .)
    OR              reduce using rule 97 (super_expression -> super_expression DIFFERENT super_expression .)
    RPAREN          reduce using rule 97 (super_expression -> super_expression DIFFERENT super_expression .)
    COMMA           reduce using rule 97 (super_expression -> super_expression DIFFERENT super_expression .)
    LTHAN           shift and go to state 164
    GTHAN           shift and go to state 165
    EQUAL           shift and go to state 166
    DIFFERENT       shift and go to state 167

  ! LTHAN           [ reduce using rule 97 (super_expression -> super_expression DIFFERENT super_expression .) ]
  ! GTHAN           [ reduce using rule 97 (super_expression -> super_expression DIFFERENT super_expression .) ]
  ! EQUAL           [ reduce using rule 97 (super_expression -> super_expression DIFFERENT super_expression .) ]
  ! DIFFERENT       [ reduce using rule 97 (super_expression -> super_expression DIFFERENT super_expression .) ]


state 207

    (66) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET . statements RBRACKET fill_returning_jump
    (36) statements -> . write SEMICOLON statements
    (37) statements -> . read SEMICOLON statements
    (38) statements -> . var_assignment SEMICOLON statements
    (39) statements -> . condition statements
    (40) statements -> . loop statements
    (41) statements -> . function_call SEMICOLON statements
    (42) statements -> . special_function_call SEMICOLON statements
    (43) statements -> . empty
    (44) write -> . WRITE write_params0
    (53) read -> . READ push_operator identifier
    (54) var_assignment -> . simple_assignment
    (55) var_assignment -> . array_assignment
    (56) var_assignment -> . matrix_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (127) empty -> .
    (57) simple_assignment -> . identifier ASSIGN push_operator expression
    (58) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID

    WRITE           shift and go to state 31
    READ            shift and go to state 32
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    RBRACKET        reduce using rule 127 (empty -> .)
    REPEAT          shift and go to state 53

    repeat                         shift and go to state 38
    statements                     shift and go to state 236
    write                          shift and go to state 23
    read                           shift and go to state 24
    var_assignment                 shift and go to state 25
    condition                      shift and go to state 26
    loop                           shift and go to state 27
    function_call                  shift and go to state 28
    special_function_call          shift and go to state 29
    empty                          shift and go to state 30
    identifier                     shift and go to state 33
    simple_assignment              shift and go to state 34
    array_assignment               shift and go to state 35
    matrix_assignment              shift and go to state 36

state 208

    (69) function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .

    SEMICOLON       reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    MUL             reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    DIV             reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    ADD             reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    SUB             reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    COMMA           reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    LTHAN           reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    GTHAN           reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    EQUAL           reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    DIFFERENT       reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    AND             reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    OR              reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    RPAREN          reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    RSQBRACKET      reduce using rule 69 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)


state 209

    (72) function_call_rparen -> RPAREN .

    SEMICOLON       reduce using rule 72 (function_call_rparen -> RPAREN .)
    MUL             reduce using rule 72 (function_call_rparen -> RPAREN .)
    DIV             reduce using rule 72 (function_call_rparen -> RPAREN .)
    ADD             reduce using rule 72 (function_call_rparen -> RPAREN .)
    SUB             reduce using rule 72 (function_call_rparen -> RPAREN .)
    COMMA           reduce using rule 72 (function_call_rparen -> RPAREN .)
    LTHAN           reduce using rule 72 (function_call_rparen -> RPAREN .)
    GTHAN           reduce using rule 72 (function_call_rparen -> RPAREN .)
    EQUAL           reduce using rule 72 (function_call_rparen -> RPAREN .)
    DIFFERENT       reduce using rule 72 (function_call_rparen -> RPAREN .)
    AND             reduce using rule 72 (function_call_rparen -> RPAREN .)
    OR              reduce using rule 72 (function_call_rparen -> RPAREN .)
    RPAREN          reduce using rule 72 (function_call_rparen -> RPAREN .)
    RSQBRACKET      reduce using rule 72 (function_call_rparen -> RPAREN .)


state 210

    (59) matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET . expression RSQBRACKET ASSIGN expression
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 237
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 211

    (58) array_assignment -> ID LSQBRACKET expression RSQBRACKET ASSIGN . expression
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 238
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 212

    (73) call_params0 -> hyper_expression handle_call_param call_params1 .

    RPAREN          reduce using rule 73 (call_params0 -> hyper_expression handle_call_param call_params1 .)


state 213

    (75) call_params1 -> COMMA . hyper_expression handle_call_param call_params1
    (91) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (92) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (93) hyper_expression -> . super_expression produce_hyperexp_quad
    (94) super_expression -> . super_expression LTHAN push_operator super_expression
    (95) super_expression -> . super_expression GTHAN push_operator super_expression
    (96) super_expression -> . super_expression EQUAL push_operator super_expression
    (97) super_expression -> . super_expression DIFFERENT super_expression
    (98) super_expression -> . expression produce_superexp_quad
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    hyper_expression               shift and go to state 239
    super_expression               shift and go to state 121
    expression                     shift and go to state 122
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 214

    (76) call_params1 -> empty .

    RPAREN          reduce using rule 76 (call_params1 -> empty .)


state 215

    (16) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET . CONST_INT RSQBRACKET COLON type SEMICOLON

    CONST_INT       shift and go to state 240


state 216

    (15) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON . type SEMICOLON
    (125) type -> . INT
    (126) type -> . FLOAT

    INT             shift and go to state 143
    FLOAT           shift and go to state 144

    type                           shift and go to state 241

state 217

    (1) routine -> ROUTINE ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block instructions_block . RSQBRACKET

    RSQBRACKET      shift and go to state 242


state 218

    (4) local_vars_block -> LOCALS COLON . var_declarations
    (10) var_declarations -> . VAR simple_declaration var_declarations
    (11) var_declarations -> . VAR array_declaration var_declarations
    (12) var_declarations -> . VAR matrix_declaration var_declarations
    (13) var_declarations -> . empty
    (127) empty -> .

    VAR             shift and go to state 18
    INSTRUCTIONS    reduce using rule 127 (empty -> .)
    RSQBRACKET      reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)

    var_declarations               shift and go to state 243
    empty                          shift and go to state 19

state 219

    (35) param -> ID . COLON type

    COLON           shift and go to state 244


state 220

    (21) function_declarations -> PROC ID proc_scope_init LPAREN params0 . RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 . RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    RPAREN          shift and go to state 245


state 221

    (31) params0 -> param . params1
    (33) params1 -> . COMMA param params1
    (34) params1 -> . empty
    (127) empty -> .

    COMMA           shift and go to state 247
    RPAREN          reduce using rule 127 (empty -> .)

    params1                        shift and go to state 246
    empty                          shift and go to state 248

state 222

    (32) params0 -> empty .

    RPAREN          reduce using rule 32 (params0 -> empty .)


state 223

    (47) write_params1 -> COMMA write_operator . expression produce_write_quad write_params1
    (48) write_params1 -> COMMA write_operator . const_text produce_write_quad write_params1
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (50) const_text -> . CONST_TEXT
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    CONST_TEXT      shift and go to state 104
    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 249
    const_text                     shift and go to state 250
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 224

    (99) expression -> expression ADD push_operator expression .
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    COMMA           reduce using rule 99 (expression -> expression ADD push_operator expression .)
    SEMICOLON       reduce using rule 99 (expression -> expression ADD push_operator expression .)
    LTHAN           reduce using rule 99 (expression -> expression ADD push_operator expression .)
    GTHAN           reduce using rule 99 (expression -> expression ADD push_operator expression .)
    EQUAL           reduce using rule 99 (expression -> expression ADD push_operator expression .)
    DIFFERENT       reduce using rule 99 (expression -> expression ADD push_operator expression .)
    AND             reduce using rule 99 (expression -> expression ADD push_operator expression .)
    OR              reduce using rule 99 (expression -> expression ADD push_operator expression .)
    RPAREN          reduce using rule 99 (expression -> expression ADD push_operator expression .)
    RSQBRACKET      reduce using rule 99 (expression -> expression ADD push_operator expression .)
    ADD             shift and go to state 149
    SUB             shift and go to state 150

  ! ADD             [ reduce using rule 99 (expression -> expression ADD push_operator expression .) ]
  ! SUB             [ reduce using rule 99 (expression -> expression ADD push_operator expression .) ]


state 225

    (100) expression -> expression SUB push_operator expression .
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    COMMA           reduce using rule 100 (expression -> expression SUB push_operator expression .)
    SEMICOLON       reduce using rule 100 (expression -> expression SUB push_operator expression .)
    LTHAN           reduce using rule 100 (expression -> expression SUB push_operator expression .)
    GTHAN           reduce using rule 100 (expression -> expression SUB push_operator expression .)
    EQUAL           reduce using rule 100 (expression -> expression SUB push_operator expression .)
    DIFFERENT       reduce using rule 100 (expression -> expression SUB push_operator expression .)
    AND             reduce using rule 100 (expression -> expression SUB push_operator expression .)
    OR              reduce using rule 100 (expression -> expression SUB push_operator expression .)
    RPAREN          reduce using rule 100 (expression -> expression SUB push_operator expression .)
    RSQBRACKET      reduce using rule 100 (expression -> expression SUB push_operator expression .)
    ADD             shift and go to state 149
    SUB             shift and go to state 150

  ! ADD             [ reduce using rule 100 (expression -> expression SUB push_operator expression .) ]
  ! SUB             [ reduce using rule 100 (expression -> expression SUB push_operator expression .) ]


state 226

    (102) term -> term MUL push_operator term .
    (102) term -> term . MUL push_operator term
    (103) term -> term . DIV push_operator term

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    ADD             reduce using rule 102 (term -> term MUL push_operator term .)
    SUB             reduce using rule 102 (term -> term MUL push_operator term .)
    COMMA           reduce using rule 102 (term -> term MUL push_operator term .)
    SEMICOLON       reduce using rule 102 (term -> term MUL push_operator term .)
    LTHAN           reduce using rule 102 (term -> term MUL push_operator term .)
    GTHAN           reduce using rule 102 (term -> term MUL push_operator term .)
    EQUAL           reduce using rule 102 (term -> term MUL push_operator term .)
    DIFFERENT       reduce using rule 102 (term -> term MUL push_operator term .)
    AND             reduce using rule 102 (term -> term MUL push_operator term .)
    OR              reduce using rule 102 (term -> term MUL push_operator term .)
    RPAREN          reduce using rule 102 (term -> term MUL push_operator term .)
    RSQBRACKET      reduce using rule 102 (term -> term MUL push_operator term .)
    MUL             shift and go to state 153
    DIV             shift and go to state 154

  ! MUL             [ reduce using rule 102 (term -> term MUL push_operator term .) ]
  ! DIV             [ reduce using rule 102 (term -> term MUL push_operator term .) ]


state 227

    (103) term -> term DIV push_operator term .
    (102) term -> term . MUL push_operator term
    (103) term -> term . DIV push_operator term

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    ADD             reduce using rule 103 (term -> term DIV push_operator term .)
    SUB             reduce using rule 103 (term -> term DIV push_operator term .)
    COMMA           reduce using rule 103 (term -> term DIV push_operator term .)
    SEMICOLON       reduce using rule 103 (term -> term DIV push_operator term .)
    LTHAN           reduce using rule 103 (term -> term DIV push_operator term .)
    GTHAN           reduce using rule 103 (term -> term DIV push_operator term .)
    EQUAL           reduce using rule 103 (term -> term DIV push_operator term .)
    DIFFERENT       reduce using rule 103 (term -> term DIV push_operator term .)
    AND             reduce using rule 103 (term -> term DIV push_operator term .)
    OR              reduce using rule 103 (term -> term DIV push_operator term .)
    RPAREN          reduce using rule 103 (term -> term DIV push_operator term .)
    RSQBRACKET      reduce using rule 103 (term -> term DIV push_operator term .)
    MUL             shift and go to state 153
    DIV             shift and go to state 154

  ! MUL             [ reduce using rule 103 (term -> term DIV push_operator term .) ]
  ! DIV             [ reduce using rule 103 (term -> term DIV push_operator term .) ]


state 228

    (113) factor -> LPAREN push_cap expression RPAREN . pop_cap
    (122) pop_cap -> .

    MUL             reduce using rule 122 (pop_cap -> .)
    DIV             reduce using rule 122 (pop_cap -> .)
    ADD             reduce using rule 122 (pop_cap -> .)
    SUB             reduce using rule 122 (pop_cap -> .)
    COMMA           reduce using rule 122 (pop_cap -> .)
    SEMICOLON       reduce using rule 122 (pop_cap -> .)
    LTHAN           reduce using rule 122 (pop_cap -> .)
    GTHAN           reduce using rule 122 (pop_cap -> .)
    EQUAL           reduce using rule 122 (pop_cap -> .)
    DIFFERENT       reduce using rule 122 (pop_cap -> .)
    AND             reduce using rule 122 (pop_cap -> .)
    OR              reduce using rule 122 (pop_cap -> .)
    RPAREN          reduce using rule 122 (pop_cap -> .)
    RSQBRACKET      reduce using rule 122 (pop_cap -> .)

    pop_cap                        shift and go to state 251

state 229

    (123) array_access -> ID LSQBRACKET expression RSQBRACKET .
    (124) matrix_access -> ID LSQBRACKET expression RSQBRACKET . LSQBRACKET expression RSQBRACKET

    MUL             reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    DIV             reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    ADD             reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    SUB             reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    COMMA           reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    SEMICOLON       reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    LTHAN           reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    GTHAN           reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    EQUAL           reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    DIFFERENT       reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    AND             reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    OR              reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    RPAREN          reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    RSQBRACKET      reduce using rule 123 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    LSQBRACKET      shift and go to state 252


state 230

    (60) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements . RBRACKET fill_pending_jump
    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements . RBRACKET else LBRACKET statements RBRACKET fill_pending_jump

    RBRACKET        shift and go to state 253


state 231

    (91) hyper_expression -> hyper_expression AND push_operator hyper_expression .
    (91) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (92) hyper_expression -> hyper_expression . OR push_operator hyper_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 91 (hyper_expression -> hyper_expression AND push_operator hyper_expression .)
    COMMA           reduce using rule 91 (hyper_expression -> hyper_expression AND push_operator hyper_expression .)
    AND             shift and go to state 160
    OR              shift and go to state 161

  ! AND             [ reduce using rule 91 (hyper_expression -> hyper_expression AND push_operator hyper_expression .) ]
  ! OR              [ reduce using rule 91 (hyper_expression -> hyper_expression AND push_operator hyper_expression .) ]


state 232

    (92) hyper_expression -> hyper_expression OR push_operator hyper_expression .
    (91) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (92) hyper_expression -> hyper_expression . OR push_operator hyper_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 92 (hyper_expression -> hyper_expression OR push_operator hyper_expression .)
    COMMA           reduce using rule 92 (hyper_expression -> hyper_expression OR push_operator hyper_expression .)
    AND             shift and go to state 160
    OR              shift and go to state 161

  ! AND             [ reduce using rule 92 (hyper_expression -> hyper_expression OR push_operator hyper_expression .) ]
  ! OR              [ reduce using rule 92 (hyper_expression -> hyper_expression OR push_operator hyper_expression .) ]


state 233

    (94) super_expression -> super_expression LTHAN push_operator super_expression .
    (94) super_expression -> super_expression . LTHAN push_operator super_expression
    (95) super_expression -> super_expression . GTHAN push_operator super_expression
    (96) super_expression -> super_expression . EQUAL push_operator super_expression
    (97) super_expression -> super_expression . DIFFERENT super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .)
    OR              reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .)
    RPAREN          reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .)
    COMMA           reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .)
    LTHAN           shift and go to state 164
    GTHAN           shift and go to state 165
    EQUAL           shift and go to state 166
    DIFFERENT       shift and go to state 167

  ! LTHAN           [ reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 94 (super_expression -> super_expression LTHAN push_operator super_expression .) ]


state 234

    (95) super_expression -> super_expression GTHAN push_operator super_expression .
    (94) super_expression -> super_expression . LTHAN push_operator super_expression
    (95) super_expression -> super_expression . GTHAN push_operator super_expression
    (96) super_expression -> super_expression . EQUAL push_operator super_expression
    (97) super_expression -> super_expression . DIFFERENT super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .)
    OR              reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .)
    RPAREN          reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .)
    COMMA           reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .)
    LTHAN           shift and go to state 164
    GTHAN           shift and go to state 165
    EQUAL           shift and go to state 166
    DIFFERENT       shift and go to state 167

  ! LTHAN           [ reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 95 (super_expression -> super_expression GTHAN push_operator super_expression .) ]


state 235

    (96) super_expression -> super_expression EQUAL push_operator super_expression .
    (94) super_expression -> super_expression . LTHAN push_operator super_expression
    (95) super_expression -> super_expression . GTHAN push_operator super_expression
    (96) super_expression -> super_expression . EQUAL push_operator super_expression
    (97) super_expression -> super_expression . DIFFERENT super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .)
    OR              reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .)
    RPAREN          reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .)
    COMMA           reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .)
    LTHAN           shift and go to state 164
    GTHAN           shift and go to state 165
    EQUAL           shift and go to state 166
    DIFFERENT       shift and go to state 167

  ! LTHAN           [ reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 96 (super_expression -> super_expression EQUAL push_operator super_expression .) ]


state 236

    (66) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements . RBRACKET fill_returning_jump

    RBRACKET        shift and go to state 254


state 237

    (59) matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression . RSQBRACKET ASSIGN expression
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

    RSQBRACKET      shift and go to state 255
    ADD             shift and go to state 149
    SUB             shift and go to state 150


state 238

    (58) array_assignment -> ID LSQBRACKET expression RSQBRACKET ASSIGN expression .
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

    SEMICOLON       reduce using rule 58 (array_assignment -> ID LSQBRACKET expression RSQBRACKET ASSIGN expression .)
    ADD             shift and go to state 149
    SUB             shift and go to state 150


state 239

    (75) call_params1 -> COMMA hyper_expression . handle_call_param call_params1
    (91) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (92) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (77) handle_call_param -> .

    AND             shift and go to state 160
    OR              shift and go to state 161
    COMMA           reduce using rule 77 (handle_call_param -> .)
    RPAREN          reduce using rule 77 (handle_call_param -> .)

    handle_call_param              shift and go to state 256

state 240

    (16) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT . RSQBRACKET COLON type SEMICOLON

    RSQBRACKET      shift and go to state 257


state 241

    (15) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type . SEMICOLON

    SEMICOLON       shift and go to state 258


state 242

    (1) routine -> ROUTINE ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET .

    $end            reduce using rule 1 (routine -> ROUTINE ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block instructions_block RSQBRACKET .)


state 243

    (4) local_vars_block -> LOCALS COLON var_declarations .

    INSTRUCTIONS    reduce using rule 4 (local_vars_block -> LOCALS COLON var_declarations .)
    RSQBRACKET      reduce using rule 4 (local_vars_block -> LOCALS COLON var_declarations .)
    RBRACKET        reduce using rule 4 (local_vars_block -> LOCALS COLON var_declarations .)
    RETURN          reduce using rule 4 (local_vars_block -> LOCALS COLON var_declarations .)


state 244

    (35) param -> ID COLON . type
    (125) type -> . INT
    (126) type -> . FLOAT

    INT             shift and go to state 143
    FLOAT           shift and go to state 144

    type                           shift and go to state 259

state 245

    (21) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN . COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN . COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    COLON           shift and go to state 260


state 246

    (31) params0 -> param params1 .

    RPAREN          reduce using rule 31 (params0 -> param params1 .)


state 247

    (33) params1 -> COMMA . param params1
    (35) param -> . ID COLON type

    ID              shift and go to state 219

    param                          shift and go to state 261

state 248

    (34) params1 -> empty .

    RPAREN          reduce using rule 34 (params1 -> empty .)


state 249

    (47) write_params1 -> COMMA write_operator expression . produce_write_quad write_params1
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression
    (52) produce_write_quad -> .

    ADD             shift and go to state 149
    SUB             shift and go to state 150
    COMMA           reduce using rule 52 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 52 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 262

state 250

    (48) write_params1 -> COMMA write_operator const_text . produce_write_quad write_params1
    (52) produce_write_quad -> .

    COMMA           reduce using rule 52 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 52 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 263

state 251

    (113) factor -> LPAREN push_cap expression RPAREN pop_cap .

    MUL             reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    DIV             reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    ADD             reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    SUB             reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    COMMA           reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    SEMICOLON       reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    LTHAN           reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    GTHAN           reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    EQUAL           reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    DIFFERENT       reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    AND             reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    OR              reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    RPAREN          reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    RSQBRACKET      reduce using rule 113 (factor -> LPAREN push_cap expression RPAREN pop_cap .)


state 252

    (124) matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET . expression RSQBRACKET
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 264
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 253

    (60) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET . fill_pending_jump
    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET . else LBRACKET statements RBRACKET fill_pending_jump
    (64) fill_pending_jump -> .
    (65) else -> . ELSE

    WRITE           reduce using rule 64 (fill_pending_jump -> .)
    READ            reduce using rule 64 (fill_pending_jump -> .)
    IF              reduce using rule 64 (fill_pending_jump -> .)
    ID              reduce using rule 64 (fill_pending_jump -> .)
    MEAN            reduce using rule 64 (fill_pending_jump -> .)
    MEDIAN          reduce using rule 64 (fill_pending_jump -> .)
    MODE            reduce using rule 64 (fill_pending_jump -> .)
    STD             reduce using rule 64 (fill_pending_jump -> .)
    KURTOSIS        reduce using rule 64 (fill_pending_jump -> .)
    PLOT            reduce using rule 64 (fill_pending_jump -> .)
    DPLOT           reduce using rule 64 (fill_pending_jump -> .)
    VARIANCE        reduce using rule 64 (fill_pending_jump -> .)
    SIMMETRY        reduce using rule 64 (fill_pending_jump -> .)
    CORRELATION     reduce using rule 64 (fill_pending_jump -> .)
    DFREAD          reduce using rule 64 (fill_pending_jump -> .)
    HOMERO          reduce using rule 64 (fill_pending_jump -> .)
    MARGE           reduce using rule 64 (fill_pending_jump -> .)
    REPEAT          reduce using rule 64 (fill_pending_jump -> .)
    PROCEDURES      reduce using rule 64 (fill_pending_jump -> .)
    BEGIN           reduce using rule 64 (fill_pending_jump -> .)
    RSQBRACKET      reduce using rule 64 (fill_pending_jump -> .)
    RBRACKET        reduce using rule 64 (fill_pending_jump -> .)
    RETURN          reduce using rule 64 (fill_pending_jump -> .)
    ELSE            shift and go to state 267

    fill_pending_jump              shift and go to state 265
    else                           shift and go to state 266

state 254

    (66) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET . fill_returning_jump
    (68) fill_returning_jump -> .

    WRITE           reduce using rule 68 (fill_returning_jump -> .)
    READ            reduce using rule 68 (fill_returning_jump -> .)
    IF              reduce using rule 68 (fill_returning_jump -> .)
    ID              reduce using rule 68 (fill_returning_jump -> .)
    MEAN            reduce using rule 68 (fill_returning_jump -> .)
    MEDIAN          reduce using rule 68 (fill_returning_jump -> .)
    MODE            reduce using rule 68 (fill_returning_jump -> .)
    STD             reduce using rule 68 (fill_returning_jump -> .)
    KURTOSIS        reduce using rule 68 (fill_returning_jump -> .)
    PLOT            reduce using rule 68 (fill_returning_jump -> .)
    DPLOT           reduce using rule 68 (fill_returning_jump -> .)
    VARIANCE        reduce using rule 68 (fill_returning_jump -> .)
    SIMMETRY        reduce using rule 68 (fill_returning_jump -> .)
    CORRELATION     reduce using rule 68 (fill_returning_jump -> .)
    DFREAD          reduce using rule 68 (fill_returning_jump -> .)
    HOMERO          reduce using rule 68 (fill_returning_jump -> .)
    MARGE           reduce using rule 68 (fill_returning_jump -> .)
    REPEAT          reduce using rule 68 (fill_returning_jump -> .)
    PROCEDURES      reduce using rule 68 (fill_returning_jump -> .)
    BEGIN           reduce using rule 68 (fill_returning_jump -> .)
    RSQBRACKET      reduce using rule 68 (fill_returning_jump -> .)
    RBRACKET        reduce using rule 68 (fill_returning_jump -> .)
    RETURN          reduce using rule 68 (fill_returning_jump -> .)

    fill_returning_jump            shift and go to state 268

state 255

    (59) matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET . ASSIGN expression

    ASSIGN          shift and go to state 269


state 256

    (75) call_params1 -> COMMA hyper_expression handle_call_param . call_params1
    (75) call_params1 -> . COMMA hyper_expression handle_call_param call_params1
    (76) call_params1 -> . empty
    (127) empty -> .

    COMMA           shift and go to state 213
    RPAREN          reduce using rule 127 (empty -> .)

    call_params1                   shift and go to state 270
    empty                          shift and go to state 214

state 257

    (16) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET . COLON type SEMICOLON

    COLON           shift and go to state 271


state 258

    (15) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .

    VAR             reduce using rule 15 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    INSTRUCTIONS    reduce using rule 15 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    PROCEDURES      reduce using rule 15 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    BEGIN           reduce using rule 15 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RSQBRACKET      reduce using rule 15 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RBRACKET        reduce using rule 15 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RETURN          reduce using rule 15 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)


state 259

    (35) param -> ID COLON type .

    COMMA           reduce using rule 35 (param -> ID COLON type .)
    RPAREN          reduce using rule 35 (param -> ID COLON type .)


state 260

    (21) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON . VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON . func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (30) func_type -> . type
    (125) type -> . INT
    (126) type -> . FLOAT

    VOID            shift and go to state 272
    INT             shift and go to state 143
    FLOAT           shift and go to state 144

    func_type                      shift and go to state 273
    type                           shift and go to state 274

state 261

    (33) params1 -> COMMA param . params1
    (33) params1 -> . COMMA param params1
    (34) params1 -> . empty
    (127) empty -> .

    COMMA           shift and go to state 247
    RPAREN          reduce using rule 127 (empty -> .)

    params1                        shift and go to state 275
    empty                          shift and go to state 248

state 262

    (47) write_params1 -> COMMA write_operator expression produce_write_quad . write_params1
    (47) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (48) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (49) write_params1 -> . empty
    (127) empty -> .

    COMMA           shift and go to state 191
    SEMICOLON       reduce using rule 127 (empty -> .)

    write_params1                  shift and go to state 276
    empty                          shift and go to state 192

state 263

    (48) write_params1 -> COMMA write_operator const_text produce_write_quad . write_params1
    (47) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (48) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (49) write_params1 -> . empty
    (127) empty -> .

    COMMA           shift and go to state 191
    SEMICOLON       reduce using rule 127 (empty -> .)

    write_params1                  shift and go to state 277
    empty                          shift and go to state 192

state 264

    (124) matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression . RSQBRACKET
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

    RSQBRACKET      shift and go to state 278
    ADD             shift and go to state 149
    SUB             shift and go to state 150


state 265

    (60) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .

    WRITE           reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    READ            reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    IF              reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    ID              reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MEAN            reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MEDIAN          reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MODE            reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    STD             reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    KURTOSIS        reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    PLOT            reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    DPLOT           reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    VARIANCE        reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    SIMMETRY        reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    CORRELATION     reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    DFREAD          reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    HOMERO          reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MARGE           reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    REPEAT          reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    PROCEDURES      reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    BEGIN           reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    RSQBRACKET      reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    RBRACKET        reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    RETURN          reduce using rule 60 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)


state 266

    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else . LBRACKET statements RBRACKET fill_pending_jump

    LBRACKET        shift and go to state 279


state 267

    (65) else -> ELSE .

    LBRACKET        reduce using rule 65 (else -> ELSE .)


state 268

    (66) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .

    WRITE           reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    READ            reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    IF              reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    ID              reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MEAN            reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MEDIAN          reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MODE            reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    STD             reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    KURTOSIS        reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    PLOT            reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    DPLOT           reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    VARIANCE        reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    SIMMETRY        reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    CORRELATION     reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    DFREAD          reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    HOMERO          reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MARGE           reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    REPEAT          reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    PROCEDURES      reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    BEGIN           reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    RSQBRACKET      reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    RBRACKET        reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    RETURN          reduce using rule 66 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)


state 269

    (59) matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN . expression
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 280
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 270

    (75) call_params1 -> COMMA hyper_expression handle_call_param call_params1 .

    RPAREN          reduce using rule 75 (call_params1 -> COMMA hyper_expression handle_call_param call_params1 .)


state 271

    (16) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON . type SEMICOLON
    (125) type -> . INT
    (126) type -> . FLOAT

    INT             shift and go to state 143
    FLOAT           shift and go to state 144

    type                           shift and go to state 281

state 272

    (21) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID . set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (27) set_return_type -> .

    LBRACKET        reduce using rule 27 (set_return_type -> .)

    set_return_type                shift and go to state 282

state 273

    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type . set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (27) set_return_type -> .

    LBRACKET        reduce using rule 27 (set_return_type -> .)

    set_return_type                shift and go to state 283

state 274

    (30) func_type -> type .

    LBRACKET        reduce using rule 30 (func_type -> type .)


state 275

    (33) params1 -> COMMA param params1 .

    RPAREN          reduce using rule 33 (params1 -> COMMA param params1 .)


state 276

    (47) write_params1 -> COMMA write_operator expression produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 47 (write_params1 -> COMMA write_operator expression produce_write_quad write_params1 .)


state 277

    (48) write_params1 -> COMMA write_operator const_text produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 48 (write_params1 -> COMMA write_operator const_text produce_write_quad write_params1 .)


state 278

    (124) matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .

    MUL             reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    DIV             reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    ADD             reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    SUB             reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    COMMA           reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    SEMICOLON       reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    LTHAN           reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    GTHAN           reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    EQUAL           reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    DIFFERENT       reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    AND             reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    OR              reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    RPAREN          reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    RSQBRACKET      reduce using rule 124 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)


state 279

    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET . statements RBRACKET fill_pending_jump
    (36) statements -> . write SEMICOLON statements
    (37) statements -> . read SEMICOLON statements
    (38) statements -> . var_assignment SEMICOLON statements
    (39) statements -> . condition statements
    (40) statements -> . loop statements
    (41) statements -> . function_call SEMICOLON statements
    (42) statements -> . special_function_call SEMICOLON statements
    (43) statements -> . empty
    (44) write -> . WRITE write_params0
    (53) read -> . READ push_operator identifier
    (54) var_assignment -> . simple_assignment
    (55) var_assignment -> . array_assignment
    (56) var_assignment -> . matrix_assignment
    (60) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (61) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (66) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE
    (127) empty -> .
    (57) simple_assignment -> . identifier ASSIGN push_operator expression
    (58) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (59) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (67) repeat -> . REPEAT
    (118) identifier -> . ID

    WRITE           shift and go to state 31
    READ            shift and go to state 32
    IF              shift and go to state 37
    ID              shift and go to state 39
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52
    RBRACKET        reduce using rule 127 (empty -> .)
    REPEAT          shift and go to state 53

    statements                     shift and go to state 284
    write                          shift and go to state 23
    read                           shift and go to state 24
    var_assignment                 shift and go to state 25
    condition                      shift and go to state 26
    loop                           shift and go to state 27
    function_call                  shift and go to state 28
    special_function_call          shift and go to state 29
    empty                          shift and go to state 30
    identifier                     shift and go to state 33
    simple_assignment              shift and go to state 34
    array_assignment               shift and go to state 35
    matrix_assignment              shift and go to state 36
    repeat                         shift and go to state 38

state 280

    (59) matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression .
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression

    SEMICOLON       reduce using rule 59 (matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression .)
    ADD             shift and go to state 149
    SUB             shift and go to state 150


state 281

    (16) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type . SEMICOLON

    SEMICOLON       shift and go to state 285


state 282

    (21) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type . LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations

    LBRACKET        shift and go to state 286


state 283

    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type . LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    LBRACKET        shift and go to state 287


state 284

    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements . RBRACKET fill_pending_jump

    RBRACKET        shift and go to state 288


state 285

    (16) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .

    VAR             reduce using rule 16 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    INSTRUCTIONS    reduce using rule 16 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    PROCEDURES      reduce using rule 16 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    BEGIN           reduce using rule 16 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RSQBRACKET      reduce using rule 16 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RBRACKET        reduce using rule 16 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RETURN          reduce using rule 16 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)


state 286

    (21) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET . local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (4) local_vars_block -> . LOCALS COLON var_declarations
    (5) local_vars_block -> . empty
    (127) empty -> .

    LOCALS          shift and go to state 187
    INSTRUCTIONS    reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)

    local_vars_block               shift and go to state 289
    empty                          shift and go to state 188

state 287

    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET . local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (4) local_vars_block -> . LOCALS COLON var_declarations
    (5) local_vars_block -> . empty
    (127) empty -> .

    LOCALS          shift and go to state 187
    INSTRUCTIONS    reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)

    local_vars_block               shift and go to state 290
    empty                          shift and go to state 188

state 288

    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET . fill_pending_jump
    (64) fill_pending_jump -> .

    WRITE           reduce using rule 64 (fill_pending_jump -> .)
    READ            reduce using rule 64 (fill_pending_jump -> .)
    IF              reduce using rule 64 (fill_pending_jump -> .)
    ID              reduce using rule 64 (fill_pending_jump -> .)
    MEAN            reduce using rule 64 (fill_pending_jump -> .)
    MEDIAN          reduce using rule 64 (fill_pending_jump -> .)
    MODE            reduce using rule 64 (fill_pending_jump -> .)
    STD             reduce using rule 64 (fill_pending_jump -> .)
    KURTOSIS        reduce using rule 64 (fill_pending_jump -> .)
    PLOT            reduce using rule 64 (fill_pending_jump -> .)
    DPLOT           reduce using rule 64 (fill_pending_jump -> .)
    VARIANCE        reduce using rule 64 (fill_pending_jump -> .)
    SIMMETRY        reduce using rule 64 (fill_pending_jump -> .)
    CORRELATION     reduce using rule 64 (fill_pending_jump -> .)
    DFREAD          reduce using rule 64 (fill_pending_jump -> .)
    HOMERO          reduce using rule 64 (fill_pending_jump -> .)
    MARGE           reduce using rule 64 (fill_pending_jump -> .)
    REPEAT          reduce using rule 64 (fill_pending_jump -> .)
    PROCEDURES      reduce using rule 64 (fill_pending_jump -> .)
    BEGIN           reduce using rule 64 (fill_pending_jump -> .)
    RSQBRACKET      reduce using rule 64 (fill_pending_jump -> .)
    RBRACKET        reduce using rule 64 (fill_pending_jump -> .)
    RETURN          reduce using rule 64 (fill_pending_jump -> .)

    fill_pending_jump              shift and go to state 291

state 289

    (21) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block . store_curr_ip instructions_block function_rbracket function_declarations
    (26) store_curr_ip -> .

    INSTRUCTIONS    reduce using rule 26 (store_curr_ip -> .)
    RBRACKET        reduce using rule 26 (store_curr_ip -> .)

    store_curr_ip                  shift and go to state 292

state 290

    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block . store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (26) store_curr_ip -> .

    INSTRUCTIONS    reduce using rule 26 (store_curr_ip -> .)
    RETURN          reduce using rule 26 (store_curr_ip -> .)

    store_curr_ip                  shift and go to state 293

state 291

    (61) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .

    WRITE           reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    READ            reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    IF              reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    ID              reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MEAN            reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MEDIAN          reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MODE            reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    STD             reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    KURTOSIS        reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    PLOT            reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    DPLOT           reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    VARIANCE        reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    SIMMETRY        reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    CORRELATION     reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    DFREAD          reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    HOMERO          reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MARGE           reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    REPEAT          reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    PROCEDURES      reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    BEGIN           reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    RSQBRACKET      reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    RBRACKET        reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    RETURN          reduce using rule 61 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)


state 292

    (21) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip . instructions_block function_rbracket function_declarations
    (6) instructions_block -> . INSTRUCTIONS COLON statements
    (7) instructions_block -> . empty
    (127) empty -> .

    INSTRUCTIONS    shift and go to state 10
    RBRACKET        reduce using rule 127 (empty -> .)

    instructions_block             shift and go to state 294
    empty                          shift and go to state 11

state 293

    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip . instructions_block return expression return_semicolon function_rbracket function_declarations
    (6) instructions_block -> . INSTRUCTIONS COLON statements
    (7) instructions_block -> . empty
    (127) empty -> .

    INSTRUCTIONS    shift and go to state 10
    RETURN          reduce using rule 127 (empty -> .)

    instructions_block             shift and go to state 295
    empty                          shift and go to state 11

state 294

    (21) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block . function_rbracket function_declarations
    (24) function_rbracket -> . RBRACKET

    RBRACKET        shift and go to state 297

    function_rbracket              shift and go to state 296

state 295

    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block . return expression return_semicolon function_rbracket function_declarations
    (28) return -> . RETURN

    RETURN          shift and go to state 299

    return                         shift and go to state 298

state 296

    (21) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket . function_declarations
    (21) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (22) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (23) function_declarations -> . empty
    (127) empty -> .

    PROC            shift and go to state 60
    BEGIN           reduce using rule 127 (empty -> .)

    function_declarations          shift and go to state 300
    empty                          shift and go to state 61

state 297

    (24) function_rbracket -> RBRACKET .

    PROC            reduce using rule 24 (function_rbracket -> RBRACKET .)
    BEGIN           reduce using rule 24 (function_rbracket -> RBRACKET .)


state 298

    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return . expression return_semicolon function_rbracket function_declarations
    (99) expression -> . expression ADD push_operator expression
    (100) expression -> . expression SUB push_operator expression
    (101) expression -> . term produce_exp_quad
    (102) term -> . term MUL push_operator term
    (103) term -> . term DIV push_operator term
    (104) term -> . factor produce_term_quad
    (110) factor -> . identifier
    (111) factor -> . const_int
    (112) factor -> . const_float
    (113) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (114) factor -> . array_access
    (115) factor -> . matrix_access
    (116) factor -> . function_call
    (117) factor -> . special_function_call
    (118) identifier -> . ID
    (119) const_int -> . CONST_INT
    (120) const_float -> . CONST_FLOAT
    (123) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (124) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (69) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (78) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (79) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (80) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (81) special_function_call -> . STD LPAREN call_params0 RPAREN
    (82) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (83) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (84) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (85) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (86) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (87) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (88) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (89) special_function_call -> . HOMERO
    (90) special_function_call -> . MARGE

    LPAREN          shift and go to state 109
    ID              shift and go to state 114
    CONST_INT       shift and go to state 115
    CONST_FLOAT     shift and go to state 116
    MEAN            shift and go to state 40
    MEDIAN          shift and go to state 41
    MODE            shift and go to state 42
    STD             shift and go to state 43
    KURTOSIS        shift and go to state 44
    PLOT            shift and go to state 45
    DPLOT           shift and go to state 46
    VARIANCE        shift and go to state 47
    SIMMETRY        shift and go to state 48
    CORRELATION     shift and go to state 49
    DFREAD          shift and go to state 50
    HOMERO          shift and go to state 51
    MARGE           shift and go to state 52

    expression                     shift and go to state 301
    term                           shift and go to state 103
    factor                         shift and go to state 105
    identifier                     shift and go to state 106
    const_int                      shift and go to state 107
    const_float                    shift and go to state 108
    array_access                   shift and go to state 110
    matrix_access                  shift and go to state 111
    function_call                  shift and go to state 112
    special_function_call          shift and go to state 113

state 299

    (28) return -> RETURN .

    LPAREN          reduce using rule 28 (return -> RETURN .)
    ID              reduce using rule 28 (return -> RETURN .)
    CONST_INT       reduce using rule 28 (return -> RETURN .)
    CONST_FLOAT     reduce using rule 28 (return -> RETURN .)
    MEAN            reduce using rule 28 (return -> RETURN .)
    MEDIAN          reduce using rule 28 (return -> RETURN .)
    MODE            reduce using rule 28 (return -> RETURN .)
    STD             reduce using rule 28 (return -> RETURN .)
    KURTOSIS        reduce using rule 28 (return -> RETURN .)
    PLOT            reduce using rule 28 (return -> RETURN .)
    DPLOT           reduce using rule 28 (return -> RETURN .)
    VARIANCE        reduce using rule 28 (return -> RETURN .)
    SIMMETRY        reduce using rule 28 (return -> RETURN .)
    CORRELATION     reduce using rule 28 (return -> RETURN .)
    DFREAD          reduce using rule 28 (return -> RETURN .)
    HOMERO          reduce using rule 28 (return -> RETURN .)
    MARGE           reduce using rule 28 (return -> RETURN .)


state 300

    (21) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations .

    BEGIN           reduce using rule 21 (function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations .)


state 301

    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression . return_semicolon function_rbracket function_declarations
    (99) expression -> expression . ADD push_operator expression
    (100) expression -> expression . SUB push_operator expression
    (29) return_semicolon -> . SEMICOLON

    ADD             shift and go to state 149
    SUB             shift and go to state 150
    SEMICOLON       shift and go to state 303

    return_semicolon               shift and go to state 302

state 302

    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon . function_rbracket function_declarations
    (24) function_rbracket -> . RBRACKET

    RBRACKET        shift and go to state 297

    function_rbracket              shift and go to state 304

state 303

    (29) return_semicolon -> SEMICOLON .

    RBRACKET        reduce using rule 29 (return_semicolon -> SEMICOLON .)


state 304

    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket . function_declarations
    (21) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (22) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (23) function_declarations -> . empty
    (127) empty -> .

    PROC            shift and go to state 60
    BEGIN           reduce using rule 127 (empty -> .)

    function_declarations          shift and go to state 305
    empty                          shift and go to state 61

state 305

    (22) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations .

    BEGIN           reduce using rule 22 (function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LTHAN in state 206 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 206 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 206 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 206 resolved as shift
WARNING: shift/reduce conflict for ADD in state 224 resolved as shift
WARNING: shift/reduce conflict for SUB in state 224 resolved as shift
WARNING: shift/reduce conflict for ADD in state 225 resolved as shift
WARNING: shift/reduce conflict for SUB in state 225 resolved as shift
WARNING: shift/reduce conflict for MUL in state 226 resolved as shift
WARNING: shift/reduce conflict for DIV in state 226 resolved as shift
WARNING: shift/reduce conflict for MUL in state 227 resolved as shift
WARNING: shift/reduce conflict for DIV in state 227 resolved as shift
WARNING: shift/reduce conflict for AND in state 231 resolved as shift
WARNING: shift/reduce conflict for OR in state 231 resolved as shift
WARNING: shift/reduce conflict for AND in state 232 resolved as shift
WARNING: shift/reduce conflict for OR in state 232 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 233 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 233 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 233 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 233 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 234 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 234 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 234 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 234 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 235 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 235 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 235 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 235 resolved as shift
