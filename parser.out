Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT

Grammar

Rule 0     S' -> routine
Rule 1     routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
Rule 2     routine_init -> ROUTINE
Rule 3     fill_main_jump -> <empty>
Rule 4     global_vars_block -> GLOBALS COLON var_declarations
Rule 5     global_vars_block -> empty
Rule 6     local_vars_block -> LOCALS COLON var_declarations
Rule 7     local_vars_block -> empty
Rule 8     instructions_block -> INSTRUCTIONS COLON statements
Rule 9     instructions_block -> empty
Rule 10    global_scope_init -> <empty>
Rule 11    local_scope_init -> <empty>
Rule 12    var_declarations -> VAR simple_declaration var_declarations
Rule 13    var_declarations -> VAR array_declaration var_declarations
Rule 14    var_declarations -> VAR matrix_declaration var_declarations
Rule 15    var_declarations -> empty
Rule 16    simple_declaration -> ID COLON var_type SEMICOLON
Rule 17    array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
Rule 18    matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
Rule 19    var_type -> type
Rule 20    var_type -> DF
Rule 21    function_block -> PROCEDURES COLON function_declarations
Rule 22    function_block -> empty
Rule 23    function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
Rule 24    function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
Rule 25    function_declarations -> empty
Rule 26    function_rbracket -> RBRACKET
Rule 27    proc_scope_init -> <empty>
Rule 28    store_curr_ip -> <empty>
Rule 29    set_return_type -> <empty>
Rule 30    return -> RETURN
Rule 31    return_semicolon -> SEMICOLON
Rule 32    func_type -> type
Rule 33    params0 -> param params1
Rule 34    params0 -> empty
Rule 35    params1 -> COMMA param params1
Rule 36    params1 -> empty
Rule 37    param -> ID COLON type
Rule 38    statements -> write SEMICOLON statements
Rule 39    statements -> read SEMICOLON statements
Rule 40    statements -> var_assignment SEMICOLON statements
Rule 41    statements -> condition statements
Rule 42    statements -> loop statements
Rule 43    statements -> function_call SEMICOLON statements
Rule 44    statements -> special_function_call SEMICOLON statements
Rule 45    statements -> empty
Rule 46    write -> WRITE write_params0
Rule 47    write_params0 -> write_operator expression produce_write_quad write_params1
Rule 48    write_params0 -> write_operator const_text produce_write_quad write_params1
Rule 49    write_params1 -> COMMA write_operator expression produce_write_quad write_params1
Rule 50    write_params1 -> COMMA write_operator const_text produce_write_quad write_params1
Rule 51    write_params1 -> empty
Rule 52    const_text -> CONST_TEXT
Rule 53    write_operator -> <empty>
Rule 54    produce_write_quad -> <empty>
Rule 55    read -> READ push_operator identifier
Rule 56    var_assignment -> simple_assignment
Rule 57    var_assignment -> array_assignment
Rule 58    var_assignment -> matrix_assignment
Rule 59    simple_assignment -> identifier ASSIGN push_operator expression
Rule 60    array_assignment -> ID LSQBRACKET expression RSQBRACKET ASSIGN expression
Rule 61    matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
Rule 62    condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
Rule 63    condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
Rule 64    cond_lparen -> LPAREN
Rule 65    cond_rparen -> RPAREN
Rule 66    fill_pending_jump -> <empty>
Rule 67    else -> ELSE
Rule 68    loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
Rule 69    repeat -> REPEAT
Rule 70    fill_returning_jump -> <empty>
Rule 71    function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen
Rule 72    function_call_check -> <empty>
Rule 73    function_call_lparen -> LPAREN
Rule 74    function_call_rparen -> RPAREN
Rule 75    call_params0 -> hyper_expression handle_call_param call_params1
Rule 76    call_params0 -> empty
Rule 77    call_params1 -> COMMA hyper_expression handle_call_param call_params1
Rule 78    call_params1 -> empty
Rule 79    handle_call_param -> <empty>
Rule 80    special_function_call -> MEAN LPAREN call_params0 RPAREN
Rule 81    special_function_call -> MEDIAN LPAREN call_params0 RPAREN
Rule 82    special_function_call -> MODE LPAREN call_params0 RPAREN
Rule 83    special_function_call -> STD LPAREN call_params0 RPAREN
Rule 84    special_function_call -> KURTOSIS LPAREN call_params0 RPAREN
Rule 85    special_function_call -> PLOT LPAREN call_params0 RPAREN
Rule 86    special_function_call -> DPLOT LPAREN call_params0 RPAREN
Rule 87    special_function_call -> VARIANCE LPAREN call_params0 RPAREN
Rule 88    special_function_call -> SIMMETRY LPAREN call_params0 RPAREN
Rule 89    special_function_call -> CORRELATION LPAREN call_params0 RPAREN
Rule 90    special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN
Rule 91    special_function_call -> HOMERO
Rule 92    special_function_call -> MARGE
Rule 93    hyper_expression -> hyper_expression AND push_operator hyper_expression
Rule 94    hyper_expression -> hyper_expression OR push_operator hyper_expression
Rule 95    hyper_expression -> super_expression produce_hyperexp_quad
Rule 96    super_expression -> super_expression LTHAN push_operator super_expression
Rule 97    super_expression -> super_expression GTHAN push_operator super_expression
Rule 98    super_expression -> super_expression EQUAL push_operator super_expression
Rule 99    super_expression -> super_expression DIFFERENT super_expression
Rule 100   super_expression -> expression produce_superexp_quad
Rule 101   expression -> expression ADD push_operator expression
Rule 102   expression -> expression SUB push_operator expression
Rule 103   expression -> term produce_exp_quad
Rule 104   term -> term MUL push_operator term
Rule 105   term -> term DIV push_operator term
Rule 106   term -> factor produce_term_quad
Rule 107   push_operator -> <empty>
Rule 108   produce_hyperexp_quad -> <empty>
Rule 109   produce_superexp_quad -> <empty>
Rule 110   produce_exp_quad -> <empty>
Rule 111   produce_term_quad -> <empty>
Rule 112   factor -> identifier
Rule 113   factor -> const_int
Rule 114   factor -> const_float
Rule 115   factor -> LPAREN push_cap expression RPAREN pop_cap
Rule 116   factor -> array_access
Rule 117   factor -> matrix_access
Rule 118   factor -> function_call
Rule 119   factor -> special_function_call
Rule 120   identifier -> ID
Rule 121   const_int -> CONST_INT
Rule 122   const_float -> CONST_FLOAT
Rule 123   push_cap -> <empty>
Rule 124   pop_cap -> <empty>
Rule 125   array_access -> ID LSQBRACKET expression RSQBRACKET
Rule 126   matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
Rule 127   type -> INT
Rule 128   type -> FLOAT
Rule 129   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 101
AND                  : 93
ASSIGN               : 59 60 61
BEGIN                : 1
COLON                : 1 4 6 8 16 17 18 21 23 24 37
COMMA                : 35 49 50 77
CONST_FLOAT          : 122
CONST_INT            : 17 18 18 121
CONST_TEXT           : 52 90
CORRELATION          : 89
DF                   : 20
DFREAD               : 90
DIFFERENT            : 99
DIV                  : 105
DPLOT                : 86
ELSE                 : 67
EQUAL                : 98
FLOAT                : 128
GLOBALS              : 4
GTHAN                : 97
HOMERO               : 91
ID                   : 1 16 17 18 23 24 37 60 61 71 120 125 126
IF                   : 62 63
INSTRUCTIONS         : 8
INT                  : 127
KURTOSIS             : 84
LBRACKET             : 23 24 62 63 63 68
LOCALS               : 6
LPAREN               : 23 24 64 73 80 81 82 83 84 85 86 87 88 89 90 115
LSQBRACKET           : 1 17 18 18 60 61 61 125 126 126
LTHAN                : 96
MARGE                : 92
MEAN                 : 80
MEDIAN               : 81
MODE                 : 82
MUL                  : 104
NOT                  : 
OR                   : 94
PLOT                 : 85
PROC                 : 23 24
PROCEDURES           : 21
RBRACKET             : 26 62 63 63 68
READ                 : 55
REPEAT               : 69
RETURN               : 30
ROUTINE              : 2
RPAREN               : 23 24 65 74 80 81 82 83 84 85 86 87 88 89 90 115
RSQBRACKET           : 1 17 18 18 60 61 61 125 126 126
SEMICOLON            : 1 16 17 18 31 38 39 40 43 44
SIMMETRY             : 88
STD                  : 83
SUB                  : 102
VAR                  : 12 13 14
VARIANCE             : 87
VOID                 : 23
WRITE                : 46
error                : 

Nonterminals, with rules where they appear

array_access         : 116
array_assignment     : 57
array_declaration    : 13
call_params0         : 71 80 81 82 83 84 85 86 87 88 89
call_params1         : 75 77
cond_lparen          : 62 63 68
cond_rparen          : 62 63 68
condition            : 41
const_float          : 114
const_int            : 113
const_text           : 48 50
else                 : 63
empty                : 5 7 9 15 22 25 34 36 45 51 76 78
expression           : 24 47 49 59 60 60 61 61 61 100 101 101 102 102 115 125 126 126
factor               : 106
fill_main_jump       : 1
fill_pending_jump    : 62 63
fill_returning_jump  : 68
func_type            : 24
function_block       : 1
function_call        : 43 118
function_call_check  : 71
function_call_lparen : 71
function_call_rparen : 71
function_declarations : 21 23 24
function_rbracket    : 23 24
global_scope_init    : 1
global_vars_block    : 1
handle_call_param    : 75 77
hyper_expression     : 62 63 68 75 77 93 93 94 94
identifier           : 55 59 112
instructions_block   : 1 1 23 24
local_scope_init     : 1
local_vars_block     : 1 23 24
loop                 : 42
matrix_access        : 117
matrix_assignment    : 58
matrix_declaration   : 14
param                : 33 35
params0              : 23 24
params1              : 33 35
pop_cap              : 115
proc_scope_init      : 23 24
produce_exp_quad     : 103
produce_hyperexp_quad : 95
produce_superexp_quad : 100
produce_term_quad    : 106
produce_write_quad   : 47 48 49 50
push_cap             : 115
push_operator        : 55 59 93 94 96 97 98 101 102 104 105
read                 : 39
repeat               : 68
return               : 24
return_semicolon     : 24
routine              : 0
routine_init         : 1
set_return_type      : 23 24
simple_assignment    : 56
simple_declaration   : 12
special_function_call : 44 119
statements           : 8 38 39 40 41 42 43 44 62 63 63 68
store_curr_ip        : 23 24
super_expression     : 95 96 96 97 97 98 98 99 99
term                 : 103 104 104 105 105
type                 : 17 18 19 32 37
var_assignment       : 40
var_declarations     : 4 6 12 13 14
var_type             : 16
write                : 38
write_operator       : 47 48 49 50
write_params0        : 46
write_params1        : 47 48 49 50

Parsing method: LALR

state 0

    (0) S' -> . routine
    (1) routine -> . routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (2) routine_init -> . ROUTINE

    ROUTINE         shift and go to state 3

    routine                        shift and go to state 1
    routine_init                   shift and go to state 2

state 1

    (0) S' -> routine .



state 2

    (1) routine -> routine_init . ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    ID              shift and go to state 4


state 3

    (2) routine_init -> ROUTINE .

    ID              reduce using rule 2 (routine_init -> ROUTINE .)


state 4

    (1) routine -> routine_init ID . SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    SEMICOLON       shift and go to state 5


state 5

    (1) routine -> routine_init ID SEMICOLON . global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (10) global_scope_init -> .

    GLOBALS         reduce using rule 10 (global_scope_init -> .)
    INSTRUCTIONS    reduce using rule 10 (global_scope_init -> .)
    PROCEDURES      reduce using rule 10 (global_scope_init -> .)
    BEGIN           reduce using rule 10 (global_scope_init -> .)

    global_scope_init              shift and go to state 6

state 6

    (1) routine -> routine_init ID SEMICOLON global_scope_init . global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (4) global_vars_block -> . GLOBALS COLON var_declarations
    (5) global_vars_block -> . empty
    (129) empty -> .

    GLOBALS         shift and go to state 8
    INSTRUCTIONS    reduce using rule 129 (empty -> .)
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)

    global_vars_block              shift and go to state 7
    empty                          shift and go to state 9

state 7

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block . instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (8) instructions_block -> . INSTRUCTIONS COLON statements
    (9) instructions_block -> . empty
    (129) empty -> .

    INSTRUCTIONS    shift and go to state 11
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)

    instructions_block             shift and go to state 10
    empty                          shift and go to state 12

state 8

    (4) global_vars_block -> GLOBALS . COLON var_declarations

    COLON           shift and go to state 13


state 9

    (5) global_vars_block -> empty .

    INSTRUCTIONS    reduce using rule 5 (global_vars_block -> empty .)
    PROCEDURES      reduce using rule 5 (global_vars_block -> empty .)
    BEGIN           reduce using rule 5 (global_vars_block -> empty .)


state 10

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block . function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (21) function_block -> . PROCEDURES COLON function_declarations
    (22) function_block -> . empty
    (129) empty -> .

    PROCEDURES      shift and go to state 15
    BEGIN           reduce using rule 129 (empty -> .)

    function_block                 shift and go to state 14
    empty                          shift and go to state 16

state 11

    (8) instructions_block -> INSTRUCTIONS . COLON statements

    COLON           shift and go to state 17


state 12

    (9) instructions_block -> empty .

    PROCEDURES      reduce using rule 9 (instructions_block -> empty .)
    BEGIN           reduce using rule 9 (instructions_block -> empty .)
    RSQBRACKET      reduce using rule 9 (instructions_block -> empty .)
    RBRACKET        reduce using rule 9 (instructions_block -> empty .)
    RETURN          reduce using rule 9 (instructions_block -> empty .)


state 13

    (4) global_vars_block -> GLOBALS COLON . var_declarations
    (12) var_declarations -> . VAR simple_declaration var_declarations
    (13) var_declarations -> . VAR array_declaration var_declarations
    (14) var_declarations -> . VAR matrix_declaration var_declarations
    (15) var_declarations -> . empty
    (129) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 129 (empty -> .)
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)

    var_declarations               shift and go to state 18
    empty                          shift and go to state 20

state 14

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block . BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    BEGIN           shift and go to state 21


state 15

    (21) function_block -> PROCEDURES . COLON function_declarations

    COLON           shift and go to state 22


state 16

    (22) function_block -> empty .

    BEGIN           reduce using rule 22 (function_block -> empty .)


state 17

    (8) instructions_block -> INSTRUCTIONS COLON . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (58) var_assignment -> . matrix_assignment
    (62) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (68) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE
    (129) empty -> .
    (59) simple_assignment -> . identifier ASSIGN push_operator expression
    (60) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (69) repeat -> . REPEAT
    (120) identifier -> . ID

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    REPEAT          shift and go to state 54

    statements                     shift and go to state 23
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39

state 18

    (4) global_vars_block -> GLOBALS COLON var_declarations .

    INSTRUCTIONS    reduce using rule 4 (global_vars_block -> GLOBALS COLON var_declarations .)
    PROCEDURES      reduce using rule 4 (global_vars_block -> GLOBALS COLON var_declarations .)
    BEGIN           reduce using rule 4 (global_vars_block -> GLOBALS COLON var_declarations .)


state 19

    (12) var_declarations -> VAR . simple_declaration var_declarations
    (13) var_declarations -> VAR . array_declaration var_declarations
    (14) var_declarations -> VAR . matrix_declaration var_declarations
    (16) simple_declaration -> . ID COLON var_type SEMICOLON
    (17) array_declaration -> . ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
    (18) matrix_declaration -> . ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    ID              shift and go to state 58

    simple_declaration             shift and go to state 55
    array_declaration              shift and go to state 56
    matrix_declaration             shift and go to state 57

state 20

    (15) var_declarations -> empty .

    INSTRUCTIONS    reduce using rule 15 (var_declarations -> empty .)
    PROCEDURES      reduce using rule 15 (var_declarations -> empty .)
    BEGIN           reduce using rule 15 (var_declarations -> empty .)
    RSQBRACKET      reduce using rule 15 (var_declarations -> empty .)
    RBRACKET        reduce using rule 15 (var_declarations -> empty .)
    RETURN          reduce using rule 15 (var_declarations -> empty .)


state 21

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN . COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    COLON           shift and go to state 59


state 22

    (21) function_block -> PROCEDURES COLON . function_declarations
    (23) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (25) function_declarations -> . empty
    (129) empty -> .

    PROC            shift and go to state 61
    BEGIN           reduce using rule 129 (empty -> .)

    function_declarations          shift and go to state 60
    empty                          shift and go to state 62

state 23

    (8) instructions_block -> INSTRUCTIONS COLON statements .

    PROCEDURES      reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)
    BEGIN           reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)
    RSQBRACKET      reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)
    RBRACKET        reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)
    RETURN          reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)


state 24

    (38) statements -> write . SEMICOLON statements

    SEMICOLON       shift and go to state 63


state 25

    (39) statements -> read . SEMICOLON statements

    SEMICOLON       shift and go to state 64


state 26

    (40) statements -> var_assignment . SEMICOLON statements

    SEMICOLON       shift and go to state 65


state 27

    (41) statements -> condition . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (58) var_assignment -> . matrix_assignment
    (62) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (68) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE
    (129) empty -> .
    (59) simple_assignment -> . identifier ASSIGN push_operator expression
    (60) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (69) repeat -> . REPEAT
    (120) identifier -> . ID

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    REPEAT          shift and go to state 54

    condition                      shift and go to state 27
    statements                     shift and go to state 66
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39

state 28

    (42) statements -> loop . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (58) var_assignment -> . matrix_assignment
    (62) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (68) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE
    (129) empty -> .
    (59) simple_assignment -> . identifier ASSIGN push_operator expression
    (60) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (69) repeat -> . REPEAT
    (120) identifier -> . ID

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    REPEAT          shift and go to state 54

    loop                           shift and go to state 28
    statements                     shift and go to state 67
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39

state 29

    (43) statements -> function_call . SEMICOLON statements

    SEMICOLON       shift and go to state 68


state 30

    (44) statements -> special_function_call . SEMICOLON statements

    SEMICOLON       shift and go to state 69


state 31

    (45) statements -> empty .

    PROCEDURES      reduce using rule 45 (statements -> empty .)
    BEGIN           reduce using rule 45 (statements -> empty .)
    RSQBRACKET      reduce using rule 45 (statements -> empty .)
    RBRACKET        reduce using rule 45 (statements -> empty .)
    RETURN          reduce using rule 45 (statements -> empty .)


state 32

    (46) write -> WRITE . write_params0
    (47) write_params0 -> . write_operator expression produce_write_quad write_params1
    (48) write_params0 -> . write_operator const_text produce_write_quad write_params1
    (53) write_operator -> .

    CONST_TEXT      reduce using rule 53 (write_operator -> .)
    LPAREN          reduce using rule 53 (write_operator -> .)
    ID              reduce using rule 53 (write_operator -> .)
    CONST_INT       reduce using rule 53 (write_operator -> .)
    CONST_FLOAT     reduce using rule 53 (write_operator -> .)
    MEAN            reduce using rule 53 (write_operator -> .)
    MEDIAN          reduce using rule 53 (write_operator -> .)
    MODE            reduce using rule 53 (write_operator -> .)
    STD             reduce using rule 53 (write_operator -> .)
    KURTOSIS        reduce using rule 53 (write_operator -> .)
    PLOT            reduce using rule 53 (write_operator -> .)
    DPLOT           reduce using rule 53 (write_operator -> .)
    VARIANCE        reduce using rule 53 (write_operator -> .)
    SIMMETRY        reduce using rule 53 (write_operator -> .)
    CORRELATION     reduce using rule 53 (write_operator -> .)
    DFREAD          reduce using rule 53 (write_operator -> .)
    HOMERO          reduce using rule 53 (write_operator -> .)
    MARGE           reduce using rule 53 (write_operator -> .)

    write_params0                  shift and go to state 70
    write_operator                 shift and go to state 71

state 33

    (55) read -> READ . push_operator identifier
    (107) push_operator -> .

    ID              reduce using rule 107 (push_operator -> .)

    push_operator                  shift and go to state 72

state 34

    (59) simple_assignment -> identifier . ASSIGN push_operator expression

    ASSIGN          shift and go to state 73


state 35

    (56) var_assignment -> simple_assignment .

    SEMICOLON       reduce using rule 56 (var_assignment -> simple_assignment .)


state 36

    (57) var_assignment -> array_assignment .

    SEMICOLON       reduce using rule 57 (var_assignment -> array_assignment .)


state 37

    (58) var_assignment -> matrix_assignment .

    SEMICOLON       reduce using rule 58 (var_assignment -> matrix_assignment .)


state 38

    (62) condition -> IF . cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> IF . cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (64) cond_lparen -> . LPAREN

    LPAREN          shift and go to state 75

    cond_lparen                    shift and go to state 74

state 39

    (68) loop -> repeat . cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (64) cond_lparen -> . LPAREN

    LPAREN          shift and go to state 75

    cond_lparen                    shift and go to state 76

state 40

    (71) function_call -> ID . function_call_check function_call_lparen call_params0 function_call_rparen
    (60) array_assignment -> ID . LSQBRACKET expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> ID . LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (120) identifier -> ID .
    (72) function_call_check -> .

    LSQBRACKET      shift and go to state 78
    ASSIGN          reduce using rule 120 (identifier -> ID .)
    LPAREN          reduce using rule 72 (function_call_check -> .)

    function_call_check            shift and go to state 77

state 41

    (80) special_function_call -> MEAN . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 79


state 42

    (81) special_function_call -> MEDIAN . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 80


state 43

    (82) special_function_call -> MODE . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 81


state 44

    (83) special_function_call -> STD . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 82


state 45

    (84) special_function_call -> KURTOSIS . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 83


state 46

    (85) special_function_call -> PLOT . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 84


state 47

    (86) special_function_call -> DPLOT . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 85


state 48

    (87) special_function_call -> VARIANCE . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 86


state 49

    (88) special_function_call -> SIMMETRY . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 87


state 50

    (89) special_function_call -> CORRELATION . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 88


state 51

    (90) special_function_call -> DFREAD . LPAREN CONST_TEXT RPAREN

    LPAREN          shift and go to state 89


state 52

    (91) special_function_call -> HOMERO .

    SEMICOLON       reduce using rule 91 (special_function_call -> HOMERO .)
    MUL             reduce using rule 91 (special_function_call -> HOMERO .)
    DIV             reduce using rule 91 (special_function_call -> HOMERO .)
    ADD             reduce using rule 91 (special_function_call -> HOMERO .)
    SUB             reduce using rule 91 (special_function_call -> HOMERO .)
    COMMA           reduce using rule 91 (special_function_call -> HOMERO .)
    LTHAN           reduce using rule 91 (special_function_call -> HOMERO .)
    GTHAN           reduce using rule 91 (special_function_call -> HOMERO .)
    EQUAL           reduce using rule 91 (special_function_call -> HOMERO .)
    DIFFERENT       reduce using rule 91 (special_function_call -> HOMERO .)
    AND             reduce using rule 91 (special_function_call -> HOMERO .)
    OR              reduce using rule 91 (special_function_call -> HOMERO .)
    RPAREN          reduce using rule 91 (special_function_call -> HOMERO .)
    RSQBRACKET      reduce using rule 91 (special_function_call -> HOMERO .)


state 53

    (92) special_function_call -> MARGE .

    SEMICOLON       reduce using rule 92 (special_function_call -> MARGE .)
    MUL             reduce using rule 92 (special_function_call -> MARGE .)
    DIV             reduce using rule 92 (special_function_call -> MARGE .)
    ADD             reduce using rule 92 (special_function_call -> MARGE .)
    SUB             reduce using rule 92 (special_function_call -> MARGE .)
    COMMA           reduce using rule 92 (special_function_call -> MARGE .)
    LTHAN           reduce using rule 92 (special_function_call -> MARGE .)
    GTHAN           reduce using rule 92 (special_function_call -> MARGE .)
    EQUAL           reduce using rule 92 (special_function_call -> MARGE .)
    DIFFERENT       reduce using rule 92 (special_function_call -> MARGE .)
    AND             reduce using rule 92 (special_function_call -> MARGE .)
    OR              reduce using rule 92 (special_function_call -> MARGE .)
    RPAREN          reduce using rule 92 (special_function_call -> MARGE .)
    RSQBRACKET      reduce using rule 92 (special_function_call -> MARGE .)


state 54

    (69) repeat -> REPEAT .

    LPAREN          reduce using rule 69 (repeat -> REPEAT .)


state 55

    (12) var_declarations -> VAR simple_declaration . var_declarations
    (12) var_declarations -> . VAR simple_declaration var_declarations
    (13) var_declarations -> . VAR array_declaration var_declarations
    (14) var_declarations -> . VAR matrix_declaration var_declarations
    (15) var_declarations -> . empty
    (129) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 129 (empty -> .)
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)

    var_declarations               shift and go to state 90
    empty                          shift and go to state 20

state 56

    (13) var_declarations -> VAR array_declaration . var_declarations
    (12) var_declarations -> . VAR simple_declaration var_declarations
    (13) var_declarations -> . VAR array_declaration var_declarations
    (14) var_declarations -> . VAR matrix_declaration var_declarations
    (15) var_declarations -> . empty
    (129) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 129 (empty -> .)
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)

    var_declarations               shift and go to state 91
    empty                          shift and go to state 20

state 57

    (14) var_declarations -> VAR matrix_declaration . var_declarations
    (12) var_declarations -> . VAR simple_declaration var_declarations
    (13) var_declarations -> . VAR array_declaration var_declarations
    (14) var_declarations -> . VAR matrix_declaration var_declarations
    (15) var_declarations -> . empty
    (129) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 129 (empty -> .)
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)

    var_declarations               shift and go to state 92
    empty                          shift and go to state 20

state 58

    (16) simple_declaration -> ID . COLON var_type SEMICOLON
    (17) array_declaration -> ID . LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
    (18) matrix_declaration -> ID . LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    COLON           shift and go to state 93
    LSQBRACKET      shift and go to state 94


state 59

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON . LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    LSQBRACKET      shift and go to state 95


state 60

    (21) function_block -> PROCEDURES COLON function_declarations .

    BEGIN           reduce using rule 21 (function_block -> PROCEDURES COLON function_declarations .)


state 61

    (23) function_declarations -> PROC . ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC . ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    ID              shift and go to state 96


state 62

    (25) function_declarations -> empty .

    BEGIN           reduce using rule 25 (function_declarations -> empty .)


state 63

    (38) statements -> write SEMICOLON . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (58) var_assignment -> . matrix_assignment
    (62) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (68) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE
    (129) empty -> .
    (59) simple_assignment -> . identifier ASSIGN push_operator expression
    (60) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (69) repeat -> . REPEAT
    (120) identifier -> . ID

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    REPEAT          shift and go to state 54

    write                          shift and go to state 24
    statements                     shift and go to state 97
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39

state 64

    (39) statements -> read SEMICOLON . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (58) var_assignment -> . matrix_assignment
    (62) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (68) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE
    (129) empty -> .
    (59) simple_assignment -> . identifier ASSIGN push_operator expression
    (60) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (69) repeat -> . REPEAT
    (120) identifier -> . ID

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    REPEAT          shift and go to state 54

    read                           shift and go to state 25
    statements                     shift and go to state 98
    write                          shift and go to state 24
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39

state 65

    (40) statements -> var_assignment SEMICOLON . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (58) var_assignment -> . matrix_assignment
    (62) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (68) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE
    (129) empty -> .
    (59) simple_assignment -> . identifier ASSIGN push_operator expression
    (60) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (69) repeat -> . REPEAT
    (120) identifier -> . ID

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    REPEAT          shift and go to state 54

    var_assignment                 shift and go to state 26
    statements                     shift and go to state 99
    write                          shift and go to state 24
    read                           shift and go to state 25
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39

state 66

    (41) statements -> condition statements .

    PROCEDURES      reduce using rule 41 (statements -> condition statements .)
    BEGIN           reduce using rule 41 (statements -> condition statements .)
    RSQBRACKET      reduce using rule 41 (statements -> condition statements .)
    RBRACKET        reduce using rule 41 (statements -> condition statements .)
    RETURN          reduce using rule 41 (statements -> condition statements .)


state 67

    (42) statements -> loop statements .

    PROCEDURES      reduce using rule 42 (statements -> loop statements .)
    BEGIN           reduce using rule 42 (statements -> loop statements .)
    RSQBRACKET      reduce using rule 42 (statements -> loop statements .)
    RBRACKET        reduce using rule 42 (statements -> loop statements .)
    RETURN          reduce using rule 42 (statements -> loop statements .)


state 68

    (43) statements -> function_call SEMICOLON . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (58) var_assignment -> . matrix_assignment
    (62) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (68) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE
    (129) empty -> .
    (59) simple_assignment -> . identifier ASSIGN push_operator expression
    (60) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (69) repeat -> . REPEAT
    (120) identifier -> . ID

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    REPEAT          shift and go to state 54

    function_call                  shift and go to state 29
    statements                     shift and go to state 100
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39

state 69

    (44) statements -> special_function_call SEMICOLON . statements
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (58) var_assignment -> . matrix_assignment
    (62) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (68) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE
    (129) empty -> .
    (59) simple_assignment -> . identifier ASSIGN push_operator expression
    (60) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (69) repeat -> . REPEAT
    (120) identifier -> . ID

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 129 (empty -> .)
    BEGIN           reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    REPEAT          shift and go to state 54

    special_function_call          shift and go to state 30
    statements                     shift and go to state 101
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39

state 70

    (46) write -> WRITE write_params0 .

    SEMICOLON       reduce using rule 46 (write -> WRITE write_params0 .)


state 71

    (47) write_params0 -> write_operator . expression produce_write_quad write_params1
    (48) write_params0 -> write_operator . const_text produce_write_quad write_params1
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (52) const_text -> . CONST_TEXT
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    CONST_TEXT      shift and go to state 105
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 102
    const_text                     shift and go to state 103
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 72

    (55) read -> READ push_operator . identifier
    (120) identifier -> . ID

    ID              shift and go to state 119

    identifier                     shift and go to state 118

state 73

    (59) simple_assignment -> identifier ASSIGN . push_operator expression
    (107) push_operator -> .

    LPAREN          reduce using rule 107 (push_operator -> .)
    ID              reduce using rule 107 (push_operator -> .)
    CONST_INT       reduce using rule 107 (push_operator -> .)
    CONST_FLOAT     reduce using rule 107 (push_operator -> .)
    MEAN            reduce using rule 107 (push_operator -> .)
    MEDIAN          reduce using rule 107 (push_operator -> .)
    MODE            reduce using rule 107 (push_operator -> .)
    STD             reduce using rule 107 (push_operator -> .)
    KURTOSIS        reduce using rule 107 (push_operator -> .)
    PLOT            reduce using rule 107 (push_operator -> .)
    DPLOT           reduce using rule 107 (push_operator -> .)
    VARIANCE        reduce using rule 107 (push_operator -> .)
    SIMMETRY        reduce using rule 107 (push_operator -> .)
    CORRELATION     reduce using rule 107 (push_operator -> .)
    DFREAD          reduce using rule 107 (push_operator -> .)
    HOMERO          reduce using rule 107 (push_operator -> .)
    MARGE           reduce using rule 107 (push_operator -> .)

    push_operator                  shift and go to state 120

state 74

    (62) condition -> IF cond_lparen . hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> IF cond_lparen . hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    hyper_expression               shift and go to state 121
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 75

    (64) cond_lparen -> LPAREN .

    LPAREN          reduce using rule 64 (cond_lparen -> LPAREN .)
    ID              reduce using rule 64 (cond_lparen -> LPAREN .)
    CONST_INT       reduce using rule 64 (cond_lparen -> LPAREN .)
    CONST_FLOAT     reduce using rule 64 (cond_lparen -> LPAREN .)
    MEAN            reduce using rule 64 (cond_lparen -> LPAREN .)
    MEDIAN          reduce using rule 64 (cond_lparen -> LPAREN .)
    MODE            reduce using rule 64 (cond_lparen -> LPAREN .)
    STD             reduce using rule 64 (cond_lparen -> LPAREN .)
    KURTOSIS        reduce using rule 64 (cond_lparen -> LPAREN .)
    PLOT            reduce using rule 64 (cond_lparen -> LPAREN .)
    DPLOT           reduce using rule 64 (cond_lparen -> LPAREN .)
    VARIANCE        reduce using rule 64 (cond_lparen -> LPAREN .)
    SIMMETRY        reduce using rule 64 (cond_lparen -> LPAREN .)
    CORRELATION     reduce using rule 64 (cond_lparen -> LPAREN .)
    DFREAD          reduce using rule 64 (cond_lparen -> LPAREN .)
    HOMERO          reduce using rule 64 (cond_lparen -> LPAREN .)
    MARGE           reduce using rule 64 (cond_lparen -> LPAREN .)


state 76

    (68) loop -> repeat cond_lparen . hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    hyper_expression               shift and go to state 124
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 77

    (71) function_call -> ID function_call_check . function_call_lparen call_params0 function_call_rparen
    (73) function_call_lparen -> . LPAREN

    LPAREN          shift and go to state 126

    function_call_lparen           shift and go to state 125

state 78

    (60) array_assignment -> ID LSQBRACKET . expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> ID LSQBRACKET . expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 127
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 79

    (80) special_function_call -> MEAN LPAREN . call_params0 RPAREN
    (75) call_params0 -> . hyper_expression handle_call_param call_params1
    (76) call_params0 -> . empty
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (129) empty -> .
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    RPAREN          reduce using rule 129 (empty -> .)
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 128
    hyper_expression               shift and go to state 129
    empty                          shift and go to state 130
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 80

    (81) special_function_call -> MEDIAN LPAREN . call_params0 RPAREN
    (75) call_params0 -> . hyper_expression handle_call_param call_params1
    (76) call_params0 -> . empty
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (129) empty -> .
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    RPAREN          reduce using rule 129 (empty -> .)
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 131
    hyper_expression               shift and go to state 129
    empty                          shift and go to state 130
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 81

    (82) special_function_call -> MODE LPAREN . call_params0 RPAREN
    (75) call_params0 -> . hyper_expression handle_call_param call_params1
    (76) call_params0 -> . empty
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (129) empty -> .
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    RPAREN          reduce using rule 129 (empty -> .)
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 132
    hyper_expression               shift and go to state 129
    empty                          shift and go to state 130
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 82

    (83) special_function_call -> STD LPAREN . call_params0 RPAREN
    (75) call_params0 -> . hyper_expression handle_call_param call_params1
    (76) call_params0 -> . empty
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (129) empty -> .
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    RPAREN          reduce using rule 129 (empty -> .)
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 133
    hyper_expression               shift and go to state 129
    empty                          shift and go to state 130
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 83

    (84) special_function_call -> KURTOSIS LPAREN . call_params0 RPAREN
    (75) call_params0 -> . hyper_expression handle_call_param call_params1
    (76) call_params0 -> . empty
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (129) empty -> .
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    RPAREN          reduce using rule 129 (empty -> .)
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 134
    hyper_expression               shift and go to state 129
    empty                          shift and go to state 130
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 84

    (85) special_function_call -> PLOT LPAREN . call_params0 RPAREN
    (75) call_params0 -> . hyper_expression handle_call_param call_params1
    (76) call_params0 -> . empty
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (129) empty -> .
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    RPAREN          reduce using rule 129 (empty -> .)
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 135
    hyper_expression               shift and go to state 129
    empty                          shift and go to state 130
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 85

    (86) special_function_call -> DPLOT LPAREN . call_params0 RPAREN
    (75) call_params0 -> . hyper_expression handle_call_param call_params1
    (76) call_params0 -> . empty
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (129) empty -> .
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    RPAREN          reduce using rule 129 (empty -> .)
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 136
    hyper_expression               shift and go to state 129
    empty                          shift and go to state 130
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 86

    (87) special_function_call -> VARIANCE LPAREN . call_params0 RPAREN
    (75) call_params0 -> . hyper_expression handle_call_param call_params1
    (76) call_params0 -> . empty
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (129) empty -> .
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    RPAREN          reduce using rule 129 (empty -> .)
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 137
    hyper_expression               shift and go to state 129
    empty                          shift and go to state 130
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 87

    (88) special_function_call -> SIMMETRY LPAREN . call_params0 RPAREN
    (75) call_params0 -> . hyper_expression handle_call_param call_params1
    (76) call_params0 -> . empty
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (129) empty -> .
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    RPAREN          reduce using rule 129 (empty -> .)
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 138
    hyper_expression               shift and go to state 129
    empty                          shift and go to state 130
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 88

    (89) special_function_call -> CORRELATION LPAREN . call_params0 RPAREN
    (75) call_params0 -> . hyper_expression handle_call_param call_params1
    (76) call_params0 -> . empty
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (129) empty -> .
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    RPAREN          reduce using rule 129 (empty -> .)
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 139
    hyper_expression               shift and go to state 129
    empty                          shift and go to state 130
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 89

    (90) special_function_call -> DFREAD LPAREN . CONST_TEXT RPAREN

    CONST_TEXT      shift and go to state 140


state 90

    (12) var_declarations -> VAR simple_declaration var_declarations .

    INSTRUCTIONS    reduce using rule 12 (var_declarations -> VAR simple_declaration var_declarations .)
    PROCEDURES      reduce using rule 12 (var_declarations -> VAR simple_declaration var_declarations .)
    BEGIN           reduce using rule 12 (var_declarations -> VAR simple_declaration var_declarations .)
    RSQBRACKET      reduce using rule 12 (var_declarations -> VAR simple_declaration var_declarations .)
    RBRACKET        reduce using rule 12 (var_declarations -> VAR simple_declaration var_declarations .)
    RETURN          reduce using rule 12 (var_declarations -> VAR simple_declaration var_declarations .)


state 91

    (13) var_declarations -> VAR array_declaration var_declarations .

    INSTRUCTIONS    reduce using rule 13 (var_declarations -> VAR array_declaration var_declarations .)
    PROCEDURES      reduce using rule 13 (var_declarations -> VAR array_declaration var_declarations .)
    BEGIN           reduce using rule 13 (var_declarations -> VAR array_declaration var_declarations .)
    RSQBRACKET      reduce using rule 13 (var_declarations -> VAR array_declaration var_declarations .)
    RBRACKET        reduce using rule 13 (var_declarations -> VAR array_declaration var_declarations .)
    RETURN          reduce using rule 13 (var_declarations -> VAR array_declaration var_declarations .)


state 92

    (14) var_declarations -> VAR matrix_declaration var_declarations .

    INSTRUCTIONS    reduce using rule 14 (var_declarations -> VAR matrix_declaration var_declarations .)
    PROCEDURES      reduce using rule 14 (var_declarations -> VAR matrix_declaration var_declarations .)
    BEGIN           reduce using rule 14 (var_declarations -> VAR matrix_declaration var_declarations .)
    RSQBRACKET      reduce using rule 14 (var_declarations -> VAR matrix_declaration var_declarations .)
    RBRACKET        reduce using rule 14 (var_declarations -> VAR matrix_declaration var_declarations .)
    RETURN          reduce using rule 14 (var_declarations -> VAR matrix_declaration var_declarations .)


state 93

    (16) simple_declaration -> ID COLON . var_type SEMICOLON
    (19) var_type -> . type
    (20) var_type -> . DF
    (127) type -> . INT
    (128) type -> . FLOAT

    DF              shift and go to state 143
    INT             shift and go to state 144
    FLOAT           shift and go to state 145

    var_type                       shift and go to state 141
    type                           shift and go to state 142

state 94

    (17) array_declaration -> ID LSQBRACKET . CONST_INT RSQBRACKET COLON type SEMICOLON
    (18) matrix_declaration -> ID LSQBRACKET . CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    CONST_INT       shift and go to state 146


state 95

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET . local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (11) local_scope_init -> .

    LOCALS          reduce using rule 11 (local_scope_init -> .)
    INSTRUCTIONS    reduce using rule 11 (local_scope_init -> .)
    RSQBRACKET      reduce using rule 11 (local_scope_init -> .)

    local_scope_init               shift and go to state 147

state 96

    (23) function_declarations -> PROC ID . proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC ID . proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (27) proc_scope_init -> .

    LPAREN          reduce using rule 27 (proc_scope_init -> .)

    proc_scope_init                shift and go to state 148

state 97

    (38) statements -> write SEMICOLON statements .

    PROCEDURES      reduce using rule 38 (statements -> write SEMICOLON statements .)
    BEGIN           reduce using rule 38 (statements -> write SEMICOLON statements .)
    RSQBRACKET      reduce using rule 38 (statements -> write SEMICOLON statements .)
    RBRACKET        reduce using rule 38 (statements -> write SEMICOLON statements .)
    RETURN          reduce using rule 38 (statements -> write SEMICOLON statements .)


state 98

    (39) statements -> read SEMICOLON statements .

    PROCEDURES      reduce using rule 39 (statements -> read SEMICOLON statements .)
    BEGIN           reduce using rule 39 (statements -> read SEMICOLON statements .)
    RSQBRACKET      reduce using rule 39 (statements -> read SEMICOLON statements .)
    RBRACKET        reduce using rule 39 (statements -> read SEMICOLON statements .)
    RETURN          reduce using rule 39 (statements -> read SEMICOLON statements .)


state 99

    (40) statements -> var_assignment SEMICOLON statements .

    PROCEDURES      reduce using rule 40 (statements -> var_assignment SEMICOLON statements .)
    BEGIN           reduce using rule 40 (statements -> var_assignment SEMICOLON statements .)
    RSQBRACKET      reduce using rule 40 (statements -> var_assignment SEMICOLON statements .)
    RBRACKET        reduce using rule 40 (statements -> var_assignment SEMICOLON statements .)
    RETURN          reduce using rule 40 (statements -> var_assignment SEMICOLON statements .)


state 100

    (43) statements -> function_call SEMICOLON statements .

    PROCEDURES      reduce using rule 43 (statements -> function_call SEMICOLON statements .)
    BEGIN           reduce using rule 43 (statements -> function_call SEMICOLON statements .)
    RSQBRACKET      reduce using rule 43 (statements -> function_call SEMICOLON statements .)
    RBRACKET        reduce using rule 43 (statements -> function_call SEMICOLON statements .)
    RETURN          reduce using rule 43 (statements -> function_call SEMICOLON statements .)


state 101

    (44) statements -> special_function_call SEMICOLON statements .

    PROCEDURES      reduce using rule 44 (statements -> special_function_call SEMICOLON statements .)
    BEGIN           reduce using rule 44 (statements -> special_function_call SEMICOLON statements .)
    RSQBRACKET      reduce using rule 44 (statements -> special_function_call SEMICOLON statements .)
    RBRACKET        reduce using rule 44 (statements -> special_function_call SEMICOLON statements .)
    RETURN          reduce using rule 44 (statements -> special_function_call SEMICOLON statements .)


state 102

    (47) write_params0 -> write_operator expression . produce_write_quad write_params1
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression
    (54) produce_write_quad -> .

    ADD             shift and go to state 150
    SUB             shift and go to state 151
    COMMA           reduce using rule 54 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 54 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 149

state 103

    (48) write_params0 -> write_operator const_text . produce_write_quad write_params1
    (54) produce_write_quad -> .

    COMMA           reduce using rule 54 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 54 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 152

state 104

    (103) expression -> term . produce_exp_quad
    (104) term -> term . MUL push_operator term
    (105) term -> term . DIV push_operator term
    (110) produce_exp_quad -> .

    MUL             shift and go to state 154
    DIV             shift and go to state 155
    ADD             reduce using rule 110 (produce_exp_quad -> .)
    SUB             reduce using rule 110 (produce_exp_quad -> .)
    COMMA           reduce using rule 110 (produce_exp_quad -> .)
    SEMICOLON       reduce using rule 110 (produce_exp_quad -> .)
    LTHAN           reduce using rule 110 (produce_exp_quad -> .)
    GTHAN           reduce using rule 110 (produce_exp_quad -> .)
    EQUAL           reduce using rule 110 (produce_exp_quad -> .)
    DIFFERENT       reduce using rule 110 (produce_exp_quad -> .)
    AND             reduce using rule 110 (produce_exp_quad -> .)
    OR              reduce using rule 110 (produce_exp_quad -> .)
    RPAREN          reduce using rule 110 (produce_exp_quad -> .)
    RSQBRACKET      reduce using rule 110 (produce_exp_quad -> .)

    produce_exp_quad               shift and go to state 153

state 105

    (52) const_text -> CONST_TEXT .

    COMMA           reduce using rule 52 (const_text -> CONST_TEXT .)
    SEMICOLON       reduce using rule 52 (const_text -> CONST_TEXT .)


state 106

    (106) term -> factor . produce_term_quad
    (111) produce_term_quad -> .

    MUL             reduce using rule 111 (produce_term_quad -> .)
    DIV             reduce using rule 111 (produce_term_quad -> .)
    ADD             reduce using rule 111 (produce_term_quad -> .)
    SUB             reduce using rule 111 (produce_term_quad -> .)
    COMMA           reduce using rule 111 (produce_term_quad -> .)
    SEMICOLON       reduce using rule 111 (produce_term_quad -> .)
    LTHAN           reduce using rule 111 (produce_term_quad -> .)
    GTHAN           reduce using rule 111 (produce_term_quad -> .)
    EQUAL           reduce using rule 111 (produce_term_quad -> .)
    DIFFERENT       reduce using rule 111 (produce_term_quad -> .)
    AND             reduce using rule 111 (produce_term_quad -> .)
    OR              reduce using rule 111 (produce_term_quad -> .)
    RPAREN          reduce using rule 111 (produce_term_quad -> .)
    RSQBRACKET      reduce using rule 111 (produce_term_quad -> .)

    produce_term_quad              shift and go to state 156

state 107

    (112) factor -> identifier .

    MUL             reduce using rule 112 (factor -> identifier .)
    DIV             reduce using rule 112 (factor -> identifier .)
    ADD             reduce using rule 112 (factor -> identifier .)
    SUB             reduce using rule 112 (factor -> identifier .)
    COMMA           reduce using rule 112 (factor -> identifier .)
    SEMICOLON       reduce using rule 112 (factor -> identifier .)
    LTHAN           reduce using rule 112 (factor -> identifier .)
    GTHAN           reduce using rule 112 (factor -> identifier .)
    EQUAL           reduce using rule 112 (factor -> identifier .)
    DIFFERENT       reduce using rule 112 (factor -> identifier .)
    AND             reduce using rule 112 (factor -> identifier .)
    OR              reduce using rule 112 (factor -> identifier .)
    RPAREN          reduce using rule 112 (factor -> identifier .)
    RSQBRACKET      reduce using rule 112 (factor -> identifier .)


state 108

    (113) factor -> const_int .

    MUL             reduce using rule 113 (factor -> const_int .)
    DIV             reduce using rule 113 (factor -> const_int .)
    ADD             reduce using rule 113 (factor -> const_int .)
    SUB             reduce using rule 113 (factor -> const_int .)
    COMMA           reduce using rule 113 (factor -> const_int .)
    SEMICOLON       reduce using rule 113 (factor -> const_int .)
    LTHAN           reduce using rule 113 (factor -> const_int .)
    GTHAN           reduce using rule 113 (factor -> const_int .)
    EQUAL           reduce using rule 113 (factor -> const_int .)
    DIFFERENT       reduce using rule 113 (factor -> const_int .)
    AND             reduce using rule 113 (factor -> const_int .)
    OR              reduce using rule 113 (factor -> const_int .)
    RPAREN          reduce using rule 113 (factor -> const_int .)
    RSQBRACKET      reduce using rule 113 (factor -> const_int .)


state 109

    (114) factor -> const_float .

    MUL             reduce using rule 114 (factor -> const_float .)
    DIV             reduce using rule 114 (factor -> const_float .)
    ADD             reduce using rule 114 (factor -> const_float .)
    SUB             reduce using rule 114 (factor -> const_float .)
    COMMA           reduce using rule 114 (factor -> const_float .)
    SEMICOLON       reduce using rule 114 (factor -> const_float .)
    LTHAN           reduce using rule 114 (factor -> const_float .)
    GTHAN           reduce using rule 114 (factor -> const_float .)
    EQUAL           reduce using rule 114 (factor -> const_float .)
    DIFFERENT       reduce using rule 114 (factor -> const_float .)
    AND             reduce using rule 114 (factor -> const_float .)
    OR              reduce using rule 114 (factor -> const_float .)
    RPAREN          reduce using rule 114 (factor -> const_float .)
    RSQBRACKET      reduce using rule 114 (factor -> const_float .)


state 110

    (115) factor -> LPAREN . push_cap expression RPAREN pop_cap
    (123) push_cap -> .

    LPAREN          reduce using rule 123 (push_cap -> .)
    ID              reduce using rule 123 (push_cap -> .)
    CONST_INT       reduce using rule 123 (push_cap -> .)
    CONST_FLOAT     reduce using rule 123 (push_cap -> .)
    MEAN            reduce using rule 123 (push_cap -> .)
    MEDIAN          reduce using rule 123 (push_cap -> .)
    MODE            reduce using rule 123 (push_cap -> .)
    STD             reduce using rule 123 (push_cap -> .)
    KURTOSIS        reduce using rule 123 (push_cap -> .)
    PLOT            reduce using rule 123 (push_cap -> .)
    DPLOT           reduce using rule 123 (push_cap -> .)
    VARIANCE        reduce using rule 123 (push_cap -> .)
    SIMMETRY        reduce using rule 123 (push_cap -> .)
    CORRELATION     reduce using rule 123 (push_cap -> .)
    DFREAD          reduce using rule 123 (push_cap -> .)
    HOMERO          reduce using rule 123 (push_cap -> .)
    MARGE           reduce using rule 123 (push_cap -> .)

    push_cap                       shift and go to state 157

state 111

    (116) factor -> array_access .

    MUL             reduce using rule 116 (factor -> array_access .)
    DIV             reduce using rule 116 (factor -> array_access .)
    ADD             reduce using rule 116 (factor -> array_access .)
    SUB             reduce using rule 116 (factor -> array_access .)
    COMMA           reduce using rule 116 (factor -> array_access .)
    SEMICOLON       reduce using rule 116 (factor -> array_access .)
    LTHAN           reduce using rule 116 (factor -> array_access .)
    GTHAN           reduce using rule 116 (factor -> array_access .)
    EQUAL           reduce using rule 116 (factor -> array_access .)
    DIFFERENT       reduce using rule 116 (factor -> array_access .)
    AND             reduce using rule 116 (factor -> array_access .)
    OR              reduce using rule 116 (factor -> array_access .)
    RPAREN          reduce using rule 116 (factor -> array_access .)
    RSQBRACKET      reduce using rule 116 (factor -> array_access .)


state 112

    (117) factor -> matrix_access .

    MUL             reduce using rule 117 (factor -> matrix_access .)
    DIV             reduce using rule 117 (factor -> matrix_access .)
    ADD             reduce using rule 117 (factor -> matrix_access .)
    SUB             reduce using rule 117 (factor -> matrix_access .)
    COMMA           reduce using rule 117 (factor -> matrix_access .)
    SEMICOLON       reduce using rule 117 (factor -> matrix_access .)
    LTHAN           reduce using rule 117 (factor -> matrix_access .)
    GTHAN           reduce using rule 117 (factor -> matrix_access .)
    EQUAL           reduce using rule 117 (factor -> matrix_access .)
    DIFFERENT       reduce using rule 117 (factor -> matrix_access .)
    AND             reduce using rule 117 (factor -> matrix_access .)
    OR              reduce using rule 117 (factor -> matrix_access .)
    RPAREN          reduce using rule 117 (factor -> matrix_access .)
    RSQBRACKET      reduce using rule 117 (factor -> matrix_access .)


state 113

    (118) factor -> function_call .

    MUL             reduce using rule 118 (factor -> function_call .)
    DIV             reduce using rule 118 (factor -> function_call .)
    ADD             reduce using rule 118 (factor -> function_call .)
    SUB             reduce using rule 118 (factor -> function_call .)
    COMMA           reduce using rule 118 (factor -> function_call .)
    SEMICOLON       reduce using rule 118 (factor -> function_call .)
    LTHAN           reduce using rule 118 (factor -> function_call .)
    GTHAN           reduce using rule 118 (factor -> function_call .)
    EQUAL           reduce using rule 118 (factor -> function_call .)
    DIFFERENT       reduce using rule 118 (factor -> function_call .)
    AND             reduce using rule 118 (factor -> function_call .)
    OR              reduce using rule 118 (factor -> function_call .)
    RPAREN          reduce using rule 118 (factor -> function_call .)
    RSQBRACKET      reduce using rule 118 (factor -> function_call .)


state 114

    (119) factor -> special_function_call .

    MUL             reduce using rule 119 (factor -> special_function_call .)
    DIV             reduce using rule 119 (factor -> special_function_call .)
    ADD             reduce using rule 119 (factor -> special_function_call .)
    SUB             reduce using rule 119 (factor -> special_function_call .)
    COMMA           reduce using rule 119 (factor -> special_function_call .)
    SEMICOLON       reduce using rule 119 (factor -> special_function_call .)
    LTHAN           reduce using rule 119 (factor -> special_function_call .)
    GTHAN           reduce using rule 119 (factor -> special_function_call .)
    EQUAL           reduce using rule 119 (factor -> special_function_call .)
    DIFFERENT       reduce using rule 119 (factor -> special_function_call .)
    AND             reduce using rule 119 (factor -> special_function_call .)
    OR              reduce using rule 119 (factor -> special_function_call .)
    RPAREN          reduce using rule 119 (factor -> special_function_call .)
    RSQBRACKET      reduce using rule 119 (factor -> special_function_call .)


state 115

    (120) identifier -> ID .
    (125) array_access -> ID . LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> ID . LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> ID . function_call_check function_call_lparen call_params0 function_call_rparen
    (72) function_call_check -> .

    MUL             reduce using rule 120 (identifier -> ID .)
    DIV             reduce using rule 120 (identifier -> ID .)
    ADD             reduce using rule 120 (identifier -> ID .)
    SUB             reduce using rule 120 (identifier -> ID .)
    COMMA           reduce using rule 120 (identifier -> ID .)
    SEMICOLON       reduce using rule 120 (identifier -> ID .)
    LTHAN           reduce using rule 120 (identifier -> ID .)
    GTHAN           reduce using rule 120 (identifier -> ID .)
    EQUAL           reduce using rule 120 (identifier -> ID .)
    DIFFERENT       reduce using rule 120 (identifier -> ID .)
    AND             reduce using rule 120 (identifier -> ID .)
    OR              reduce using rule 120 (identifier -> ID .)
    RPAREN          reduce using rule 120 (identifier -> ID .)
    RSQBRACKET      reduce using rule 120 (identifier -> ID .)
    LSQBRACKET      shift and go to state 158
    LPAREN          reduce using rule 72 (function_call_check -> .)

    function_call_check            shift and go to state 77

state 116

    (121) const_int -> CONST_INT .

    MUL             reduce using rule 121 (const_int -> CONST_INT .)
    DIV             reduce using rule 121 (const_int -> CONST_INT .)
    ADD             reduce using rule 121 (const_int -> CONST_INT .)
    SUB             reduce using rule 121 (const_int -> CONST_INT .)
    COMMA           reduce using rule 121 (const_int -> CONST_INT .)
    SEMICOLON       reduce using rule 121 (const_int -> CONST_INT .)
    LTHAN           reduce using rule 121 (const_int -> CONST_INT .)
    GTHAN           reduce using rule 121 (const_int -> CONST_INT .)
    EQUAL           reduce using rule 121 (const_int -> CONST_INT .)
    DIFFERENT       reduce using rule 121 (const_int -> CONST_INT .)
    AND             reduce using rule 121 (const_int -> CONST_INT .)
    OR              reduce using rule 121 (const_int -> CONST_INT .)
    RPAREN          reduce using rule 121 (const_int -> CONST_INT .)
    RSQBRACKET      reduce using rule 121 (const_int -> CONST_INT .)


state 117

    (122) const_float -> CONST_FLOAT .

    MUL             reduce using rule 122 (const_float -> CONST_FLOAT .)
    DIV             reduce using rule 122 (const_float -> CONST_FLOAT .)
    ADD             reduce using rule 122 (const_float -> CONST_FLOAT .)
    SUB             reduce using rule 122 (const_float -> CONST_FLOAT .)
    COMMA           reduce using rule 122 (const_float -> CONST_FLOAT .)
    SEMICOLON       reduce using rule 122 (const_float -> CONST_FLOAT .)
    LTHAN           reduce using rule 122 (const_float -> CONST_FLOAT .)
    GTHAN           reduce using rule 122 (const_float -> CONST_FLOAT .)
    EQUAL           reduce using rule 122 (const_float -> CONST_FLOAT .)
    DIFFERENT       reduce using rule 122 (const_float -> CONST_FLOAT .)
    AND             reduce using rule 122 (const_float -> CONST_FLOAT .)
    OR              reduce using rule 122 (const_float -> CONST_FLOAT .)
    RPAREN          reduce using rule 122 (const_float -> CONST_FLOAT .)
    RSQBRACKET      reduce using rule 122 (const_float -> CONST_FLOAT .)


state 118

    (55) read -> READ push_operator identifier .

    SEMICOLON       reduce using rule 55 (read -> READ push_operator identifier .)


state 119

    (120) identifier -> ID .

    SEMICOLON       reduce using rule 120 (identifier -> ID .)


state 120

    (59) simple_assignment -> identifier ASSIGN push_operator . expression
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    identifier                     shift and go to state 107
    expression                     shift and go to state 159
    term                           shift and go to state 104
    factor                         shift and go to state 106
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 121

    (62) condition -> IF cond_lparen hyper_expression . cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> IF cond_lparen hyper_expression . cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (93) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (94) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (65) cond_rparen -> . RPAREN

    AND             shift and go to state 161
    OR              shift and go to state 162
    RPAREN          shift and go to state 163

    cond_rparen                    shift and go to state 160

state 122

    (95) hyper_expression -> super_expression . produce_hyperexp_quad
    (96) super_expression -> super_expression . LTHAN push_operator super_expression
    (97) super_expression -> super_expression . GTHAN push_operator super_expression
    (98) super_expression -> super_expression . EQUAL push_operator super_expression
    (99) super_expression -> super_expression . DIFFERENT super_expression
    (108) produce_hyperexp_quad -> .

    LTHAN           shift and go to state 165
    GTHAN           shift and go to state 166
    EQUAL           shift and go to state 167
    DIFFERENT       shift and go to state 168
    AND             reduce using rule 108 (produce_hyperexp_quad -> .)
    OR              reduce using rule 108 (produce_hyperexp_quad -> .)
    RPAREN          reduce using rule 108 (produce_hyperexp_quad -> .)
    COMMA           reduce using rule 108 (produce_hyperexp_quad -> .)

    produce_hyperexp_quad          shift and go to state 164

state 123

    (100) super_expression -> expression . produce_superexp_quad
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression
    (109) produce_superexp_quad -> .

    ADD             shift and go to state 150
    SUB             shift and go to state 151
    LTHAN           reduce using rule 109 (produce_superexp_quad -> .)
    GTHAN           reduce using rule 109 (produce_superexp_quad -> .)
    EQUAL           reduce using rule 109 (produce_superexp_quad -> .)
    DIFFERENT       reduce using rule 109 (produce_superexp_quad -> .)
    AND             reduce using rule 109 (produce_superexp_quad -> .)
    OR              reduce using rule 109 (produce_superexp_quad -> .)
    RPAREN          reduce using rule 109 (produce_superexp_quad -> .)
    COMMA           reduce using rule 109 (produce_superexp_quad -> .)

    produce_superexp_quad          shift and go to state 169

state 124

    (68) loop -> repeat cond_lparen hyper_expression . cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (93) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (94) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (65) cond_rparen -> . RPAREN

    AND             shift and go to state 161
    OR              shift and go to state 162
    RPAREN          shift and go to state 163

    cond_rparen                    shift and go to state 170

state 125

    (71) function_call -> ID function_call_check function_call_lparen . call_params0 function_call_rparen
    (75) call_params0 -> . hyper_expression handle_call_param call_params1
    (76) call_params0 -> . empty
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (129) empty -> .
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    RPAREN          reduce using rule 129 (empty -> .)
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 171
    hyper_expression               shift and go to state 129
    empty                          shift and go to state 130
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 126

    (73) function_call_lparen -> LPAREN .

    LPAREN          reduce using rule 73 (function_call_lparen -> LPAREN .)
    ID              reduce using rule 73 (function_call_lparen -> LPAREN .)
    CONST_INT       reduce using rule 73 (function_call_lparen -> LPAREN .)
    CONST_FLOAT     reduce using rule 73 (function_call_lparen -> LPAREN .)
    MEAN            reduce using rule 73 (function_call_lparen -> LPAREN .)
    MEDIAN          reduce using rule 73 (function_call_lparen -> LPAREN .)
    MODE            reduce using rule 73 (function_call_lparen -> LPAREN .)
    STD             reduce using rule 73 (function_call_lparen -> LPAREN .)
    KURTOSIS        reduce using rule 73 (function_call_lparen -> LPAREN .)
    PLOT            reduce using rule 73 (function_call_lparen -> LPAREN .)
    DPLOT           reduce using rule 73 (function_call_lparen -> LPAREN .)
    VARIANCE        reduce using rule 73 (function_call_lparen -> LPAREN .)
    SIMMETRY        reduce using rule 73 (function_call_lparen -> LPAREN .)
    CORRELATION     reduce using rule 73 (function_call_lparen -> LPAREN .)
    DFREAD          reduce using rule 73 (function_call_lparen -> LPAREN .)
    HOMERO          reduce using rule 73 (function_call_lparen -> LPAREN .)
    MARGE           reduce using rule 73 (function_call_lparen -> LPAREN .)
    RPAREN          reduce using rule 73 (function_call_lparen -> LPAREN .)


state 127

    (60) array_assignment -> ID LSQBRACKET expression . RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> ID LSQBRACKET expression . RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression

    RSQBRACKET      shift and go to state 172
    ADD             shift and go to state 150
    SUB             shift and go to state 151


state 128

    (80) special_function_call -> MEAN LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 173


state 129

    (75) call_params0 -> hyper_expression . handle_call_param call_params1
    (93) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (94) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (79) handle_call_param -> .

    AND             shift and go to state 161
    OR              shift and go to state 162
    COMMA           reduce using rule 79 (handle_call_param -> .)
    RPAREN          reduce using rule 79 (handle_call_param -> .)

    handle_call_param              shift and go to state 174

state 130

    (76) call_params0 -> empty .

    RPAREN          reduce using rule 76 (call_params0 -> empty .)


state 131

    (81) special_function_call -> MEDIAN LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 175


state 132

    (82) special_function_call -> MODE LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 176


state 133

    (83) special_function_call -> STD LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 177


state 134

    (84) special_function_call -> KURTOSIS LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 178


state 135

    (85) special_function_call -> PLOT LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 179


state 136

    (86) special_function_call -> DPLOT LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 180


state 137

    (87) special_function_call -> VARIANCE LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 181


state 138

    (88) special_function_call -> SIMMETRY LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 182


state 139

    (89) special_function_call -> CORRELATION LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 183


state 140

    (90) special_function_call -> DFREAD LPAREN CONST_TEXT . RPAREN

    RPAREN          shift and go to state 184


state 141

    (16) simple_declaration -> ID COLON var_type . SEMICOLON

    SEMICOLON       shift and go to state 185


state 142

    (19) var_type -> type .

    SEMICOLON       reduce using rule 19 (var_type -> type .)


state 143

    (20) var_type -> DF .

    SEMICOLON       reduce using rule 20 (var_type -> DF .)


state 144

    (127) type -> INT .

    SEMICOLON       reduce using rule 127 (type -> INT .)
    COMMA           reduce using rule 127 (type -> INT .)
    RPAREN          reduce using rule 127 (type -> INT .)
    LBRACKET        reduce using rule 127 (type -> INT .)


state 145

    (128) type -> FLOAT .

    SEMICOLON       reduce using rule 128 (type -> FLOAT .)
    COMMA           reduce using rule 128 (type -> FLOAT .)
    RPAREN          reduce using rule 128 (type -> FLOAT .)
    LBRACKET        reduce using rule 128 (type -> FLOAT .)


state 146

    (17) array_declaration -> ID LSQBRACKET CONST_INT . RSQBRACKET COLON type SEMICOLON
    (18) matrix_declaration -> ID LSQBRACKET CONST_INT . RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    RSQBRACKET      shift and go to state 186


state 147

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init . local_vars_block fill_main_jump instructions_block RSQBRACKET
    (6) local_vars_block -> . LOCALS COLON var_declarations
    (7) local_vars_block -> . empty
    (129) empty -> .

    LOCALS          shift and go to state 188
    INSTRUCTIONS    reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)

    local_vars_block               shift and go to state 187
    empty                          shift and go to state 189

state 148

    (23) function_declarations -> PROC ID proc_scope_init . LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC ID proc_scope_init . LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    LPAREN          shift and go to state 190


state 149

    (47) write_params0 -> write_operator expression produce_write_quad . write_params1
    (49) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (50) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (51) write_params1 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 192
    SEMICOLON       reduce using rule 129 (empty -> .)

    write_params1                  shift and go to state 191
    empty                          shift and go to state 193

state 150

    (101) expression -> expression ADD . push_operator expression
    (107) push_operator -> .

    LPAREN          reduce using rule 107 (push_operator -> .)
    ID              reduce using rule 107 (push_operator -> .)
    CONST_INT       reduce using rule 107 (push_operator -> .)
    CONST_FLOAT     reduce using rule 107 (push_operator -> .)
    MEAN            reduce using rule 107 (push_operator -> .)
    MEDIAN          reduce using rule 107 (push_operator -> .)
    MODE            reduce using rule 107 (push_operator -> .)
    STD             reduce using rule 107 (push_operator -> .)
    KURTOSIS        reduce using rule 107 (push_operator -> .)
    PLOT            reduce using rule 107 (push_operator -> .)
    DPLOT           reduce using rule 107 (push_operator -> .)
    VARIANCE        reduce using rule 107 (push_operator -> .)
    SIMMETRY        reduce using rule 107 (push_operator -> .)
    CORRELATION     reduce using rule 107 (push_operator -> .)
    DFREAD          reduce using rule 107 (push_operator -> .)
    HOMERO          reduce using rule 107 (push_operator -> .)
    MARGE           reduce using rule 107 (push_operator -> .)

    push_operator                  shift and go to state 194

state 151

    (102) expression -> expression SUB . push_operator expression
    (107) push_operator -> .

    LPAREN          reduce using rule 107 (push_operator -> .)
    ID              reduce using rule 107 (push_operator -> .)
    CONST_INT       reduce using rule 107 (push_operator -> .)
    CONST_FLOAT     reduce using rule 107 (push_operator -> .)
    MEAN            reduce using rule 107 (push_operator -> .)
    MEDIAN          reduce using rule 107 (push_operator -> .)
    MODE            reduce using rule 107 (push_operator -> .)
    STD             reduce using rule 107 (push_operator -> .)
    KURTOSIS        reduce using rule 107 (push_operator -> .)
    PLOT            reduce using rule 107 (push_operator -> .)
    DPLOT           reduce using rule 107 (push_operator -> .)
    VARIANCE        reduce using rule 107 (push_operator -> .)
    SIMMETRY        reduce using rule 107 (push_operator -> .)
    CORRELATION     reduce using rule 107 (push_operator -> .)
    DFREAD          reduce using rule 107 (push_operator -> .)
    HOMERO          reduce using rule 107 (push_operator -> .)
    MARGE           reduce using rule 107 (push_operator -> .)

    push_operator                  shift and go to state 195

state 152

    (48) write_params0 -> write_operator const_text produce_write_quad . write_params1
    (49) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (50) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (51) write_params1 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 192
    SEMICOLON       reduce using rule 129 (empty -> .)

    write_params1                  shift and go to state 196
    empty                          shift and go to state 193

state 153

    (103) expression -> term produce_exp_quad .

    ADD             reduce using rule 103 (expression -> term produce_exp_quad .)
    SUB             reduce using rule 103 (expression -> term produce_exp_quad .)
    COMMA           reduce using rule 103 (expression -> term produce_exp_quad .)
    SEMICOLON       reduce using rule 103 (expression -> term produce_exp_quad .)
    LTHAN           reduce using rule 103 (expression -> term produce_exp_quad .)
    GTHAN           reduce using rule 103 (expression -> term produce_exp_quad .)
    EQUAL           reduce using rule 103 (expression -> term produce_exp_quad .)
    DIFFERENT       reduce using rule 103 (expression -> term produce_exp_quad .)
    AND             reduce using rule 103 (expression -> term produce_exp_quad .)
    OR              reduce using rule 103 (expression -> term produce_exp_quad .)
    RPAREN          reduce using rule 103 (expression -> term produce_exp_quad .)
    RSQBRACKET      reduce using rule 103 (expression -> term produce_exp_quad .)


state 154

    (104) term -> term MUL . push_operator term
    (107) push_operator -> .

    LPAREN          reduce using rule 107 (push_operator -> .)
    ID              reduce using rule 107 (push_operator -> .)
    CONST_INT       reduce using rule 107 (push_operator -> .)
    CONST_FLOAT     reduce using rule 107 (push_operator -> .)
    MEAN            reduce using rule 107 (push_operator -> .)
    MEDIAN          reduce using rule 107 (push_operator -> .)
    MODE            reduce using rule 107 (push_operator -> .)
    STD             reduce using rule 107 (push_operator -> .)
    KURTOSIS        reduce using rule 107 (push_operator -> .)
    PLOT            reduce using rule 107 (push_operator -> .)
    DPLOT           reduce using rule 107 (push_operator -> .)
    VARIANCE        reduce using rule 107 (push_operator -> .)
    SIMMETRY        reduce using rule 107 (push_operator -> .)
    CORRELATION     reduce using rule 107 (push_operator -> .)
    DFREAD          reduce using rule 107 (push_operator -> .)
    HOMERO          reduce using rule 107 (push_operator -> .)
    MARGE           reduce using rule 107 (push_operator -> .)

    push_operator                  shift and go to state 197

state 155

    (105) term -> term DIV . push_operator term
    (107) push_operator -> .

    LPAREN          reduce using rule 107 (push_operator -> .)
    ID              reduce using rule 107 (push_operator -> .)
    CONST_INT       reduce using rule 107 (push_operator -> .)
    CONST_FLOAT     reduce using rule 107 (push_operator -> .)
    MEAN            reduce using rule 107 (push_operator -> .)
    MEDIAN          reduce using rule 107 (push_operator -> .)
    MODE            reduce using rule 107 (push_operator -> .)
    STD             reduce using rule 107 (push_operator -> .)
    KURTOSIS        reduce using rule 107 (push_operator -> .)
    PLOT            reduce using rule 107 (push_operator -> .)
    DPLOT           reduce using rule 107 (push_operator -> .)
    VARIANCE        reduce using rule 107 (push_operator -> .)
    SIMMETRY        reduce using rule 107 (push_operator -> .)
    CORRELATION     reduce using rule 107 (push_operator -> .)
    DFREAD          reduce using rule 107 (push_operator -> .)
    HOMERO          reduce using rule 107 (push_operator -> .)
    MARGE           reduce using rule 107 (push_operator -> .)

    push_operator                  shift and go to state 198

state 156

    (106) term -> factor produce_term_quad .

    MUL             reduce using rule 106 (term -> factor produce_term_quad .)
    DIV             reduce using rule 106 (term -> factor produce_term_quad .)
    ADD             reduce using rule 106 (term -> factor produce_term_quad .)
    SUB             reduce using rule 106 (term -> factor produce_term_quad .)
    COMMA           reduce using rule 106 (term -> factor produce_term_quad .)
    SEMICOLON       reduce using rule 106 (term -> factor produce_term_quad .)
    LTHAN           reduce using rule 106 (term -> factor produce_term_quad .)
    GTHAN           reduce using rule 106 (term -> factor produce_term_quad .)
    EQUAL           reduce using rule 106 (term -> factor produce_term_quad .)
    DIFFERENT       reduce using rule 106 (term -> factor produce_term_quad .)
    AND             reduce using rule 106 (term -> factor produce_term_quad .)
    OR              reduce using rule 106 (term -> factor produce_term_quad .)
    RPAREN          reduce using rule 106 (term -> factor produce_term_quad .)
    RSQBRACKET      reduce using rule 106 (term -> factor produce_term_quad .)


state 157

    (115) factor -> LPAREN push_cap . expression RPAREN pop_cap
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 199
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 158

    (125) array_access -> ID LSQBRACKET . expression RSQBRACKET
    (126) matrix_access -> ID LSQBRACKET . expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 200
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 159

    (59) simple_assignment -> identifier ASSIGN push_operator expression .
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression

    SEMICOLON       reduce using rule 59 (simple_assignment -> identifier ASSIGN push_operator expression .)
    ADD             shift and go to state 150
    SUB             shift and go to state 151


state 160

    (62) condition -> IF cond_lparen hyper_expression cond_rparen . LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> IF cond_lparen hyper_expression cond_rparen . LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump

    LBRACKET        shift and go to state 201


state 161

    (93) hyper_expression -> hyper_expression AND . push_operator hyper_expression
    (107) push_operator -> .

    LPAREN          reduce using rule 107 (push_operator -> .)
    ID              reduce using rule 107 (push_operator -> .)
    CONST_INT       reduce using rule 107 (push_operator -> .)
    CONST_FLOAT     reduce using rule 107 (push_operator -> .)
    MEAN            reduce using rule 107 (push_operator -> .)
    MEDIAN          reduce using rule 107 (push_operator -> .)
    MODE            reduce using rule 107 (push_operator -> .)
    STD             reduce using rule 107 (push_operator -> .)
    KURTOSIS        reduce using rule 107 (push_operator -> .)
    PLOT            reduce using rule 107 (push_operator -> .)
    DPLOT           reduce using rule 107 (push_operator -> .)
    VARIANCE        reduce using rule 107 (push_operator -> .)
    SIMMETRY        reduce using rule 107 (push_operator -> .)
    CORRELATION     reduce using rule 107 (push_operator -> .)
    DFREAD          reduce using rule 107 (push_operator -> .)
    HOMERO          reduce using rule 107 (push_operator -> .)
    MARGE           reduce using rule 107 (push_operator -> .)

    push_operator                  shift and go to state 202

state 162

    (94) hyper_expression -> hyper_expression OR . push_operator hyper_expression
    (107) push_operator -> .

    LPAREN          reduce using rule 107 (push_operator -> .)
    ID              reduce using rule 107 (push_operator -> .)
    CONST_INT       reduce using rule 107 (push_operator -> .)
    CONST_FLOAT     reduce using rule 107 (push_operator -> .)
    MEAN            reduce using rule 107 (push_operator -> .)
    MEDIAN          reduce using rule 107 (push_operator -> .)
    MODE            reduce using rule 107 (push_operator -> .)
    STD             reduce using rule 107 (push_operator -> .)
    KURTOSIS        reduce using rule 107 (push_operator -> .)
    PLOT            reduce using rule 107 (push_operator -> .)
    DPLOT           reduce using rule 107 (push_operator -> .)
    VARIANCE        reduce using rule 107 (push_operator -> .)
    SIMMETRY        reduce using rule 107 (push_operator -> .)
    CORRELATION     reduce using rule 107 (push_operator -> .)
    DFREAD          reduce using rule 107 (push_operator -> .)
    HOMERO          reduce using rule 107 (push_operator -> .)
    MARGE           reduce using rule 107 (push_operator -> .)

    push_operator                  shift and go to state 203

state 163

    (65) cond_rparen -> RPAREN .

    LBRACKET        reduce using rule 65 (cond_rparen -> RPAREN .)


state 164

    (95) hyper_expression -> super_expression produce_hyperexp_quad .

    AND             reduce using rule 95 (hyper_expression -> super_expression produce_hyperexp_quad .)
    OR              reduce using rule 95 (hyper_expression -> super_expression produce_hyperexp_quad .)
    RPAREN          reduce using rule 95 (hyper_expression -> super_expression produce_hyperexp_quad .)
    COMMA           reduce using rule 95 (hyper_expression -> super_expression produce_hyperexp_quad .)


state 165

    (96) super_expression -> super_expression LTHAN . push_operator super_expression
    (107) push_operator -> .

    LPAREN          reduce using rule 107 (push_operator -> .)
    ID              reduce using rule 107 (push_operator -> .)
    CONST_INT       reduce using rule 107 (push_operator -> .)
    CONST_FLOAT     reduce using rule 107 (push_operator -> .)
    MEAN            reduce using rule 107 (push_operator -> .)
    MEDIAN          reduce using rule 107 (push_operator -> .)
    MODE            reduce using rule 107 (push_operator -> .)
    STD             reduce using rule 107 (push_operator -> .)
    KURTOSIS        reduce using rule 107 (push_operator -> .)
    PLOT            reduce using rule 107 (push_operator -> .)
    DPLOT           reduce using rule 107 (push_operator -> .)
    VARIANCE        reduce using rule 107 (push_operator -> .)
    SIMMETRY        reduce using rule 107 (push_operator -> .)
    CORRELATION     reduce using rule 107 (push_operator -> .)
    DFREAD          reduce using rule 107 (push_operator -> .)
    HOMERO          reduce using rule 107 (push_operator -> .)
    MARGE           reduce using rule 107 (push_operator -> .)

    push_operator                  shift and go to state 204

state 166

    (97) super_expression -> super_expression GTHAN . push_operator super_expression
    (107) push_operator -> .

    LPAREN          reduce using rule 107 (push_operator -> .)
    ID              reduce using rule 107 (push_operator -> .)
    CONST_INT       reduce using rule 107 (push_operator -> .)
    CONST_FLOAT     reduce using rule 107 (push_operator -> .)
    MEAN            reduce using rule 107 (push_operator -> .)
    MEDIAN          reduce using rule 107 (push_operator -> .)
    MODE            reduce using rule 107 (push_operator -> .)
    STD             reduce using rule 107 (push_operator -> .)
    KURTOSIS        reduce using rule 107 (push_operator -> .)
    PLOT            reduce using rule 107 (push_operator -> .)
    DPLOT           reduce using rule 107 (push_operator -> .)
    VARIANCE        reduce using rule 107 (push_operator -> .)
    SIMMETRY        reduce using rule 107 (push_operator -> .)
    CORRELATION     reduce using rule 107 (push_operator -> .)
    DFREAD          reduce using rule 107 (push_operator -> .)
    HOMERO          reduce using rule 107 (push_operator -> .)
    MARGE           reduce using rule 107 (push_operator -> .)

    push_operator                  shift and go to state 205

state 167

    (98) super_expression -> super_expression EQUAL . push_operator super_expression
    (107) push_operator -> .

    LPAREN          reduce using rule 107 (push_operator -> .)
    ID              reduce using rule 107 (push_operator -> .)
    CONST_INT       reduce using rule 107 (push_operator -> .)
    CONST_FLOAT     reduce using rule 107 (push_operator -> .)
    MEAN            reduce using rule 107 (push_operator -> .)
    MEDIAN          reduce using rule 107 (push_operator -> .)
    MODE            reduce using rule 107 (push_operator -> .)
    STD             reduce using rule 107 (push_operator -> .)
    KURTOSIS        reduce using rule 107 (push_operator -> .)
    PLOT            reduce using rule 107 (push_operator -> .)
    DPLOT           reduce using rule 107 (push_operator -> .)
    VARIANCE        reduce using rule 107 (push_operator -> .)
    SIMMETRY        reduce using rule 107 (push_operator -> .)
    CORRELATION     reduce using rule 107 (push_operator -> .)
    DFREAD          reduce using rule 107 (push_operator -> .)
    HOMERO          reduce using rule 107 (push_operator -> .)
    MARGE           reduce using rule 107 (push_operator -> .)

    push_operator                  shift and go to state 206

state 168

    (99) super_expression -> super_expression DIFFERENT . super_expression
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    super_expression               shift and go to state 207
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 169

    (100) super_expression -> expression produce_superexp_quad .

    LTHAN           reduce using rule 100 (super_expression -> expression produce_superexp_quad .)
    GTHAN           reduce using rule 100 (super_expression -> expression produce_superexp_quad .)
    EQUAL           reduce using rule 100 (super_expression -> expression produce_superexp_quad .)
    DIFFERENT       reduce using rule 100 (super_expression -> expression produce_superexp_quad .)
    AND             reduce using rule 100 (super_expression -> expression produce_superexp_quad .)
    OR              reduce using rule 100 (super_expression -> expression produce_superexp_quad .)
    RPAREN          reduce using rule 100 (super_expression -> expression produce_superexp_quad .)
    COMMA           reduce using rule 100 (super_expression -> expression produce_superexp_quad .)


state 170

    (68) loop -> repeat cond_lparen hyper_expression cond_rparen . LBRACKET statements RBRACKET fill_returning_jump

    LBRACKET        shift and go to state 208


state 171

    (71) function_call -> ID function_call_check function_call_lparen call_params0 . function_call_rparen
    (74) function_call_rparen -> . RPAREN

    RPAREN          shift and go to state 210

    function_call_rparen           shift and go to state 209

state 172

    (60) array_assignment -> ID LSQBRACKET expression RSQBRACKET . ASSIGN expression
    (61) matrix_assignment -> ID LSQBRACKET expression RSQBRACKET . LSQBRACKET expression RSQBRACKET ASSIGN expression

    ASSIGN          shift and go to state 212
    LSQBRACKET      shift and go to state 211


state 173

    (80) special_function_call -> MEAN LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    AND             reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    OR              reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 80 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)


state 174

    (75) call_params0 -> hyper_expression handle_call_param . call_params1
    (77) call_params1 -> . COMMA hyper_expression handle_call_param call_params1
    (78) call_params1 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 214
    RPAREN          reduce using rule 129 (empty -> .)

    call_params1                   shift and go to state 213
    empty                          shift and go to state 215

state 175

    (81) special_function_call -> MEDIAN LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    AND             reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    OR              reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 81 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)


state 176

    (82) special_function_call -> MODE LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    AND             reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    OR              reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 82 (special_function_call -> MODE LPAREN call_params0 RPAREN .)


state 177

    (83) special_function_call -> STD LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    AND             reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    OR              reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 83 (special_function_call -> STD LPAREN call_params0 RPAREN .)


state 178

    (84) special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    AND             reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    OR              reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 84 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)


state 179

    (85) special_function_call -> PLOT LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    AND             reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    OR              reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 85 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)


state 180

    (86) special_function_call -> DPLOT LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    AND             reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    OR              reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 86 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)


state 181

    (87) special_function_call -> VARIANCE LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    AND             reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    OR              reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 87 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)


state 182

    (88) special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    AND             reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    OR              reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 88 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)


state 183

    (89) special_function_call -> CORRELATION LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    AND             reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    OR              reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 89 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)


state 184

    (90) special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .

    SEMICOLON       reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    MUL             reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    DIV             reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    ADD             reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    SUB             reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    COMMA           reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    LTHAN           reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    GTHAN           reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    EQUAL           reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    DIFFERENT       reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    AND             reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    OR              reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    RPAREN          reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    RSQBRACKET      reduce using rule 90 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)


state 185

    (16) simple_declaration -> ID COLON var_type SEMICOLON .

    VAR             reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)
    INSTRUCTIONS    reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)
    PROCEDURES      reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)
    BEGIN           reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)
    RSQBRACKET      reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)
    RBRACKET        reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)
    RETURN          reduce using rule 16 (simple_declaration -> ID COLON var_type SEMICOLON .)


state 186

    (17) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET . COLON type SEMICOLON
    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET . LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    COLON           shift and go to state 217
    LSQBRACKET      shift and go to state 216


state 187

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block . fill_main_jump instructions_block RSQBRACKET
    (3) fill_main_jump -> .

    INSTRUCTIONS    reduce using rule 3 (fill_main_jump -> .)
    RSQBRACKET      reduce using rule 3 (fill_main_jump -> .)

    fill_main_jump                 shift and go to state 218

state 188

    (6) local_vars_block -> LOCALS . COLON var_declarations

    COLON           shift and go to state 219


state 189

    (7) local_vars_block -> empty .

    INSTRUCTIONS    reduce using rule 7 (local_vars_block -> empty .)
    RSQBRACKET      reduce using rule 7 (local_vars_block -> empty .)
    RBRACKET        reduce using rule 7 (local_vars_block -> empty .)
    RETURN          reduce using rule 7 (local_vars_block -> empty .)


state 190

    (23) function_declarations -> PROC ID proc_scope_init LPAREN . params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC ID proc_scope_init LPAREN . params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (33) params0 -> . param params1
    (34) params0 -> . empty
    (37) param -> . ID COLON type
    (129) empty -> .

    ID              shift and go to state 220
    RPAREN          reduce using rule 129 (empty -> .)

    params0                        shift and go to state 221
    param                          shift and go to state 222
    empty                          shift and go to state 223

state 191

    (47) write_params0 -> write_operator expression produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 47 (write_params0 -> write_operator expression produce_write_quad write_params1 .)


state 192

    (49) write_params1 -> COMMA . write_operator expression produce_write_quad write_params1
    (50) write_params1 -> COMMA . write_operator const_text produce_write_quad write_params1
    (53) write_operator -> .

    CONST_TEXT      reduce using rule 53 (write_operator -> .)
    LPAREN          reduce using rule 53 (write_operator -> .)
    ID              reduce using rule 53 (write_operator -> .)
    CONST_INT       reduce using rule 53 (write_operator -> .)
    CONST_FLOAT     reduce using rule 53 (write_operator -> .)
    MEAN            reduce using rule 53 (write_operator -> .)
    MEDIAN          reduce using rule 53 (write_operator -> .)
    MODE            reduce using rule 53 (write_operator -> .)
    STD             reduce using rule 53 (write_operator -> .)
    KURTOSIS        reduce using rule 53 (write_operator -> .)
    PLOT            reduce using rule 53 (write_operator -> .)
    DPLOT           reduce using rule 53 (write_operator -> .)
    VARIANCE        reduce using rule 53 (write_operator -> .)
    SIMMETRY        reduce using rule 53 (write_operator -> .)
    CORRELATION     reduce using rule 53 (write_operator -> .)
    DFREAD          reduce using rule 53 (write_operator -> .)
    HOMERO          reduce using rule 53 (write_operator -> .)
    MARGE           reduce using rule 53 (write_operator -> .)

    write_operator                 shift and go to state 224

state 193

    (51) write_params1 -> empty .

    SEMICOLON       reduce using rule 51 (write_params1 -> empty .)


state 194

    (101) expression -> expression ADD push_operator . expression
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 225
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 195

    (102) expression -> expression SUB push_operator . expression
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 226
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 196

    (48) write_params0 -> write_operator const_text produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 48 (write_params0 -> write_operator const_text produce_write_quad write_params1 .)


state 197

    (104) term -> term MUL push_operator . term
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    term                           shift and go to state 227
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 198

    (105) term -> term DIV push_operator . term
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    term                           shift and go to state 228
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 199

    (115) factor -> LPAREN push_cap expression . RPAREN pop_cap
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression

    RPAREN          shift and go to state 229
    ADD             shift and go to state 150
    SUB             shift and go to state 151


state 200

    (125) array_access -> ID LSQBRACKET expression . RSQBRACKET
    (126) matrix_access -> ID LSQBRACKET expression . RSQBRACKET LSQBRACKET expression RSQBRACKET
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression

    RSQBRACKET      shift and go to state 230
    ADD             shift and go to state 150
    SUB             shift and go to state 151


state 201

    (62) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET . statements RBRACKET fill_pending_jump
    (63) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET . statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (58) var_assignment -> . matrix_assignment
    (62) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (68) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE
    (129) empty -> .
    (59) simple_assignment -> . identifier ASSIGN push_operator expression
    (60) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (69) repeat -> . REPEAT
    (120) identifier -> . ID

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RBRACKET        reduce using rule 129 (empty -> .)
    REPEAT          shift and go to state 54

    statements                     shift and go to state 231
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39

state 202

    (93) hyper_expression -> hyper_expression AND push_operator . hyper_expression
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    hyper_expression               shift and go to state 232
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 203

    (94) hyper_expression -> hyper_expression OR push_operator . hyper_expression
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    hyper_expression               shift and go to state 233
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 204

    (96) super_expression -> super_expression LTHAN push_operator . super_expression
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    super_expression               shift and go to state 234
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 205

    (97) super_expression -> super_expression GTHAN push_operator . super_expression
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    super_expression               shift and go to state 235
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 206

    (98) super_expression -> super_expression EQUAL push_operator . super_expression
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    super_expression               shift and go to state 236
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 207

    (99) super_expression -> super_expression DIFFERENT super_expression .
    (96) super_expression -> super_expression . LTHAN push_operator super_expression
    (97) super_expression -> super_expression . GTHAN push_operator super_expression
    (98) super_expression -> super_expression . EQUAL push_operator super_expression
    (99) super_expression -> super_expression . DIFFERENT super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 99 (super_expression -> super_expression DIFFERENT super_expression .)
    OR              reduce using rule 99 (super_expression -> super_expression DIFFERENT super_expression .)
    RPAREN          reduce using rule 99 (super_expression -> super_expression DIFFERENT super_expression .)
    COMMA           reduce using rule 99 (super_expression -> super_expression DIFFERENT super_expression .)
    LTHAN           shift and go to state 165
    GTHAN           shift and go to state 166
    EQUAL           shift and go to state 167
    DIFFERENT       shift and go to state 168

  ! LTHAN           [ reduce using rule 99 (super_expression -> super_expression DIFFERENT super_expression .) ]
  ! GTHAN           [ reduce using rule 99 (super_expression -> super_expression DIFFERENT super_expression .) ]
  ! EQUAL           [ reduce using rule 99 (super_expression -> super_expression DIFFERENT super_expression .) ]
  ! DIFFERENT       [ reduce using rule 99 (super_expression -> super_expression DIFFERENT super_expression .) ]


state 208

    (68) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET . statements RBRACKET fill_returning_jump
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (58) var_assignment -> . matrix_assignment
    (62) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (68) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE
    (129) empty -> .
    (59) simple_assignment -> . identifier ASSIGN push_operator expression
    (60) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (69) repeat -> . REPEAT
    (120) identifier -> . ID

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RBRACKET        reduce using rule 129 (empty -> .)
    REPEAT          shift and go to state 54

    repeat                         shift and go to state 39
    statements                     shift and go to state 237
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37

state 209

    (71) function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .

    SEMICOLON       reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    MUL             reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    DIV             reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    ADD             reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    SUB             reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    COMMA           reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    LTHAN           reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    GTHAN           reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    EQUAL           reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    DIFFERENT       reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    AND             reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    OR              reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    RPAREN          reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    RSQBRACKET      reduce using rule 71 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)


state 210

    (74) function_call_rparen -> RPAREN .

    SEMICOLON       reduce using rule 74 (function_call_rparen -> RPAREN .)
    MUL             reduce using rule 74 (function_call_rparen -> RPAREN .)
    DIV             reduce using rule 74 (function_call_rparen -> RPAREN .)
    ADD             reduce using rule 74 (function_call_rparen -> RPAREN .)
    SUB             reduce using rule 74 (function_call_rparen -> RPAREN .)
    COMMA           reduce using rule 74 (function_call_rparen -> RPAREN .)
    LTHAN           reduce using rule 74 (function_call_rparen -> RPAREN .)
    GTHAN           reduce using rule 74 (function_call_rparen -> RPAREN .)
    EQUAL           reduce using rule 74 (function_call_rparen -> RPAREN .)
    DIFFERENT       reduce using rule 74 (function_call_rparen -> RPAREN .)
    AND             reduce using rule 74 (function_call_rparen -> RPAREN .)
    OR              reduce using rule 74 (function_call_rparen -> RPAREN .)
    RPAREN          reduce using rule 74 (function_call_rparen -> RPAREN .)
    RSQBRACKET      reduce using rule 74 (function_call_rparen -> RPAREN .)


state 211

    (61) matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET . expression RSQBRACKET ASSIGN expression
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 238
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 212

    (60) array_assignment -> ID LSQBRACKET expression RSQBRACKET ASSIGN . expression
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 239
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 213

    (75) call_params0 -> hyper_expression handle_call_param call_params1 .

    RPAREN          reduce using rule 75 (call_params0 -> hyper_expression handle_call_param call_params1 .)


state 214

    (77) call_params1 -> COMMA . hyper_expression handle_call_param call_params1
    (93) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (94) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (95) hyper_expression -> . super_expression produce_hyperexp_quad
    (96) super_expression -> . super_expression LTHAN push_operator super_expression
    (97) super_expression -> . super_expression GTHAN push_operator super_expression
    (98) super_expression -> . super_expression EQUAL push_operator super_expression
    (99) super_expression -> . super_expression DIFFERENT super_expression
    (100) super_expression -> . expression produce_superexp_quad
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    hyper_expression               shift and go to state 240
    super_expression               shift and go to state 122
    expression                     shift and go to state 123
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 215

    (78) call_params1 -> empty .

    RPAREN          reduce using rule 78 (call_params1 -> empty .)


state 216

    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET . CONST_INT RSQBRACKET COLON type SEMICOLON

    CONST_INT       shift and go to state 241


state 217

    (17) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON . type SEMICOLON
    (127) type -> . INT
    (128) type -> . FLOAT

    INT             shift and go to state 144
    FLOAT           shift and go to state 145

    type                           shift and go to state 242

state 218

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump . instructions_block RSQBRACKET
    (8) instructions_block -> . INSTRUCTIONS COLON statements
    (9) instructions_block -> . empty
    (129) empty -> .

    INSTRUCTIONS    shift and go to state 11
    RSQBRACKET      reduce using rule 129 (empty -> .)

    instructions_block             shift and go to state 243
    empty                          shift and go to state 12

state 219

    (6) local_vars_block -> LOCALS COLON . var_declarations
    (12) var_declarations -> . VAR simple_declaration var_declarations
    (13) var_declarations -> . VAR array_declaration var_declarations
    (14) var_declarations -> . VAR matrix_declaration var_declarations
    (15) var_declarations -> . empty
    (129) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 129 (empty -> .)
    RSQBRACKET      reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)

    var_declarations               shift and go to state 244
    empty                          shift and go to state 20

state 220

    (37) param -> ID . COLON type

    COLON           shift and go to state 245


state 221

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 . RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 . RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    RPAREN          shift and go to state 246


state 222

    (33) params0 -> param . params1
    (35) params1 -> . COMMA param params1
    (36) params1 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 248
    RPAREN          reduce using rule 129 (empty -> .)

    params1                        shift and go to state 247
    empty                          shift and go to state 249

state 223

    (34) params0 -> empty .

    RPAREN          reduce using rule 34 (params0 -> empty .)


state 224

    (49) write_params1 -> COMMA write_operator . expression produce_write_quad write_params1
    (50) write_params1 -> COMMA write_operator . const_text produce_write_quad write_params1
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (52) const_text -> . CONST_TEXT
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    CONST_TEXT      shift and go to state 105
    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 250
    const_text                     shift and go to state 251
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 225

    (101) expression -> expression ADD push_operator expression .
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    COMMA           reduce using rule 101 (expression -> expression ADD push_operator expression .)
    SEMICOLON       reduce using rule 101 (expression -> expression ADD push_operator expression .)
    LTHAN           reduce using rule 101 (expression -> expression ADD push_operator expression .)
    GTHAN           reduce using rule 101 (expression -> expression ADD push_operator expression .)
    EQUAL           reduce using rule 101 (expression -> expression ADD push_operator expression .)
    DIFFERENT       reduce using rule 101 (expression -> expression ADD push_operator expression .)
    AND             reduce using rule 101 (expression -> expression ADD push_operator expression .)
    OR              reduce using rule 101 (expression -> expression ADD push_operator expression .)
    RPAREN          reduce using rule 101 (expression -> expression ADD push_operator expression .)
    RSQBRACKET      reduce using rule 101 (expression -> expression ADD push_operator expression .)
    ADD             shift and go to state 150
    SUB             shift and go to state 151

  ! ADD             [ reduce using rule 101 (expression -> expression ADD push_operator expression .) ]
  ! SUB             [ reduce using rule 101 (expression -> expression ADD push_operator expression .) ]


state 226

    (102) expression -> expression SUB push_operator expression .
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    COMMA           reduce using rule 102 (expression -> expression SUB push_operator expression .)
    SEMICOLON       reduce using rule 102 (expression -> expression SUB push_operator expression .)
    LTHAN           reduce using rule 102 (expression -> expression SUB push_operator expression .)
    GTHAN           reduce using rule 102 (expression -> expression SUB push_operator expression .)
    EQUAL           reduce using rule 102 (expression -> expression SUB push_operator expression .)
    DIFFERENT       reduce using rule 102 (expression -> expression SUB push_operator expression .)
    AND             reduce using rule 102 (expression -> expression SUB push_operator expression .)
    OR              reduce using rule 102 (expression -> expression SUB push_operator expression .)
    RPAREN          reduce using rule 102 (expression -> expression SUB push_operator expression .)
    RSQBRACKET      reduce using rule 102 (expression -> expression SUB push_operator expression .)
    ADD             shift and go to state 150
    SUB             shift and go to state 151

  ! ADD             [ reduce using rule 102 (expression -> expression SUB push_operator expression .) ]
  ! SUB             [ reduce using rule 102 (expression -> expression SUB push_operator expression .) ]


state 227

    (104) term -> term MUL push_operator term .
    (104) term -> term . MUL push_operator term
    (105) term -> term . DIV push_operator term

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    ADD             reduce using rule 104 (term -> term MUL push_operator term .)
    SUB             reduce using rule 104 (term -> term MUL push_operator term .)
    COMMA           reduce using rule 104 (term -> term MUL push_operator term .)
    SEMICOLON       reduce using rule 104 (term -> term MUL push_operator term .)
    LTHAN           reduce using rule 104 (term -> term MUL push_operator term .)
    GTHAN           reduce using rule 104 (term -> term MUL push_operator term .)
    EQUAL           reduce using rule 104 (term -> term MUL push_operator term .)
    DIFFERENT       reduce using rule 104 (term -> term MUL push_operator term .)
    AND             reduce using rule 104 (term -> term MUL push_operator term .)
    OR              reduce using rule 104 (term -> term MUL push_operator term .)
    RPAREN          reduce using rule 104 (term -> term MUL push_operator term .)
    RSQBRACKET      reduce using rule 104 (term -> term MUL push_operator term .)
    MUL             shift and go to state 154
    DIV             shift and go to state 155

  ! MUL             [ reduce using rule 104 (term -> term MUL push_operator term .) ]
  ! DIV             [ reduce using rule 104 (term -> term MUL push_operator term .) ]


state 228

    (105) term -> term DIV push_operator term .
    (104) term -> term . MUL push_operator term
    (105) term -> term . DIV push_operator term

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    ADD             reduce using rule 105 (term -> term DIV push_operator term .)
    SUB             reduce using rule 105 (term -> term DIV push_operator term .)
    COMMA           reduce using rule 105 (term -> term DIV push_operator term .)
    SEMICOLON       reduce using rule 105 (term -> term DIV push_operator term .)
    LTHAN           reduce using rule 105 (term -> term DIV push_operator term .)
    GTHAN           reduce using rule 105 (term -> term DIV push_operator term .)
    EQUAL           reduce using rule 105 (term -> term DIV push_operator term .)
    DIFFERENT       reduce using rule 105 (term -> term DIV push_operator term .)
    AND             reduce using rule 105 (term -> term DIV push_operator term .)
    OR              reduce using rule 105 (term -> term DIV push_operator term .)
    RPAREN          reduce using rule 105 (term -> term DIV push_operator term .)
    RSQBRACKET      reduce using rule 105 (term -> term DIV push_operator term .)
    MUL             shift and go to state 154
    DIV             shift and go to state 155

  ! MUL             [ reduce using rule 105 (term -> term DIV push_operator term .) ]
  ! DIV             [ reduce using rule 105 (term -> term DIV push_operator term .) ]


state 229

    (115) factor -> LPAREN push_cap expression RPAREN . pop_cap
    (124) pop_cap -> .

    MUL             reduce using rule 124 (pop_cap -> .)
    DIV             reduce using rule 124 (pop_cap -> .)
    ADD             reduce using rule 124 (pop_cap -> .)
    SUB             reduce using rule 124 (pop_cap -> .)
    COMMA           reduce using rule 124 (pop_cap -> .)
    SEMICOLON       reduce using rule 124 (pop_cap -> .)
    LTHAN           reduce using rule 124 (pop_cap -> .)
    GTHAN           reduce using rule 124 (pop_cap -> .)
    EQUAL           reduce using rule 124 (pop_cap -> .)
    DIFFERENT       reduce using rule 124 (pop_cap -> .)
    AND             reduce using rule 124 (pop_cap -> .)
    OR              reduce using rule 124 (pop_cap -> .)
    RPAREN          reduce using rule 124 (pop_cap -> .)
    RSQBRACKET      reduce using rule 124 (pop_cap -> .)

    pop_cap                        shift and go to state 252

state 230

    (125) array_access -> ID LSQBRACKET expression RSQBRACKET .
    (126) matrix_access -> ID LSQBRACKET expression RSQBRACKET . LSQBRACKET expression RSQBRACKET

    MUL             reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    DIV             reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    ADD             reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    SUB             reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    COMMA           reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    SEMICOLON       reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    LTHAN           reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    GTHAN           reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    EQUAL           reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    DIFFERENT       reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    AND             reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    OR              reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    RPAREN          reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    RSQBRACKET      reduce using rule 125 (array_access -> ID LSQBRACKET expression RSQBRACKET .)
    LSQBRACKET      shift and go to state 253


state 231

    (62) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements . RBRACKET fill_pending_jump
    (63) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements . RBRACKET else LBRACKET statements RBRACKET fill_pending_jump

    RBRACKET        shift and go to state 254


state 232

    (93) hyper_expression -> hyper_expression AND push_operator hyper_expression .
    (93) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (94) hyper_expression -> hyper_expression . OR push_operator hyper_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 93 (hyper_expression -> hyper_expression AND push_operator hyper_expression .)
    COMMA           reduce using rule 93 (hyper_expression -> hyper_expression AND push_operator hyper_expression .)
    AND             shift and go to state 161
    OR              shift and go to state 162

  ! AND             [ reduce using rule 93 (hyper_expression -> hyper_expression AND push_operator hyper_expression .) ]
  ! OR              [ reduce using rule 93 (hyper_expression -> hyper_expression AND push_operator hyper_expression .) ]


state 233

    (94) hyper_expression -> hyper_expression OR push_operator hyper_expression .
    (93) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (94) hyper_expression -> hyper_expression . OR push_operator hyper_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 94 (hyper_expression -> hyper_expression OR push_operator hyper_expression .)
    COMMA           reduce using rule 94 (hyper_expression -> hyper_expression OR push_operator hyper_expression .)
    AND             shift and go to state 161
    OR              shift and go to state 162

  ! AND             [ reduce using rule 94 (hyper_expression -> hyper_expression OR push_operator hyper_expression .) ]
  ! OR              [ reduce using rule 94 (hyper_expression -> hyper_expression OR push_operator hyper_expression .) ]


state 234

    (96) super_expression -> super_expression LTHAN push_operator super_expression .
    (96) super_expression -> super_expression . LTHAN push_operator super_expression
    (97) super_expression -> super_expression . GTHAN push_operator super_expression
    (98) super_expression -> super_expression . EQUAL push_operator super_expression
    (99) super_expression -> super_expression . DIFFERENT super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 96 (super_expression -> super_expression LTHAN push_operator super_expression .)
    OR              reduce using rule 96 (super_expression -> super_expression LTHAN push_operator super_expression .)
    RPAREN          reduce using rule 96 (super_expression -> super_expression LTHAN push_operator super_expression .)
    COMMA           reduce using rule 96 (super_expression -> super_expression LTHAN push_operator super_expression .)
    LTHAN           shift and go to state 165
    GTHAN           shift and go to state 166
    EQUAL           shift and go to state 167
    DIFFERENT       shift and go to state 168

  ! LTHAN           [ reduce using rule 96 (super_expression -> super_expression LTHAN push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 96 (super_expression -> super_expression LTHAN push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 96 (super_expression -> super_expression LTHAN push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 96 (super_expression -> super_expression LTHAN push_operator super_expression .) ]


state 235

    (97) super_expression -> super_expression GTHAN push_operator super_expression .
    (96) super_expression -> super_expression . LTHAN push_operator super_expression
    (97) super_expression -> super_expression . GTHAN push_operator super_expression
    (98) super_expression -> super_expression . EQUAL push_operator super_expression
    (99) super_expression -> super_expression . DIFFERENT super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 97 (super_expression -> super_expression GTHAN push_operator super_expression .)
    OR              reduce using rule 97 (super_expression -> super_expression GTHAN push_operator super_expression .)
    RPAREN          reduce using rule 97 (super_expression -> super_expression GTHAN push_operator super_expression .)
    COMMA           reduce using rule 97 (super_expression -> super_expression GTHAN push_operator super_expression .)
    LTHAN           shift and go to state 165
    GTHAN           shift and go to state 166
    EQUAL           shift and go to state 167
    DIFFERENT       shift and go to state 168

  ! LTHAN           [ reduce using rule 97 (super_expression -> super_expression GTHAN push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 97 (super_expression -> super_expression GTHAN push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 97 (super_expression -> super_expression GTHAN push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 97 (super_expression -> super_expression GTHAN push_operator super_expression .) ]


state 236

    (98) super_expression -> super_expression EQUAL push_operator super_expression .
    (96) super_expression -> super_expression . LTHAN push_operator super_expression
    (97) super_expression -> super_expression . GTHAN push_operator super_expression
    (98) super_expression -> super_expression . EQUAL push_operator super_expression
    (99) super_expression -> super_expression . DIFFERENT super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 98 (super_expression -> super_expression EQUAL push_operator super_expression .)
    OR              reduce using rule 98 (super_expression -> super_expression EQUAL push_operator super_expression .)
    RPAREN          reduce using rule 98 (super_expression -> super_expression EQUAL push_operator super_expression .)
    COMMA           reduce using rule 98 (super_expression -> super_expression EQUAL push_operator super_expression .)
    LTHAN           shift and go to state 165
    GTHAN           shift and go to state 166
    EQUAL           shift and go to state 167
    DIFFERENT       shift and go to state 168

  ! LTHAN           [ reduce using rule 98 (super_expression -> super_expression EQUAL push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 98 (super_expression -> super_expression EQUAL push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 98 (super_expression -> super_expression EQUAL push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 98 (super_expression -> super_expression EQUAL push_operator super_expression .) ]


state 237

    (68) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements . RBRACKET fill_returning_jump

    RBRACKET        shift and go to state 255


state 238

    (61) matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression . RSQBRACKET ASSIGN expression
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression

    RSQBRACKET      shift and go to state 256
    ADD             shift and go to state 150
    SUB             shift and go to state 151


state 239

    (60) array_assignment -> ID LSQBRACKET expression RSQBRACKET ASSIGN expression .
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression

    SEMICOLON       reduce using rule 60 (array_assignment -> ID LSQBRACKET expression RSQBRACKET ASSIGN expression .)
    ADD             shift and go to state 150
    SUB             shift and go to state 151


state 240

    (77) call_params1 -> COMMA hyper_expression . handle_call_param call_params1
    (93) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (94) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (79) handle_call_param -> .

    AND             shift and go to state 161
    OR              shift and go to state 162
    COMMA           reduce using rule 79 (handle_call_param -> .)
    RPAREN          reduce using rule 79 (handle_call_param -> .)

    handle_call_param              shift and go to state 257

state 241

    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT . RSQBRACKET COLON type SEMICOLON

    RSQBRACKET      shift and go to state 258


state 242

    (17) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type . SEMICOLON

    SEMICOLON       shift and go to state 259


state 243

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block . RSQBRACKET

    RSQBRACKET      shift and go to state 260


state 244

    (6) local_vars_block -> LOCALS COLON var_declarations .

    INSTRUCTIONS    reduce using rule 6 (local_vars_block -> LOCALS COLON var_declarations .)
    RSQBRACKET      reduce using rule 6 (local_vars_block -> LOCALS COLON var_declarations .)
    RBRACKET        reduce using rule 6 (local_vars_block -> LOCALS COLON var_declarations .)
    RETURN          reduce using rule 6 (local_vars_block -> LOCALS COLON var_declarations .)


state 245

    (37) param -> ID COLON . type
    (127) type -> . INT
    (128) type -> . FLOAT

    INT             shift and go to state 144
    FLOAT           shift and go to state 145

    type                           shift and go to state 261

state 246

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN . COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN . COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    COLON           shift and go to state 262


state 247

    (33) params0 -> param params1 .

    RPAREN          reduce using rule 33 (params0 -> param params1 .)


state 248

    (35) params1 -> COMMA . param params1
    (37) param -> . ID COLON type

    ID              shift and go to state 220

    param                          shift and go to state 263

state 249

    (36) params1 -> empty .

    RPAREN          reduce using rule 36 (params1 -> empty .)


state 250

    (49) write_params1 -> COMMA write_operator expression . produce_write_quad write_params1
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression
    (54) produce_write_quad -> .

    ADD             shift and go to state 150
    SUB             shift and go to state 151
    COMMA           reduce using rule 54 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 54 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 264

state 251

    (50) write_params1 -> COMMA write_operator const_text . produce_write_quad write_params1
    (54) produce_write_quad -> .

    COMMA           reduce using rule 54 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 54 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 265

state 252

    (115) factor -> LPAREN push_cap expression RPAREN pop_cap .

    MUL             reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    DIV             reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    ADD             reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    SUB             reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    COMMA           reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    SEMICOLON       reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    LTHAN           reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    GTHAN           reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    EQUAL           reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    DIFFERENT       reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    AND             reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    OR              reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    RPAREN          reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    RSQBRACKET      reduce using rule 115 (factor -> LPAREN push_cap expression RPAREN pop_cap .)


state 253

    (126) matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET . expression RSQBRACKET
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 266
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 254

    (62) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET . fill_pending_jump
    (63) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET . else LBRACKET statements RBRACKET fill_pending_jump
    (66) fill_pending_jump -> .
    (67) else -> . ELSE

    WRITE           reduce using rule 66 (fill_pending_jump -> .)
    READ            reduce using rule 66 (fill_pending_jump -> .)
    IF              reduce using rule 66 (fill_pending_jump -> .)
    ID              reduce using rule 66 (fill_pending_jump -> .)
    MEAN            reduce using rule 66 (fill_pending_jump -> .)
    MEDIAN          reduce using rule 66 (fill_pending_jump -> .)
    MODE            reduce using rule 66 (fill_pending_jump -> .)
    STD             reduce using rule 66 (fill_pending_jump -> .)
    KURTOSIS        reduce using rule 66 (fill_pending_jump -> .)
    PLOT            reduce using rule 66 (fill_pending_jump -> .)
    DPLOT           reduce using rule 66 (fill_pending_jump -> .)
    VARIANCE        reduce using rule 66 (fill_pending_jump -> .)
    SIMMETRY        reduce using rule 66 (fill_pending_jump -> .)
    CORRELATION     reduce using rule 66 (fill_pending_jump -> .)
    DFREAD          reduce using rule 66 (fill_pending_jump -> .)
    HOMERO          reduce using rule 66 (fill_pending_jump -> .)
    MARGE           reduce using rule 66 (fill_pending_jump -> .)
    REPEAT          reduce using rule 66 (fill_pending_jump -> .)
    PROCEDURES      reduce using rule 66 (fill_pending_jump -> .)
    BEGIN           reduce using rule 66 (fill_pending_jump -> .)
    RSQBRACKET      reduce using rule 66 (fill_pending_jump -> .)
    RBRACKET        reduce using rule 66 (fill_pending_jump -> .)
    RETURN          reduce using rule 66 (fill_pending_jump -> .)
    ELSE            shift and go to state 269

    fill_pending_jump              shift and go to state 267
    else                           shift and go to state 268

state 255

    (68) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET . fill_returning_jump
    (70) fill_returning_jump -> .

    WRITE           reduce using rule 70 (fill_returning_jump -> .)
    READ            reduce using rule 70 (fill_returning_jump -> .)
    IF              reduce using rule 70 (fill_returning_jump -> .)
    ID              reduce using rule 70 (fill_returning_jump -> .)
    MEAN            reduce using rule 70 (fill_returning_jump -> .)
    MEDIAN          reduce using rule 70 (fill_returning_jump -> .)
    MODE            reduce using rule 70 (fill_returning_jump -> .)
    STD             reduce using rule 70 (fill_returning_jump -> .)
    KURTOSIS        reduce using rule 70 (fill_returning_jump -> .)
    PLOT            reduce using rule 70 (fill_returning_jump -> .)
    DPLOT           reduce using rule 70 (fill_returning_jump -> .)
    VARIANCE        reduce using rule 70 (fill_returning_jump -> .)
    SIMMETRY        reduce using rule 70 (fill_returning_jump -> .)
    CORRELATION     reduce using rule 70 (fill_returning_jump -> .)
    DFREAD          reduce using rule 70 (fill_returning_jump -> .)
    HOMERO          reduce using rule 70 (fill_returning_jump -> .)
    MARGE           reduce using rule 70 (fill_returning_jump -> .)
    REPEAT          reduce using rule 70 (fill_returning_jump -> .)
    PROCEDURES      reduce using rule 70 (fill_returning_jump -> .)
    BEGIN           reduce using rule 70 (fill_returning_jump -> .)
    RSQBRACKET      reduce using rule 70 (fill_returning_jump -> .)
    RBRACKET        reduce using rule 70 (fill_returning_jump -> .)
    RETURN          reduce using rule 70 (fill_returning_jump -> .)

    fill_returning_jump            shift and go to state 270

state 256

    (61) matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET . ASSIGN expression

    ASSIGN          shift and go to state 271


state 257

    (77) call_params1 -> COMMA hyper_expression handle_call_param . call_params1
    (77) call_params1 -> . COMMA hyper_expression handle_call_param call_params1
    (78) call_params1 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 214
    RPAREN          reduce using rule 129 (empty -> .)

    call_params1                   shift and go to state 272
    empty                          shift and go to state 215

state 258

    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET . COLON type SEMICOLON

    COLON           shift and go to state 273


state 259

    (17) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .

    VAR             reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    INSTRUCTIONS    reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    PROCEDURES      reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    BEGIN           reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RSQBRACKET      reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RBRACKET        reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RETURN          reduce using rule 17 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)


state 260

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET .

    $end            reduce using rule 1 (routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET .)


state 261

    (37) param -> ID COLON type .

    COMMA           reduce using rule 37 (param -> ID COLON type .)
    RPAREN          reduce using rule 37 (param -> ID COLON type .)


state 262

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON . VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON . func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (32) func_type -> . type
    (127) type -> . INT
    (128) type -> . FLOAT

    VOID            shift and go to state 274
    INT             shift and go to state 144
    FLOAT           shift and go to state 145

    func_type                      shift and go to state 275
    type                           shift and go to state 276

state 263

    (35) params1 -> COMMA param . params1
    (35) params1 -> . COMMA param params1
    (36) params1 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 248
    RPAREN          reduce using rule 129 (empty -> .)

    params1                        shift and go to state 277
    empty                          shift and go to state 249

state 264

    (49) write_params1 -> COMMA write_operator expression produce_write_quad . write_params1
    (49) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (50) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (51) write_params1 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 192
    SEMICOLON       reduce using rule 129 (empty -> .)

    write_params1                  shift and go to state 278
    empty                          shift and go to state 193

state 265

    (50) write_params1 -> COMMA write_operator const_text produce_write_quad . write_params1
    (49) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (50) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (51) write_params1 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 192
    SEMICOLON       reduce using rule 129 (empty -> .)

    write_params1                  shift and go to state 279
    empty                          shift and go to state 193

state 266

    (126) matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression . RSQBRACKET
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression

    RSQBRACKET      shift and go to state 280
    ADD             shift and go to state 150
    SUB             shift and go to state 151


state 267

    (62) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .

    WRITE           reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    READ            reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    IF              reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    ID              reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MEAN            reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MEDIAN          reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MODE            reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    STD             reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    KURTOSIS        reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    PLOT            reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    DPLOT           reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    VARIANCE        reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    SIMMETRY        reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    CORRELATION     reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    DFREAD          reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    HOMERO          reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MARGE           reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    REPEAT          reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    PROCEDURES      reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    BEGIN           reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    RSQBRACKET      reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    RBRACKET        reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    RETURN          reduce using rule 62 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)


state 268

    (63) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else . LBRACKET statements RBRACKET fill_pending_jump

    LBRACKET        shift and go to state 281


state 269

    (67) else -> ELSE .

    LBRACKET        reduce using rule 67 (else -> ELSE .)


state 270

    (68) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .

    WRITE           reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    READ            reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    IF              reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    ID              reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MEAN            reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MEDIAN          reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MODE            reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    STD             reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    KURTOSIS        reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    PLOT            reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    DPLOT           reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    VARIANCE        reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    SIMMETRY        reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    CORRELATION     reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    DFREAD          reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    HOMERO          reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MARGE           reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    REPEAT          reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    PROCEDURES      reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    BEGIN           reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    RSQBRACKET      reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    RBRACKET        reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    RETURN          reduce using rule 68 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)


state 271

    (61) matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN . expression
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 282
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 272

    (77) call_params1 -> COMMA hyper_expression handle_call_param call_params1 .

    RPAREN          reduce using rule 77 (call_params1 -> COMMA hyper_expression handle_call_param call_params1 .)


state 273

    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON . type SEMICOLON
    (127) type -> . INT
    (128) type -> . FLOAT

    INT             shift and go to state 144
    FLOAT           shift and go to state 145

    type                           shift and go to state 283

state 274

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID . set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (29) set_return_type -> .

    LBRACKET        reduce using rule 29 (set_return_type -> .)

    set_return_type                shift and go to state 284

state 275

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type . set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (29) set_return_type -> .

    LBRACKET        reduce using rule 29 (set_return_type -> .)

    set_return_type                shift and go to state 285

state 276

    (32) func_type -> type .

    LBRACKET        reduce using rule 32 (func_type -> type .)


state 277

    (35) params1 -> COMMA param params1 .

    RPAREN          reduce using rule 35 (params1 -> COMMA param params1 .)


state 278

    (49) write_params1 -> COMMA write_operator expression produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 49 (write_params1 -> COMMA write_operator expression produce_write_quad write_params1 .)


state 279

    (50) write_params1 -> COMMA write_operator const_text produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 50 (write_params1 -> COMMA write_operator const_text produce_write_quad write_params1 .)


state 280

    (126) matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .

    MUL             reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    DIV             reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    ADD             reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    SUB             reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    COMMA           reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    SEMICOLON       reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    LTHAN           reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    GTHAN           reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    EQUAL           reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    DIFFERENT       reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    AND             reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    OR              reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    RPAREN          reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)
    RSQBRACKET      reduce using rule 126 (matrix_access -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET .)


state 281

    (63) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET . statements RBRACKET fill_pending_jump
    (38) statements -> . write SEMICOLON statements
    (39) statements -> . read SEMICOLON statements
    (40) statements -> . var_assignment SEMICOLON statements
    (41) statements -> . condition statements
    (42) statements -> . loop statements
    (43) statements -> . function_call SEMICOLON statements
    (44) statements -> . special_function_call SEMICOLON statements
    (45) statements -> . empty
    (46) write -> . WRITE write_params0
    (55) read -> . READ push_operator identifier
    (56) var_assignment -> . simple_assignment
    (57) var_assignment -> . array_assignment
    (58) var_assignment -> . matrix_assignment
    (62) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (63) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (68) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE
    (129) empty -> .
    (59) simple_assignment -> . identifier ASSIGN push_operator expression
    (60) array_assignment -> . ID LSQBRACKET expression RSQBRACKET ASSIGN expression
    (61) matrix_assignment -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression
    (69) repeat -> . REPEAT
    (120) identifier -> . ID

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RBRACKET        reduce using rule 129 (empty -> .)
    REPEAT          shift and go to state 54

    statements                     shift and go to state 286
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39

state 282

    (61) matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression .
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression

    SEMICOLON       reduce using rule 61 (matrix_assignment -> ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET ASSIGN expression .)
    ADD             shift and go to state 150
    SUB             shift and go to state 151


state 283

    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type . SEMICOLON

    SEMICOLON       shift and go to state 287


state 284

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type . LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations

    LBRACKET        shift and go to state 288


state 285

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type . LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations

    LBRACKET        shift and go to state 289


state 286

    (63) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements . RBRACKET fill_pending_jump

    RBRACKET        shift and go to state 290


state 287

    (18) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .

    VAR             reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    INSTRUCTIONS    reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    PROCEDURES      reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    BEGIN           reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RSQBRACKET      reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RBRACKET        reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RETURN          reduce using rule 18 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)


state 288

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET . local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (6) local_vars_block -> . LOCALS COLON var_declarations
    (7) local_vars_block -> . empty
    (129) empty -> .

    LOCALS          shift and go to state 188
    INSTRUCTIONS    reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    local_vars_block               shift and go to state 291
    empty                          shift and go to state 189

state 289

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET . local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (6) local_vars_block -> . LOCALS COLON var_declarations
    (7) local_vars_block -> . empty
    (129) empty -> .

    LOCALS          shift and go to state 188
    INSTRUCTIONS    reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)

    local_vars_block               shift and go to state 292
    empty                          shift and go to state 189

state 290

    (63) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET . fill_pending_jump
    (66) fill_pending_jump -> .

    WRITE           reduce using rule 66 (fill_pending_jump -> .)
    READ            reduce using rule 66 (fill_pending_jump -> .)
    IF              reduce using rule 66 (fill_pending_jump -> .)
    ID              reduce using rule 66 (fill_pending_jump -> .)
    MEAN            reduce using rule 66 (fill_pending_jump -> .)
    MEDIAN          reduce using rule 66 (fill_pending_jump -> .)
    MODE            reduce using rule 66 (fill_pending_jump -> .)
    STD             reduce using rule 66 (fill_pending_jump -> .)
    KURTOSIS        reduce using rule 66 (fill_pending_jump -> .)
    PLOT            reduce using rule 66 (fill_pending_jump -> .)
    DPLOT           reduce using rule 66 (fill_pending_jump -> .)
    VARIANCE        reduce using rule 66 (fill_pending_jump -> .)
    SIMMETRY        reduce using rule 66 (fill_pending_jump -> .)
    CORRELATION     reduce using rule 66 (fill_pending_jump -> .)
    DFREAD          reduce using rule 66 (fill_pending_jump -> .)
    HOMERO          reduce using rule 66 (fill_pending_jump -> .)
    MARGE           reduce using rule 66 (fill_pending_jump -> .)
    REPEAT          reduce using rule 66 (fill_pending_jump -> .)
    PROCEDURES      reduce using rule 66 (fill_pending_jump -> .)
    BEGIN           reduce using rule 66 (fill_pending_jump -> .)
    RSQBRACKET      reduce using rule 66 (fill_pending_jump -> .)
    RBRACKET        reduce using rule 66 (fill_pending_jump -> .)
    RETURN          reduce using rule 66 (fill_pending_jump -> .)

    fill_pending_jump              shift and go to state 293

state 291

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block . store_curr_ip instructions_block function_rbracket function_declarations
    (28) store_curr_ip -> .

    INSTRUCTIONS    reduce using rule 28 (store_curr_ip -> .)
    RBRACKET        reduce using rule 28 (store_curr_ip -> .)

    store_curr_ip                  shift and go to state 294

state 292

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block . store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (28) store_curr_ip -> .

    INSTRUCTIONS    reduce using rule 28 (store_curr_ip -> .)
    RETURN          reduce using rule 28 (store_curr_ip -> .)

    store_curr_ip                  shift and go to state 295

state 293

    (63) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .

    WRITE           reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    READ            reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    IF              reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    ID              reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MEAN            reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MEDIAN          reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MODE            reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    STD             reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    KURTOSIS        reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    PLOT            reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    DPLOT           reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    VARIANCE        reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    SIMMETRY        reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    CORRELATION     reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    DFREAD          reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    HOMERO          reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MARGE           reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    REPEAT          reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    PROCEDURES      reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    BEGIN           reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    RSQBRACKET      reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    RBRACKET        reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    RETURN          reduce using rule 63 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)


state 294

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip . instructions_block function_rbracket function_declarations
    (8) instructions_block -> . INSTRUCTIONS COLON statements
    (9) instructions_block -> . empty
    (129) empty -> .

    INSTRUCTIONS    shift and go to state 11
    RBRACKET        reduce using rule 129 (empty -> .)

    instructions_block             shift and go to state 296
    empty                          shift and go to state 12

state 295

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip . instructions_block return expression return_semicolon function_rbracket function_declarations
    (8) instructions_block -> . INSTRUCTIONS COLON statements
    (9) instructions_block -> . empty
    (129) empty -> .

    INSTRUCTIONS    shift and go to state 11
    RETURN          reduce using rule 129 (empty -> .)

    instructions_block             shift and go to state 297
    empty                          shift and go to state 12

state 296

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block . function_rbracket function_declarations
    (26) function_rbracket -> . RBRACKET

    RBRACKET        shift and go to state 299

    function_rbracket              shift and go to state 298

state 297

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block . return expression return_semicolon function_rbracket function_declarations
    (30) return -> . RETURN

    RETURN          shift and go to state 301

    return                         shift and go to state 300

state 298

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket . function_declarations
    (23) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (25) function_declarations -> . empty
    (129) empty -> .

    PROC            shift and go to state 61
    BEGIN           reduce using rule 129 (empty -> .)

    function_declarations          shift and go to state 302
    empty                          shift and go to state 62

state 299

    (26) function_rbracket -> RBRACKET .

    PROC            reduce using rule 26 (function_rbracket -> RBRACKET .)
    BEGIN           reduce using rule 26 (function_rbracket -> RBRACKET .)


state 300

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return . expression return_semicolon function_rbracket function_declarations
    (101) expression -> . expression ADD push_operator expression
    (102) expression -> . expression SUB push_operator expression
    (103) expression -> . term produce_exp_quad
    (104) term -> . term MUL push_operator term
    (105) term -> . term DIV push_operator term
    (106) term -> . factor produce_term_quad
    (112) factor -> . identifier
    (113) factor -> . const_int
    (114) factor -> . const_float
    (115) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (116) factor -> . array_access
    (117) factor -> . matrix_access
    (118) factor -> . function_call
    (119) factor -> . special_function_call
    (120) identifier -> . ID
    (121) const_int -> . CONST_INT
    (122) const_float -> . CONST_FLOAT
    (125) array_access -> . ID LSQBRACKET expression RSQBRACKET
    (126) matrix_access -> . ID LSQBRACKET expression RSQBRACKET LSQBRACKET expression RSQBRACKET
    (71) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (80) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (81) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (82) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (83) special_function_call -> . STD LPAREN call_params0 RPAREN
    (84) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (85) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (86) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (87) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (88) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (89) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (90) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (91) special_function_call -> . HOMERO
    (92) special_function_call -> . MARGE

    LPAREN          shift and go to state 110
    ID              shift and go to state 115
    CONST_INT       shift and go to state 116
    CONST_FLOAT     shift and go to state 117
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 303
    term                           shift and go to state 104
    factor                         shift and go to state 106
    identifier                     shift and go to state 107
    const_int                      shift and go to state 108
    const_float                    shift and go to state 109
    array_access                   shift and go to state 111
    matrix_access                  shift and go to state 112
    function_call                  shift and go to state 113
    special_function_call          shift and go to state 114

state 301

    (30) return -> RETURN .

    LPAREN          reduce using rule 30 (return -> RETURN .)
    ID              reduce using rule 30 (return -> RETURN .)
    CONST_INT       reduce using rule 30 (return -> RETURN .)
    CONST_FLOAT     reduce using rule 30 (return -> RETURN .)
    MEAN            reduce using rule 30 (return -> RETURN .)
    MEDIAN          reduce using rule 30 (return -> RETURN .)
    MODE            reduce using rule 30 (return -> RETURN .)
    STD             reduce using rule 30 (return -> RETURN .)
    KURTOSIS        reduce using rule 30 (return -> RETURN .)
    PLOT            reduce using rule 30 (return -> RETURN .)
    DPLOT           reduce using rule 30 (return -> RETURN .)
    VARIANCE        reduce using rule 30 (return -> RETURN .)
    SIMMETRY        reduce using rule 30 (return -> RETURN .)
    CORRELATION     reduce using rule 30 (return -> RETURN .)
    DFREAD          reduce using rule 30 (return -> RETURN .)
    HOMERO          reduce using rule 30 (return -> RETURN .)
    MARGE           reduce using rule 30 (return -> RETURN .)


state 302

    (23) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations .

    BEGIN           reduce using rule 23 (function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations .)


state 303

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression . return_semicolon function_rbracket function_declarations
    (101) expression -> expression . ADD push_operator expression
    (102) expression -> expression . SUB push_operator expression
    (31) return_semicolon -> . SEMICOLON

    ADD             shift and go to state 150
    SUB             shift and go to state 151
    SEMICOLON       shift and go to state 305

    return_semicolon               shift and go to state 304

state 304

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon . function_rbracket function_declarations
    (26) function_rbracket -> . RBRACKET

    RBRACKET        shift and go to state 299

    function_rbracket              shift and go to state 306

state 305

    (31) return_semicolon -> SEMICOLON .

    RBRACKET        reduce using rule 31 (return_semicolon -> SEMICOLON .)


state 306

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket . function_declarations
    (23) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (24) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations
    (25) function_declarations -> . empty
    (129) empty -> .

    PROC            shift and go to state 61
    BEGIN           reduce using rule 129 (empty -> .)

    function_declarations          shift and go to state 307
    empty                          shift and go to state 62

state 307

    (24) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations .

    BEGIN           reduce using rule 24 (function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip instructions_block return expression return_semicolon function_rbracket function_declarations .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LTHAN in state 207 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 207 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 207 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 207 resolved as shift
WARNING: shift/reduce conflict for ADD in state 225 resolved as shift
WARNING: shift/reduce conflict for SUB in state 225 resolved as shift
WARNING: shift/reduce conflict for ADD in state 226 resolved as shift
WARNING: shift/reduce conflict for SUB in state 226 resolved as shift
WARNING: shift/reduce conflict for MUL in state 227 resolved as shift
WARNING: shift/reduce conflict for DIV in state 227 resolved as shift
WARNING: shift/reduce conflict for MUL in state 228 resolved as shift
WARNING: shift/reduce conflict for DIV in state 228 resolved as shift
WARNING: shift/reduce conflict for AND in state 232 resolved as shift
WARNING: shift/reduce conflict for OR in state 232 resolved as shift
WARNING: shift/reduce conflict for AND in state 233 resolved as shift
WARNING: shift/reduce conflict for OR in state 233 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 234 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 234 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 234 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 234 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 235 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 235 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 235 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 235 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 236 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 236 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 236 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 236 resolved as shift
