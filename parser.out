Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT

Grammar

Rule 0     S' -> routine
Rule 1     routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
Rule 2     routine_init -> ROUTINE
Rule 3     fill_main_jump -> <empty>
Rule 4     global_vars_block -> GLOBALS COLON var_declarations
Rule 5     global_vars_block -> empty
Rule 6     local_vars_block -> LOCALS COLON var_declarations
Rule 7     local_vars_block -> empty
Rule 8     instructions_block -> INSTRUCTIONS COLON statements
Rule 9     instructions_block -> empty
Rule 10    proc_instructions_block -> INSTRUCTIONS COLON proc_statements
Rule 11    proc_instructions_block -> empty
Rule 12    proc_statements -> write SEMICOLON proc_statements
Rule 13    proc_statements -> read SEMICOLON proc_statements
Rule 14    proc_statements -> var_assignment SEMICOLON proc_statements
Rule 15    proc_statements -> proc_condition proc_statements
Rule 16    proc_statements -> proc_loop proc_statements
Rule 17    proc_statements -> function_call SEMICOLON proc_statements
Rule 18    proc_statements -> special_function_call SEMICOLON proc_statements
Rule 19    proc_statements -> return expression return_semicolon proc_statements
Rule 20    proc_statements -> empty
Rule 21    global_scope_init -> <empty>
Rule 22    local_scope_init -> <empty>
Rule 23    var_declarations -> VAR simple_declaration var_declarations
Rule 24    var_declarations -> VAR array_declaration var_declarations
Rule 25    var_declarations -> VAR matrix_declaration var_declarations
Rule 26    var_declarations -> empty
Rule 27    simple_declaration -> ID COLON var_type SEMICOLON
Rule 28    array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
Rule 29    matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
Rule 30    var_type -> type
Rule 31    var_type -> DF
Rule 32    function_block -> PROCEDURES COLON function_declarations
Rule 33    function_block -> empty
Rule 34    function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
Rule 35    function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations
Rule 36    function_declarations -> empty
Rule 37    function_rbracket -> RBRACKET
Rule 38    proc_scope_init -> <empty>
Rule 39    store_curr_ip -> <empty>
Rule 40    set_return_type -> <empty>
Rule 41    return -> RETURN
Rule 42    return_semicolon -> SEMICOLON
Rule 43    func_type -> type
Rule 44    params0 -> param params1
Rule 45    params0 -> empty
Rule 46    params1 -> COMMA param params1
Rule 47    params1 -> empty
Rule 48    param -> ID COLON type
Rule 49    statements -> write SEMICOLON statements
Rule 50    statements -> read SEMICOLON statements
Rule 51    statements -> var_assignment SEMICOLON statements
Rule 52    statements -> condition statements
Rule 53    statements -> loop statements
Rule 54    statements -> function_call SEMICOLON statements
Rule 55    statements -> special_function_call SEMICOLON statements
Rule 56    statements -> empty
Rule 57    write -> WRITE write_params0
Rule 58    write_params0 -> write_operator expression produce_write_quad write_params1
Rule 59    write_params0 -> write_operator const_text produce_write_quad write_params1
Rule 60    write_params1 -> COMMA write_operator expression produce_write_quad write_params1
Rule 61    write_params1 -> COMMA write_operator const_text produce_write_quad write_params1
Rule 62    write_params1 -> empty
Rule 63    const_text -> CONST_TEXT
Rule 64    write_operator -> <empty>
Rule 65    produce_write_quad -> <empty>
Rule 66    read -> READ push_operator identifier
Rule 67    var_assignment -> simple_assignment
Rule 68    var_assignment -> array_assignment
Rule 69    var_assignment -> matrix_assignment
Rule 70    simple_assignment -> identifier ASSIGN push_operator expression
Rule 71    array_assignment -> array_access ASSIGN push_operator expression
Rule 72    matrix_assignment -> matrix_access ASSIGN push_operator expression
Rule 73    condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
Rule 74    condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
Rule 75    proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
Rule 76    proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
Rule 77    cond_lparen -> LPAREN
Rule 78    cond_rparen -> RPAREN
Rule 79    fill_pending_jump -> <empty>
Rule 80    else -> ELSE
Rule 81    loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
Rule 82    proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
Rule 83    repeat -> REPEAT
Rule 84    fill_returning_jump -> <empty>
Rule 85    function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen
Rule 86    function_call_check -> <empty>
Rule 87    function_call_lparen -> LPAREN
Rule 88    function_call_rparen -> RPAREN
Rule 89    call_params0 -> hyper_expression handle_call_param call_params1
Rule 90    call_params0 -> empty
Rule 91    call_params1 -> COMMA hyper_expression handle_call_param call_params1
Rule 92    call_params1 -> empty
Rule 93    handle_call_param -> <empty>
Rule 94    special_function_call -> MEAN LPAREN call_params0 RPAREN
Rule 95    special_function_call -> MEDIAN LPAREN call_params0 RPAREN
Rule 96    special_function_call -> MODE LPAREN call_params0 RPAREN
Rule 97    special_function_call -> STD LPAREN call_params0 RPAREN
Rule 98    special_function_call -> KURTOSIS LPAREN call_params0 RPAREN
Rule 99    special_function_call -> PLOT LPAREN call_params0 RPAREN
Rule 100   special_function_call -> DPLOT LPAREN call_params0 RPAREN
Rule 101   special_function_call -> VARIANCE LPAREN call_params0 RPAREN
Rule 102   special_function_call -> SIMMETRY LPAREN call_params0 RPAREN
Rule 103   special_function_call -> CORRELATION LPAREN call_params0 RPAREN
Rule 104   special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN
Rule 105   special_function_call -> HOMERO
Rule 106   special_function_call -> MARGE
Rule 107   hyper_expression -> hyper_expression AND push_operator hyper_expression
Rule 108   hyper_expression -> hyper_expression OR push_operator hyper_expression
Rule 109   hyper_expression -> super_expression produce_hyperexp_quad
Rule 110   super_expression -> super_expression LTHAN push_operator super_expression
Rule 111   super_expression -> super_expression GTHAN push_operator super_expression
Rule 112   super_expression -> super_expression EQUAL push_operator super_expression
Rule 113   super_expression -> super_expression DIFFERENT push_operator super_expression
Rule 114   super_expression -> expression produce_superexp_quad
Rule 115   expression -> expression ADD push_operator expression
Rule 116   expression -> expression SUB push_operator expression
Rule 117   expression -> term produce_exp_quad
Rule 118   term -> term MUL push_operator term
Rule 119   term -> term DIV push_operator term
Rule 120   term -> factor produce_term_quad
Rule 121   push_operator -> <empty>
Rule 122   produce_hyperexp_quad -> <empty>
Rule 123   produce_superexp_quad -> <empty>
Rule 124   produce_exp_quad -> <empty>
Rule 125   produce_term_quad -> <empty>
Rule 126   factor -> identifier
Rule 127   factor -> const_int
Rule 128   factor -> const_float
Rule 129   factor -> LPAREN push_cap expression RPAREN pop_cap
Rule 130   factor -> array_access
Rule 131   factor -> matrix_access
Rule 132   factor -> function_call
Rule 133   factor -> special_function_call
Rule 134   identifier -> ID
Rule 135   const_int -> CONST_INT
Rule 136   const_float -> CONST_FLOAT
Rule 137   push_cap -> <empty>
Rule 138   pop_cap -> <empty>
Rule 139   array_access -> identifier lsqbracket expression array_rsqbracket
Rule 140   matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
Rule 141   lsqbracket -> LSQBRACKET
Rule 142   array_rsqbracket -> RSQBRACKET
Rule 143   matrix_rsqbracket_1 -> RSQBRACKET
Rule 144   matrix_lsqbracket_2 -> LSQBRACKET
Rule 145   matrix_rsqbracket_2 -> RSQBRACKET
Rule 146   type -> INT
Rule 147   type -> FLOAT
Rule 148   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 115
AND                  : 107
ASSIGN               : 70 71 72
BEGIN                : 1
COLON                : 1 4 6 8 10 27 28 29 32 34 35 48
COMMA                : 46 60 61 91
CONST_FLOAT          : 136
CONST_INT            : 28 29 29 135
CONST_TEXT           : 63 104
CORRELATION          : 103
DF                   : 31
DFREAD               : 104
DIFFERENT            : 113
DIV                  : 119
DPLOT                : 100
ELSE                 : 80
EQUAL                : 112
FLOAT                : 147
GLOBALS              : 4
GTHAN                : 111
HOMERO               : 105
ID                   : 1 27 28 29 34 35 48 85 134
IF                   : 73 74 75 76
INSTRUCTIONS         : 8 10
INT                  : 146
KURTOSIS             : 98
LBRACKET             : 34 35 73 74 74 75 76 76 81 82
LOCALS               : 6
LPAREN               : 34 35 77 87 94 95 96 97 98 99 100 101 102 103 104 129
LSQBRACKET           : 1 28 29 29 141 144
LTHAN                : 110
MARGE                : 106
MEAN                 : 94
MEDIAN               : 95
MODE                 : 96
MUL                  : 118
NOT                  : 
OR                   : 108
PLOT                 : 99
PROC                 : 34 35
PROCEDURES           : 32
RBRACKET             : 35 37 73 74 74 75 76 76 81 82
READ                 : 66
REPEAT               : 83
RETURN               : 41
ROUTINE              : 2
RPAREN               : 34 35 78 88 94 95 96 97 98 99 100 101 102 103 104 129
RSQBRACKET           : 1 28 29 29 142 143 145
SEMICOLON            : 1 12 13 14 17 18 27 28 29 42 49 50 51 54 55
SIMMETRY             : 102
STD                  : 97
SUB                  : 116
VAR                  : 23 24 25
VARIANCE             : 101
VOID                 : 34
WRITE                : 57
error                : 

Nonterminals, with rules where they appear

array_access         : 71 130
array_assignment     : 68
array_declaration    : 24
array_rsqbracket     : 139
call_params0         : 85 94 95 96 97 98 99 100 101 102 103
call_params1         : 89 91
cond_lparen          : 73 74 75 76 81 82
cond_rparen          : 73 74 75 76 81 82
condition            : 52
const_float          : 128
const_int            : 127
const_text           : 59 61
else                 : 74 76
empty                : 5 7 9 11 20 26 33 36 45 47 56 62 90 92
expression           : 19 58 60 70 71 72 114 115 115 116 116 129 139 140 140
factor               : 120
fill_main_jump       : 1
fill_pending_jump    : 73 74 75 76
fill_returning_jump  : 81 82
func_type            : 35
function_block       : 1
function_call        : 17 54 132
function_call_check  : 85
function_call_lparen : 85
function_call_rparen : 85
function_declarations : 32 34 35
function_rbracket    : 34
global_scope_init    : 1
global_vars_block    : 1
handle_call_param    : 89 91
hyper_expression     : 73 74 75 76 81 82 89 91 107 107 108 108
identifier           : 66 70 126 139 140
instructions_block   : 1 1 34
local_scope_init     : 1
local_vars_block     : 1 34 35
loop                 : 53
lsqbracket           : 139 140
matrix_access        : 72 131
matrix_assignment    : 69
matrix_declaration   : 25
matrix_lsqbracket_2  : 140
matrix_rsqbracket_1  : 140
matrix_rsqbracket_2  : 140
param                : 44 46
params0              : 34 35
params1              : 44 46
pop_cap              : 129
proc_condition       : 15
proc_instructions_block : 35
proc_loop            : 16
proc_scope_init      : 34 35
proc_statements      : 10 12 13 14 15 16 17 18 19 75 76 76 82
produce_exp_quad     : 117
produce_hyperexp_quad : 109
produce_superexp_quad : 114
produce_term_quad    : 120
produce_write_quad   : 58 59 60 61
push_cap             : 129
push_operator        : 66 70 71 72 107 108 110 111 112 113 115 116 118 119
read                 : 13 50
repeat               : 81 82
return               : 19
return_semicolon     : 19
routine              : 0
routine_init         : 1
set_return_type      : 34 35
simple_assignment    : 67
simple_declaration   : 23
special_function_call : 18 55 133
statements           : 8 49 50 51 52 53 54 55 73 74 74 81
store_curr_ip        : 34 35
super_expression     : 109 110 110 111 111 112 112 113 113
term                 : 117 118 118 119 119
type                 : 28 29 30 43 48
var_assignment       : 14 51
var_declarations     : 4 6 23 24 25
var_type             : 27
write                : 12 49
write_operator       : 58 59 60 61
write_params0        : 57
write_params1        : 58 59 60 61

Parsing method: LALR

state 0

    (0) S' -> . routine
    (1) routine -> . routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (2) routine_init -> . ROUTINE

    ROUTINE         shift and go to state 3

    routine                        shift and go to state 1
    routine_init                   shift and go to state 2

state 1

    (0) S' -> routine .



state 2

    (1) routine -> routine_init . ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    ID              shift and go to state 4


state 3

    (2) routine_init -> ROUTINE .

    ID              reduce using rule 2 (routine_init -> ROUTINE .)


state 4

    (1) routine -> routine_init ID . SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    SEMICOLON       shift and go to state 5


state 5

    (1) routine -> routine_init ID SEMICOLON . global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (21) global_scope_init -> .

    GLOBALS         reduce using rule 21 (global_scope_init -> .)
    INSTRUCTIONS    reduce using rule 21 (global_scope_init -> .)
    PROCEDURES      reduce using rule 21 (global_scope_init -> .)
    BEGIN           reduce using rule 21 (global_scope_init -> .)

    global_scope_init              shift and go to state 6

state 6

    (1) routine -> routine_init ID SEMICOLON global_scope_init . global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (4) global_vars_block -> . GLOBALS COLON var_declarations
    (5) global_vars_block -> . empty
    (148) empty -> .

    GLOBALS         shift and go to state 8
    INSTRUCTIONS    reduce using rule 148 (empty -> .)
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)

    global_vars_block              shift and go to state 7
    empty                          shift and go to state 9

state 7

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block . instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (8) instructions_block -> . INSTRUCTIONS COLON statements
    (9) instructions_block -> . empty
    (148) empty -> .

    INSTRUCTIONS    shift and go to state 11
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)

    instructions_block             shift and go to state 10
    empty                          shift and go to state 12

state 8

    (4) global_vars_block -> GLOBALS . COLON var_declarations

    COLON           shift and go to state 13


state 9

    (5) global_vars_block -> empty .

    INSTRUCTIONS    reduce using rule 5 (global_vars_block -> empty .)
    PROCEDURES      reduce using rule 5 (global_vars_block -> empty .)
    BEGIN           reduce using rule 5 (global_vars_block -> empty .)


state 10

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block . function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (32) function_block -> . PROCEDURES COLON function_declarations
    (33) function_block -> . empty
    (148) empty -> .

    PROCEDURES      shift and go to state 15
    BEGIN           reduce using rule 148 (empty -> .)

    function_block                 shift and go to state 14
    empty                          shift and go to state 16

state 11

    (8) instructions_block -> INSTRUCTIONS . COLON statements

    COLON           shift and go to state 17


state 12

    (9) instructions_block -> empty .

    PROCEDURES      reduce using rule 9 (instructions_block -> empty .)
    BEGIN           reduce using rule 9 (instructions_block -> empty .)
    RSQBRACKET      reduce using rule 9 (instructions_block -> empty .)
    RBRACKET        reduce using rule 9 (instructions_block -> empty .)


state 13

    (4) global_vars_block -> GLOBALS COLON . var_declarations
    (23) var_declarations -> . VAR simple_declaration var_declarations
    (24) var_declarations -> . VAR array_declaration var_declarations
    (25) var_declarations -> . VAR matrix_declaration var_declarations
    (26) var_declarations -> . empty
    (148) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 148 (empty -> .)
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)

    var_declarations               shift and go to state 18
    empty                          shift and go to state 20

state 14

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block . BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    BEGIN           shift and go to state 21


state 15

    (32) function_block -> PROCEDURES . COLON function_declarations

    COLON           shift and go to state 22


state 16

    (33) function_block -> empty .

    BEGIN           reduce using rule 33 (function_block -> empty .)


state 17

    (8) instructions_block -> INSTRUCTIONS COLON . statements
    (49) statements -> . write SEMICOLON statements
    (50) statements -> . read SEMICOLON statements
    (51) statements -> . var_assignment SEMICOLON statements
    (52) statements -> . condition statements
    (53) statements -> . loop statements
    (54) statements -> . function_call SEMICOLON statements
    (55) statements -> . special_function_call SEMICOLON statements
    (56) statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (73) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (81) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    statements                     shift and go to state 23
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 18

    (4) global_vars_block -> GLOBALS COLON var_declarations .

    INSTRUCTIONS    reduce using rule 4 (global_vars_block -> GLOBALS COLON var_declarations .)
    PROCEDURES      reduce using rule 4 (global_vars_block -> GLOBALS COLON var_declarations .)
    BEGIN           reduce using rule 4 (global_vars_block -> GLOBALS COLON var_declarations .)


state 19

    (23) var_declarations -> VAR . simple_declaration var_declarations
    (24) var_declarations -> VAR . array_declaration var_declarations
    (25) var_declarations -> VAR . matrix_declaration var_declarations
    (27) simple_declaration -> . ID COLON var_type SEMICOLON
    (28) array_declaration -> . ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
    (29) matrix_declaration -> . ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    ID              shift and go to state 60

    simple_declaration             shift and go to state 57
    array_declaration              shift and go to state 58
    matrix_declaration             shift and go to state 59

state 20

    (26) var_declarations -> empty .

    INSTRUCTIONS    reduce using rule 26 (var_declarations -> empty .)
    PROCEDURES      reduce using rule 26 (var_declarations -> empty .)
    BEGIN           reduce using rule 26 (var_declarations -> empty .)
    RSQBRACKET      reduce using rule 26 (var_declarations -> empty .)
    RBRACKET        reduce using rule 26 (var_declarations -> empty .)


state 21

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN . COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    COLON           shift and go to state 61


state 22

    (32) function_block -> PROCEDURES COLON . function_declarations
    (34) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (35) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations
    (36) function_declarations -> . empty
    (148) empty -> .

    PROC            shift and go to state 63
    BEGIN           reduce using rule 148 (empty -> .)

    function_declarations          shift and go to state 62
    empty                          shift and go to state 64

state 23

    (8) instructions_block -> INSTRUCTIONS COLON statements .

    PROCEDURES      reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)
    BEGIN           reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)
    RSQBRACKET      reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)
    RBRACKET        reduce using rule 8 (instructions_block -> INSTRUCTIONS COLON statements .)


state 24

    (49) statements -> write . SEMICOLON statements

    SEMICOLON       shift and go to state 65


state 25

    (50) statements -> read . SEMICOLON statements

    SEMICOLON       shift and go to state 66


state 26

    (51) statements -> var_assignment . SEMICOLON statements

    SEMICOLON       shift and go to state 67


state 27

    (52) statements -> condition . statements
    (49) statements -> . write SEMICOLON statements
    (50) statements -> . read SEMICOLON statements
    (51) statements -> . var_assignment SEMICOLON statements
    (52) statements -> . condition statements
    (53) statements -> . loop statements
    (54) statements -> . function_call SEMICOLON statements
    (55) statements -> . special_function_call SEMICOLON statements
    (56) statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (73) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (81) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    condition                      shift and go to state 27
    statements                     shift and go to state 68
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 28

    (53) statements -> loop . statements
    (49) statements -> . write SEMICOLON statements
    (50) statements -> . read SEMICOLON statements
    (51) statements -> . var_assignment SEMICOLON statements
    (52) statements -> . condition statements
    (53) statements -> . loop statements
    (54) statements -> . function_call SEMICOLON statements
    (55) statements -> . special_function_call SEMICOLON statements
    (56) statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (73) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (81) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    loop                           shift and go to state 28
    statements                     shift and go to state 69
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 29

    (54) statements -> function_call . SEMICOLON statements

    SEMICOLON       shift and go to state 70


state 30

    (55) statements -> special_function_call . SEMICOLON statements

    SEMICOLON       shift and go to state 71


state 31

    (56) statements -> empty .

    PROCEDURES      reduce using rule 56 (statements -> empty .)
    BEGIN           reduce using rule 56 (statements -> empty .)
    RSQBRACKET      reduce using rule 56 (statements -> empty .)
    RBRACKET        reduce using rule 56 (statements -> empty .)


state 32

    (57) write -> WRITE . write_params0
    (58) write_params0 -> . write_operator expression produce_write_quad write_params1
    (59) write_params0 -> . write_operator const_text produce_write_quad write_params1
    (64) write_operator -> .

    CONST_TEXT      reduce using rule 64 (write_operator -> .)
    LPAREN          reduce using rule 64 (write_operator -> .)
    ID              reduce using rule 64 (write_operator -> .)
    CONST_INT       reduce using rule 64 (write_operator -> .)
    CONST_FLOAT     reduce using rule 64 (write_operator -> .)
    MEAN            reduce using rule 64 (write_operator -> .)
    MEDIAN          reduce using rule 64 (write_operator -> .)
    MODE            reduce using rule 64 (write_operator -> .)
    STD             reduce using rule 64 (write_operator -> .)
    KURTOSIS        reduce using rule 64 (write_operator -> .)
    PLOT            reduce using rule 64 (write_operator -> .)
    DPLOT           reduce using rule 64 (write_operator -> .)
    VARIANCE        reduce using rule 64 (write_operator -> .)
    SIMMETRY        reduce using rule 64 (write_operator -> .)
    CORRELATION     reduce using rule 64 (write_operator -> .)
    DFREAD          reduce using rule 64 (write_operator -> .)
    HOMERO          reduce using rule 64 (write_operator -> .)
    MARGE           reduce using rule 64 (write_operator -> .)

    write_params0                  shift and go to state 72
    write_operator                 shift and go to state 73

state 33

    (66) read -> READ . push_operator identifier
    (121) push_operator -> .

    ID              reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 74

state 34

    (70) simple_assignment -> identifier . ASSIGN push_operator expression
    (139) array_access -> identifier . lsqbracket expression array_rsqbracket
    (140) matrix_access -> identifier . lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (141) lsqbracket -> . LSQBRACKET

    ASSIGN          shift and go to state 75
    LSQBRACKET      shift and go to state 77

    lsqbracket                     shift and go to state 76

state 35

    (67) var_assignment -> simple_assignment .

    SEMICOLON       reduce using rule 67 (var_assignment -> simple_assignment .)


state 36

    (68) var_assignment -> array_assignment .

    SEMICOLON       reduce using rule 68 (var_assignment -> array_assignment .)


state 37

    (69) var_assignment -> matrix_assignment .

    SEMICOLON       reduce using rule 69 (var_assignment -> matrix_assignment .)


state 38

    (73) condition -> IF . cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> IF . cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (77) cond_lparen -> . LPAREN

    LPAREN          shift and go to state 79

    cond_lparen                    shift and go to state 78

state 39

    (81) loop -> repeat . cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (77) cond_lparen -> . LPAREN

    LPAREN          shift and go to state 79

    cond_lparen                    shift and go to state 80

state 40

    (85) function_call -> ID . function_call_check function_call_lparen call_params0 function_call_rparen
    (134) identifier -> ID .
    (86) function_call_check -> .

    ASSIGN          reduce using rule 134 (identifier -> ID .)
    LSQBRACKET      reduce using rule 134 (identifier -> ID .)
    LPAREN          reduce using rule 86 (function_call_check -> .)

    function_call_check            shift and go to state 81

state 41

    (94) special_function_call -> MEAN . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 82


state 42

    (95) special_function_call -> MEDIAN . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 83


state 43

    (96) special_function_call -> MODE . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 84


state 44

    (97) special_function_call -> STD . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 85


state 45

    (98) special_function_call -> KURTOSIS . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 86


state 46

    (99) special_function_call -> PLOT . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 87


state 47

    (100) special_function_call -> DPLOT . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 88


state 48

    (101) special_function_call -> VARIANCE . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 89


state 49

    (102) special_function_call -> SIMMETRY . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 90


state 50

    (103) special_function_call -> CORRELATION . LPAREN call_params0 RPAREN

    LPAREN          shift and go to state 91


state 51

    (104) special_function_call -> DFREAD . LPAREN CONST_TEXT RPAREN

    LPAREN          shift and go to state 92


state 52

    (105) special_function_call -> HOMERO .

    SEMICOLON       reduce using rule 105 (special_function_call -> HOMERO .)
    MUL             reduce using rule 105 (special_function_call -> HOMERO .)
    DIV             reduce using rule 105 (special_function_call -> HOMERO .)
    ADD             reduce using rule 105 (special_function_call -> HOMERO .)
    SUB             reduce using rule 105 (special_function_call -> HOMERO .)
    COMMA           reduce using rule 105 (special_function_call -> HOMERO .)
    RSQBRACKET      reduce using rule 105 (special_function_call -> HOMERO .)
    LTHAN           reduce using rule 105 (special_function_call -> HOMERO .)
    GTHAN           reduce using rule 105 (special_function_call -> HOMERO .)
    EQUAL           reduce using rule 105 (special_function_call -> HOMERO .)
    DIFFERENT       reduce using rule 105 (special_function_call -> HOMERO .)
    AND             reduce using rule 105 (special_function_call -> HOMERO .)
    OR              reduce using rule 105 (special_function_call -> HOMERO .)
    RPAREN          reduce using rule 105 (special_function_call -> HOMERO .)


state 53

    (106) special_function_call -> MARGE .

    SEMICOLON       reduce using rule 106 (special_function_call -> MARGE .)
    MUL             reduce using rule 106 (special_function_call -> MARGE .)
    DIV             reduce using rule 106 (special_function_call -> MARGE .)
    ADD             reduce using rule 106 (special_function_call -> MARGE .)
    SUB             reduce using rule 106 (special_function_call -> MARGE .)
    COMMA           reduce using rule 106 (special_function_call -> MARGE .)
    RSQBRACKET      reduce using rule 106 (special_function_call -> MARGE .)
    LTHAN           reduce using rule 106 (special_function_call -> MARGE .)
    GTHAN           reduce using rule 106 (special_function_call -> MARGE .)
    EQUAL           reduce using rule 106 (special_function_call -> MARGE .)
    DIFFERENT       reduce using rule 106 (special_function_call -> MARGE .)
    AND             reduce using rule 106 (special_function_call -> MARGE .)
    OR              reduce using rule 106 (special_function_call -> MARGE .)
    RPAREN          reduce using rule 106 (special_function_call -> MARGE .)


state 54

    (71) array_assignment -> array_access . ASSIGN push_operator expression

    ASSIGN          shift and go to state 93


state 55

    (72) matrix_assignment -> matrix_access . ASSIGN push_operator expression

    ASSIGN          shift and go to state 94


state 56

    (83) repeat -> REPEAT .

    LPAREN          reduce using rule 83 (repeat -> REPEAT .)


state 57

    (23) var_declarations -> VAR simple_declaration . var_declarations
    (23) var_declarations -> . VAR simple_declaration var_declarations
    (24) var_declarations -> . VAR array_declaration var_declarations
    (25) var_declarations -> . VAR matrix_declaration var_declarations
    (26) var_declarations -> . empty
    (148) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 148 (empty -> .)
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)

    var_declarations               shift and go to state 95
    empty                          shift and go to state 20

state 58

    (24) var_declarations -> VAR array_declaration . var_declarations
    (23) var_declarations -> . VAR simple_declaration var_declarations
    (24) var_declarations -> . VAR array_declaration var_declarations
    (25) var_declarations -> . VAR matrix_declaration var_declarations
    (26) var_declarations -> . empty
    (148) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 148 (empty -> .)
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)

    var_declarations               shift and go to state 96
    empty                          shift and go to state 20

state 59

    (25) var_declarations -> VAR matrix_declaration . var_declarations
    (23) var_declarations -> . VAR simple_declaration var_declarations
    (24) var_declarations -> . VAR array_declaration var_declarations
    (25) var_declarations -> . VAR matrix_declaration var_declarations
    (26) var_declarations -> . empty
    (148) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 148 (empty -> .)
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)

    var_declarations               shift and go to state 97
    empty                          shift and go to state 20

state 60

    (27) simple_declaration -> ID . COLON var_type SEMICOLON
    (28) array_declaration -> ID . LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON
    (29) matrix_declaration -> ID . LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    COLON           shift and go to state 98
    LSQBRACKET      shift and go to state 99


state 61

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON . LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET

    LSQBRACKET      shift and go to state 100


state 62

    (32) function_block -> PROCEDURES COLON function_declarations .

    BEGIN           reduce using rule 32 (function_block -> PROCEDURES COLON function_declarations .)


state 63

    (34) function_declarations -> PROC . ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (35) function_declarations -> PROC . ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations

    ID              shift and go to state 101


state 64

    (36) function_declarations -> empty .

    BEGIN           reduce using rule 36 (function_declarations -> empty .)


state 65

    (49) statements -> write SEMICOLON . statements
    (49) statements -> . write SEMICOLON statements
    (50) statements -> . read SEMICOLON statements
    (51) statements -> . var_assignment SEMICOLON statements
    (52) statements -> . condition statements
    (53) statements -> . loop statements
    (54) statements -> . function_call SEMICOLON statements
    (55) statements -> . special_function_call SEMICOLON statements
    (56) statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (73) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (81) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    write                          shift and go to state 24
    statements                     shift and go to state 102
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 66

    (50) statements -> read SEMICOLON . statements
    (49) statements -> . write SEMICOLON statements
    (50) statements -> . read SEMICOLON statements
    (51) statements -> . var_assignment SEMICOLON statements
    (52) statements -> . condition statements
    (53) statements -> . loop statements
    (54) statements -> . function_call SEMICOLON statements
    (55) statements -> . special_function_call SEMICOLON statements
    (56) statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (73) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (81) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    read                           shift and go to state 25
    statements                     shift and go to state 103
    write                          shift and go to state 24
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 67

    (51) statements -> var_assignment SEMICOLON . statements
    (49) statements -> . write SEMICOLON statements
    (50) statements -> . read SEMICOLON statements
    (51) statements -> . var_assignment SEMICOLON statements
    (52) statements -> . condition statements
    (53) statements -> . loop statements
    (54) statements -> . function_call SEMICOLON statements
    (55) statements -> . special_function_call SEMICOLON statements
    (56) statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (73) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (81) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    var_assignment                 shift and go to state 26
    statements                     shift and go to state 104
    write                          shift and go to state 24
    read                           shift and go to state 25
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 68

    (52) statements -> condition statements .

    PROCEDURES      reduce using rule 52 (statements -> condition statements .)
    BEGIN           reduce using rule 52 (statements -> condition statements .)
    RSQBRACKET      reduce using rule 52 (statements -> condition statements .)
    RBRACKET        reduce using rule 52 (statements -> condition statements .)


state 69

    (53) statements -> loop statements .

    PROCEDURES      reduce using rule 53 (statements -> loop statements .)
    BEGIN           reduce using rule 53 (statements -> loop statements .)
    RSQBRACKET      reduce using rule 53 (statements -> loop statements .)
    RBRACKET        reduce using rule 53 (statements -> loop statements .)


state 70

    (54) statements -> function_call SEMICOLON . statements
    (49) statements -> . write SEMICOLON statements
    (50) statements -> . read SEMICOLON statements
    (51) statements -> . var_assignment SEMICOLON statements
    (52) statements -> . condition statements
    (53) statements -> . loop statements
    (54) statements -> . function_call SEMICOLON statements
    (55) statements -> . special_function_call SEMICOLON statements
    (56) statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (73) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (81) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    function_call                  shift and go to state 29
    statements                     shift and go to state 105
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 71

    (55) statements -> special_function_call SEMICOLON . statements
    (49) statements -> . write SEMICOLON statements
    (50) statements -> . read SEMICOLON statements
    (51) statements -> . var_assignment SEMICOLON statements
    (52) statements -> . condition statements
    (53) statements -> . loop statements
    (54) statements -> . function_call SEMICOLON statements
    (55) statements -> . special_function_call SEMICOLON statements
    (56) statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (73) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (81) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    PROCEDURES      reduce using rule 148 (empty -> .)
    BEGIN           reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    special_function_call          shift and go to state 30
    statements                     shift and go to state 106
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 72

    (57) write -> WRITE write_params0 .

    SEMICOLON       reduce using rule 57 (write -> WRITE write_params0 .)


state 73

    (58) write_params0 -> write_operator . expression produce_write_quad write_params1
    (59) write_params0 -> write_operator . const_text produce_write_quad write_params1
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (63) const_text -> . CONST_TEXT
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    CONST_TEXT      shift and go to state 110
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 107
    const_text                     shift and go to state 108
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 74

    (66) read -> READ push_operator . identifier
    (134) identifier -> . ID

    ID              shift and go to state 124

    identifier                     shift and go to state 123

state 75

    (70) simple_assignment -> identifier ASSIGN . push_operator expression
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 125

state 76

    (139) array_access -> identifier lsqbracket . expression array_rsqbracket
    (140) matrix_access -> identifier lsqbracket . expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    identifier                     shift and go to state 112
    expression                     shift and go to state 126
    term                           shift and go to state 109
    factor                         shift and go to state 111
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 77

    (141) lsqbracket -> LSQBRACKET .

    LPAREN          reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    ID              reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    CONST_INT       reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    CONST_FLOAT     reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    MEAN            reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    MEDIAN          reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    MODE            reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    STD             reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    KURTOSIS        reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    PLOT            reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    DPLOT           reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    VARIANCE        reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    SIMMETRY        reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    CORRELATION     reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    DFREAD          reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    HOMERO          reduce using rule 141 (lsqbracket -> LSQBRACKET .)
    MARGE           reduce using rule 141 (lsqbracket -> LSQBRACKET .)


state 78

    (73) condition -> IF cond_lparen . hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> IF cond_lparen . hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    hyper_expression               shift and go to state 127
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 79

    (77) cond_lparen -> LPAREN .

    LPAREN          reduce using rule 77 (cond_lparen -> LPAREN .)
    ID              reduce using rule 77 (cond_lparen -> LPAREN .)
    CONST_INT       reduce using rule 77 (cond_lparen -> LPAREN .)
    CONST_FLOAT     reduce using rule 77 (cond_lparen -> LPAREN .)
    MEAN            reduce using rule 77 (cond_lparen -> LPAREN .)
    MEDIAN          reduce using rule 77 (cond_lparen -> LPAREN .)
    MODE            reduce using rule 77 (cond_lparen -> LPAREN .)
    STD             reduce using rule 77 (cond_lparen -> LPAREN .)
    KURTOSIS        reduce using rule 77 (cond_lparen -> LPAREN .)
    PLOT            reduce using rule 77 (cond_lparen -> LPAREN .)
    DPLOT           reduce using rule 77 (cond_lparen -> LPAREN .)
    VARIANCE        reduce using rule 77 (cond_lparen -> LPAREN .)
    SIMMETRY        reduce using rule 77 (cond_lparen -> LPAREN .)
    CORRELATION     reduce using rule 77 (cond_lparen -> LPAREN .)
    DFREAD          reduce using rule 77 (cond_lparen -> LPAREN .)
    HOMERO          reduce using rule 77 (cond_lparen -> LPAREN .)
    MARGE           reduce using rule 77 (cond_lparen -> LPAREN .)


state 80

    (81) loop -> repeat cond_lparen . hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    hyper_expression               shift and go to state 130
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 81

    (85) function_call -> ID function_call_check . function_call_lparen call_params0 function_call_rparen
    (87) function_call_lparen -> . LPAREN

    LPAREN          shift and go to state 132

    function_call_lparen           shift and go to state 131

state 82

    (94) special_function_call -> MEAN LPAREN . call_params0 RPAREN
    (89) call_params0 -> . hyper_expression handle_call_param call_params1
    (90) call_params0 -> . empty
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (148) empty -> .
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    RPAREN          reduce using rule 148 (empty -> .)
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 133
    hyper_expression               shift and go to state 134
    empty                          shift and go to state 135
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 83

    (95) special_function_call -> MEDIAN LPAREN . call_params0 RPAREN
    (89) call_params0 -> . hyper_expression handle_call_param call_params1
    (90) call_params0 -> . empty
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (148) empty -> .
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    RPAREN          reduce using rule 148 (empty -> .)
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 136
    hyper_expression               shift and go to state 134
    empty                          shift and go to state 135
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 84

    (96) special_function_call -> MODE LPAREN . call_params0 RPAREN
    (89) call_params0 -> . hyper_expression handle_call_param call_params1
    (90) call_params0 -> . empty
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (148) empty -> .
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    RPAREN          reduce using rule 148 (empty -> .)
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 137
    hyper_expression               shift and go to state 134
    empty                          shift and go to state 135
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 85

    (97) special_function_call -> STD LPAREN . call_params0 RPAREN
    (89) call_params0 -> . hyper_expression handle_call_param call_params1
    (90) call_params0 -> . empty
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (148) empty -> .
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    RPAREN          reduce using rule 148 (empty -> .)
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 138
    hyper_expression               shift and go to state 134
    empty                          shift and go to state 135
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 86

    (98) special_function_call -> KURTOSIS LPAREN . call_params0 RPAREN
    (89) call_params0 -> . hyper_expression handle_call_param call_params1
    (90) call_params0 -> . empty
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (148) empty -> .
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    RPAREN          reduce using rule 148 (empty -> .)
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 139
    hyper_expression               shift and go to state 134
    empty                          shift and go to state 135
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 87

    (99) special_function_call -> PLOT LPAREN . call_params0 RPAREN
    (89) call_params0 -> . hyper_expression handle_call_param call_params1
    (90) call_params0 -> . empty
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (148) empty -> .
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    RPAREN          reduce using rule 148 (empty -> .)
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 140
    hyper_expression               shift and go to state 134
    empty                          shift and go to state 135
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 88

    (100) special_function_call -> DPLOT LPAREN . call_params0 RPAREN
    (89) call_params0 -> . hyper_expression handle_call_param call_params1
    (90) call_params0 -> . empty
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (148) empty -> .
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    RPAREN          reduce using rule 148 (empty -> .)
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 141
    hyper_expression               shift and go to state 134
    empty                          shift and go to state 135
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 89

    (101) special_function_call -> VARIANCE LPAREN . call_params0 RPAREN
    (89) call_params0 -> . hyper_expression handle_call_param call_params1
    (90) call_params0 -> . empty
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (148) empty -> .
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    RPAREN          reduce using rule 148 (empty -> .)
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 142
    hyper_expression               shift and go to state 134
    empty                          shift and go to state 135
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 90

    (102) special_function_call -> SIMMETRY LPAREN . call_params0 RPAREN
    (89) call_params0 -> . hyper_expression handle_call_param call_params1
    (90) call_params0 -> . empty
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (148) empty -> .
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    RPAREN          reduce using rule 148 (empty -> .)
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 143
    hyper_expression               shift and go to state 134
    empty                          shift and go to state 135
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 91

    (103) special_function_call -> CORRELATION LPAREN . call_params0 RPAREN
    (89) call_params0 -> . hyper_expression handle_call_param call_params1
    (90) call_params0 -> . empty
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (148) empty -> .
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    RPAREN          reduce using rule 148 (empty -> .)
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 144
    hyper_expression               shift and go to state 134
    empty                          shift and go to state 135
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 92

    (104) special_function_call -> DFREAD LPAREN . CONST_TEXT RPAREN

    CONST_TEXT      shift and go to state 145


state 93

    (71) array_assignment -> array_access ASSIGN . push_operator expression
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 146

state 94

    (72) matrix_assignment -> matrix_access ASSIGN . push_operator expression
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 147

state 95

    (23) var_declarations -> VAR simple_declaration var_declarations .

    INSTRUCTIONS    reduce using rule 23 (var_declarations -> VAR simple_declaration var_declarations .)
    PROCEDURES      reduce using rule 23 (var_declarations -> VAR simple_declaration var_declarations .)
    BEGIN           reduce using rule 23 (var_declarations -> VAR simple_declaration var_declarations .)
    RSQBRACKET      reduce using rule 23 (var_declarations -> VAR simple_declaration var_declarations .)
    RBRACKET        reduce using rule 23 (var_declarations -> VAR simple_declaration var_declarations .)


state 96

    (24) var_declarations -> VAR array_declaration var_declarations .

    INSTRUCTIONS    reduce using rule 24 (var_declarations -> VAR array_declaration var_declarations .)
    PROCEDURES      reduce using rule 24 (var_declarations -> VAR array_declaration var_declarations .)
    BEGIN           reduce using rule 24 (var_declarations -> VAR array_declaration var_declarations .)
    RSQBRACKET      reduce using rule 24 (var_declarations -> VAR array_declaration var_declarations .)
    RBRACKET        reduce using rule 24 (var_declarations -> VAR array_declaration var_declarations .)


state 97

    (25) var_declarations -> VAR matrix_declaration var_declarations .

    INSTRUCTIONS    reduce using rule 25 (var_declarations -> VAR matrix_declaration var_declarations .)
    PROCEDURES      reduce using rule 25 (var_declarations -> VAR matrix_declaration var_declarations .)
    BEGIN           reduce using rule 25 (var_declarations -> VAR matrix_declaration var_declarations .)
    RSQBRACKET      reduce using rule 25 (var_declarations -> VAR matrix_declaration var_declarations .)
    RBRACKET        reduce using rule 25 (var_declarations -> VAR matrix_declaration var_declarations .)


state 98

    (27) simple_declaration -> ID COLON . var_type SEMICOLON
    (30) var_type -> . type
    (31) var_type -> . DF
    (146) type -> . INT
    (147) type -> . FLOAT

    DF              shift and go to state 150
    INT             shift and go to state 151
    FLOAT           shift and go to state 152

    var_type                       shift and go to state 148
    type                           shift and go to state 149

state 99

    (28) array_declaration -> ID LSQBRACKET . CONST_INT RSQBRACKET COLON type SEMICOLON
    (29) matrix_declaration -> ID LSQBRACKET . CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    CONST_INT       shift and go to state 153


state 100

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET . local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET
    (22) local_scope_init -> .

    LOCALS          reduce using rule 22 (local_scope_init -> .)
    INSTRUCTIONS    reduce using rule 22 (local_scope_init -> .)
    RSQBRACKET      reduce using rule 22 (local_scope_init -> .)

    local_scope_init               shift and go to state 154

state 101

    (34) function_declarations -> PROC ID . proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (35) function_declarations -> PROC ID . proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations
    (38) proc_scope_init -> .

    LPAREN          reduce using rule 38 (proc_scope_init -> .)

    proc_scope_init                shift and go to state 155

state 102

    (49) statements -> write SEMICOLON statements .

    PROCEDURES      reduce using rule 49 (statements -> write SEMICOLON statements .)
    BEGIN           reduce using rule 49 (statements -> write SEMICOLON statements .)
    RSQBRACKET      reduce using rule 49 (statements -> write SEMICOLON statements .)
    RBRACKET        reduce using rule 49 (statements -> write SEMICOLON statements .)


state 103

    (50) statements -> read SEMICOLON statements .

    PROCEDURES      reduce using rule 50 (statements -> read SEMICOLON statements .)
    BEGIN           reduce using rule 50 (statements -> read SEMICOLON statements .)
    RSQBRACKET      reduce using rule 50 (statements -> read SEMICOLON statements .)
    RBRACKET        reduce using rule 50 (statements -> read SEMICOLON statements .)


state 104

    (51) statements -> var_assignment SEMICOLON statements .

    PROCEDURES      reduce using rule 51 (statements -> var_assignment SEMICOLON statements .)
    BEGIN           reduce using rule 51 (statements -> var_assignment SEMICOLON statements .)
    RSQBRACKET      reduce using rule 51 (statements -> var_assignment SEMICOLON statements .)
    RBRACKET        reduce using rule 51 (statements -> var_assignment SEMICOLON statements .)


state 105

    (54) statements -> function_call SEMICOLON statements .

    PROCEDURES      reduce using rule 54 (statements -> function_call SEMICOLON statements .)
    BEGIN           reduce using rule 54 (statements -> function_call SEMICOLON statements .)
    RSQBRACKET      reduce using rule 54 (statements -> function_call SEMICOLON statements .)
    RBRACKET        reduce using rule 54 (statements -> function_call SEMICOLON statements .)


state 106

    (55) statements -> special_function_call SEMICOLON statements .

    PROCEDURES      reduce using rule 55 (statements -> special_function_call SEMICOLON statements .)
    BEGIN           reduce using rule 55 (statements -> special_function_call SEMICOLON statements .)
    RSQBRACKET      reduce using rule 55 (statements -> special_function_call SEMICOLON statements .)
    RBRACKET        reduce using rule 55 (statements -> special_function_call SEMICOLON statements .)


state 107

    (58) write_params0 -> write_operator expression . produce_write_quad write_params1
    (115) expression -> expression . ADD push_operator expression
    (116) expression -> expression . SUB push_operator expression
    (65) produce_write_quad -> .

    ADD             shift and go to state 157
    SUB             shift and go to state 158
    COMMA           reduce using rule 65 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 65 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 156

state 108

    (59) write_params0 -> write_operator const_text . produce_write_quad write_params1
    (65) produce_write_quad -> .

    COMMA           reduce using rule 65 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 65 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 159

state 109

    (117) expression -> term . produce_exp_quad
    (118) term -> term . MUL push_operator term
    (119) term -> term . DIV push_operator term
    (124) produce_exp_quad -> .

    MUL             shift and go to state 161
    DIV             shift and go to state 162
    ADD             reduce using rule 124 (produce_exp_quad -> .)
    SUB             reduce using rule 124 (produce_exp_quad -> .)
    COMMA           reduce using rule 124 (produce_exp_quad -> .)
    SEMICOLON       reduce using rule 124 (produce_exp_quad -> .)
    RSQBRACKET      reduce using rule 124 (produce_exp_quad -> .)
    LTHAN           reduce using rule 124 (produce_exp_quad -> .)
    GTHAN           reduce using rule 124 (produce_exp_quad -> .)
    EQUAL           reduce using rule 124 (produce_exp_quad -> .)
    DIFFERENT       reduce using rule 124 (produce_exp_quad -> .)
    AND             reduce using rule 124 (produce_exp_quad -> .)
    OR              reduce using rule 124 (produce_exp_quad -> .)
    RPAREN          reduce using rule 124 (produce_exp_quad -> .)

    produce_exp_quad               shift and go to state 160

state 110

    (63) const_text -> CONST_TEXT .

    COMMA           reduce using rule 63 (const_text -> CONST_TEXT .)
    SEMICOLON       reduce using rule 63 (const_text -> CONST_TEXT .)


state 111

    (120) term -> factor . produce_term_quad
    (125) produce_term_quad -> .

    MUL             reduce using rule 125 (produce_term_quad -> .)
    DIV             reduce using rule 125 (produce_term_quad -> .)
    ADD             reduce using rule 125 (produce_term_quad -> .)
    SUB             reduce using rule 125 (produce_term_quad -> .)
    COMMA           reduce using rule 125 (produce_term_quad -> .)
    SEMICOLON       reduce using rule 125 (produce_term_quad -> .)
    RSQBRACKET      reduce using rule 125 (produce_term_quad -> .)
    LTHAN           reduce using rule 125 (produce_term_quad -> .)
    GTHAN           reduce using rule 125 (produce_term_quad -> .)
    EQUAL           reduce using rule 125 (produce_term_quad -> .)
    DIFFERENT       reduce using rule 125 (produce_term_quad -> .)
    AND             reduce using rule 125 (produce_term_quad -> .)
    OR              reduce using rule 125 (produce_term_quad -> .)
    RPAREN          reduce using rule 125 (produce_term_quad -> .)

    produce_term_quad              shift and go to state 163

state 112

    (126) factor -> identifier .
    (139) array_access -> identifier . lsqbracket expression array_rsqbracket
    (140) matrix_access -> identifier . lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (141) lsqbracket -> . LSQBRACKET

    MUL             reduce using rule 126 (factor -> identifier .)
    DIV             reduce using rule 126 (factor -> identifier .)
    ADD             reduce using rule 126 (factor -> identifier .)
    SUB             reduce using rule 126 (factor -> identifier .)
    COMMA           reduce using rule 126 (factor -> identifier .)
    SEMICOLON       reduce using rule 126 (factor -> identifier .)
    RSQBRACKET      reduce using rule 126 (factor -> identifier .)
    LTHAN           reduce using rule 126 (factor -> identifier .)
    GTHAN           reduce using rule 126 (factor -> identifier .)
    EQUAL           reduce using rule 126 (factor -> identifier .)
    DIFFERENT       reduce using rule 126 (factor -> identifier .)
    AND             reduce using rule 126 (factor -> identifier .)
    OR              reduce using rule 126 (factor -> identifier .)
    RPAREN          reduce using rule 126 (factor -> identifier .)
    LSQBRACKET      shift and go to state 77

    lsqbracket                     shift and go to state 76

state 113

    (127) factor -> const_int .

    MUL             reduce using rule 127 (factor -> const_int .)
    DIV             reduce using rule 127 (factor -> const_int .)
    ADD             reduce using rule 127 (factor -> const_int .)
    SUB             reduce using rule 127 (factor -> const_int .)
    COMMA           reduce using rule 127 (factor -> const_int .)
    SEMICOLON       reduce using rule 127 (factor -> const_int .)
    RSQBRACKET      reduce using rule 127 (factor -> const_int .)
    LTHAN           reduce using rule 127 (factor -> const_int .)
    GTHAN           reduce using rule 127 (factor -> const_int .)
    EQUAL           reduce using rule 127 (factor -> const_int .)
    DIFFERENT       reduce using rule 127 (factor -> const_int .)
    AND             reduce using rule 127 (factor -> const_int .)
    OR              reduce using rule 127 (factor -> const_int .)
    RPAREN          reduce using rule 127 (factor -> const_int .)


state 114

    (128) factor -> const_float .

    MUL             reduce using rule 128 (factor -> const_float .)
    DIV             reduce using rule 128 (factor -> const_float .)
    ADD             reduce using rule 128 (factor -> const_float .)
    SUB             reduce using rule 128 (factor -> const_float .)
    COMMA           reduce using rule 128 (factor -> const_float .)
    SEMICOLON       reduce using rule 128 (factor -> const_float .)
    RSQBRACKET      reduce using rule 128 (factor -> const_float .)
    LTHAN           reduce using rule 128 (factor -> const_float .)
    GTHAN           reduce using rule 128 (factor -> const_float .)
    EQUAL           reduce using rule 128 (factor -> const_float .)
    DIFFERENT       reduce using rule 128 (factor -> const_float .)
    AND             reduce using rule 128 (factor -> const_float .)
    OR              reduce using rule 128 (factor -> const_float .)
    RPAREN          reduce using rule 128 (factor -> const_float .)


state 115

    (129) factor -> LPAREN . push_cap expression RPAREN pop_cap
    (137) push_cap -> .

    LPAREN          reduce using rule 137 (push_cap -> .)
    ID              reduce using rule 137 (push_cap -> .)
    CONST_INT       reduce using rule 137 (push_cap -> .)
    CONST_FLOAT     reduce using rule 137 (push_cap -> .)
    MEAN            reduce using rule 137 (push_cap -> .)
    MEDIAN          reduce using rule 137 (push_cap -> .)
    MODE            reduce using rule 137 (push_cap -> .)
    STD             reduce using rule 137 (push_cap -> .)
    KURTOSIS        reduce using rule 137 (push_cap -> .)
    PLOT            reduce using rule 137 (push_cap -> .)
    DPLOT           reduce using rule 137 (push_cap -> .)
    VARIANCE        reduce using rule 137 (push_cap -> .)
    SIMMETRY        reduce using rule 137 (push_cap -> .)
    CORRELATION     reduce using rule 137 (push_cap -> .)
    DFREAD          reduce using rule 137 (push_cap -> .)
    HOMERO          reduce using rule 137 (push_cap -> .)
    MARGE           reduce using rule 137 (push_cap -> .)

    push_cap                       shift and go to state 164

state 116

    (130) factor -> array_access .

    MUL             reduce using rule 130 (factor -> array_access .)
    DIV             reduce using rule 130 (factor -> array_access .)
    ADD             reduce using rule 130 (factor -> array_access .)
    SUB             reduce using rule 130 (factor -> array_access .)
    COMMA           reduce using rule 130 (factor -> array_access .)
    SEMICOLON       reduce using rule 130 (factor -> array_access .)
    RSQBRACKET      reduce using rule 130 (factor -> array_access .)
    LTHAN           reduce using rule 130 (factor -> array_access .)
    GTHAN           reduce using rule 130 (factor -> array_access .)
    EQUAL           reduce using rule 130 (factor -> array_access .)
    DIFFERENT       reduce using rule 130 (factor -> array_access .)
    AND             reduce using rule 130 (factor -> array_access .)
    OR              reduce using rule 130 (factor -> array_access .)
    RPAREN          reduce using rule 130 (factor -> array_access .)


state 117

    (131) factor -> matrix_access .

    MUL             reduce using rule 131 (factor -> matrix_access .)
    DIV             reduce using rule 131 (factor -> matrix_access .)
    ADD             reduce using rule 131 (factor -> matrix_access .)
    SUB             reduce using rule 131 (factor -> matrix_access .)
    COMMA           reduce using rule 131 (factor -> matrix_access .)
    SEMICOLON       reduce using rule 131 (factor -> matrix_access .)
    RSQBRACKET      reduce using rule 131 (factor -> matrix_access .)
    LTHAN           reduce using rule 131 (factor -> matrix_access .)
    GTHAN           reduce using rule 131 (factor -> matrix_access .)
    EQUAL           reduce using rule 131 (factor -> matrix_access .)
    DIFFERENT       reduce using rule 131 (factor -> matrix_access .)
    AND             reduce using rule 131 (factor -> matrix_access .)
    OR              reduce using rule 131 (factor -> matrix_access .)
    RPAREN          reduce using rule 131 (factor -> matrix_access .)


state 118

    (132) factor -> function_call .

    MUL             reduce using rule 132 (factor -> function_call .)
    DIV             reduce using rule 132 (factor -> function_call .)
    ADD             reduce using rule 132 (factor -> function_call .)
    SUB             reduce using rule 132 (factor -> function_call .)
    COMMA           reduce using rule 132 (factor -> function_call .)
    SEMICOLON       reduce using rule 132 (factor -> function_call .)
    RSQBRACKET      reduce using rule 132 (factor -> function_call .)
    LTHAN           reduce using rule 132 (factor -> function_call .)
    GTHAN           reduce using rule 132 (factor -> function_call .)
    EQUAL           reduce using rule 132 (factor -> function_call .)
    DIFFERENT       reduce using rule 132 (factor -> function_call .)
    AND             reduce using rule 132 (factor -> function_call .)
    OR              reduce using rule 132 (factor -> function_call .)
    RPAREN          reduce using rule 132 (factor -> function_call .)


state 119

    (133) factor -> special_function_call .

    MUL             reduce using rule 133 (factor -> special_function_call .)
    DIV             reduce using rule 133 (factor -> special_function_call .)
    ADD             reduce using rule 133 (factor -> special_function_call .)
    SUB             reduce using rule 133 (factor -> special_function_call .)
    COMMA           reduce using rule 133 (factor -> special_function_call .)
    SEMICOLON       reduce using rule 133 (factor -> special_function_call .)
    RSQBRACKET      reduce using rule 133 (factor -> special_function_call .)
    LTHAN           reduce using rule 133 (factor -> special_function_call .)
    GTHAN           reduce using rule 133 (factor -> special_function_call .)
    EQUAL           reduce using rule 133 (factor -> special_function_call .)
    DIFFERENT       reduce using rule 133 (factor -> special_function_call .)
    AND             reduce using rule 133 (factor -> special_function_call .)
    OR              reduce using rule 133 (factor -> special_function_call .)
    RPAREN          reduce using rule 133 (factor -> special_function_call .)


state 120

    (134) identifier -> ID .
    (85) function_call -> ID . function_call_check function_call_lparen call_params0 function_call_rparen
    (86) function_call_check -> .

    LSQBRACKET      reduce using rule 134 (identifier -> ID .)
    MUL             reduce using rule 134 (identifier -> ID .)
    DIV             reduce using rule 134 (identifier -> ID .)
    ADD             reduce using rule 134 (identifier -> ID .)
    SUB             reduce using rule 134 (identifier -> ID .)
    COMMA           reduce using rule 134 (identifier -> ID .)
    SEMICOLON       reduce using rule 134 (identifier -> ID .)
    RSQBRACKET      reduce using rule 134 (identifier -> ID .)
    LTHAN           reduce using rule 134 (identifier -> ID .)
    GTHAN           reduce using rule 134 (identifier -> ID .)
    EQUAL           reduce using rule 134 (identifier -> ID .)
    DIFFERENT       reduce using rule 134 (identifier -> ID .)
    AND             reduce using rule 134 (identifier -> ID .)
    OR              reduce using rule 134 (identifier -> ID .)
    RPAREN          reduce using rule 134 (identifier -> ID .)
    LPAREN          reduce using rule 86 (function_call_check -> .)

    function_call_check            shift and go to state 81

state 121

    (135) const_int -> CONST_INT .

    MUL             reduce using rule 135 (const_int -> CONST_INT .)
    DIV             reduce using rule 135 (const_int -> CONST_INT .)
    ADD             reduce using rule 135 (const_int -> CONST_INT .)
    SUB             reduce using rule 135 (const_int -> CONST_INT .)
    COMMA           reduce using rule 135 (const_int -> CONST_INT .)
    SEMICOLON       reduce using rule 135 (const_int -> CONST_INT .)
    RSQBRACKET      reduce using rule 135 (const_int -> CONST_INT .)
    LTHAN           reduce using rule 135 (const_int -> CONST_INT .)
    GTHAN           reduce using rule 135 (const_int -> CONST_INT .)
    EQUAL           reduce using rule 135 (const_int -> CONST_INT .)
    DIFFERENT       reduce using rule 135 (const_int -> CONST_INT .)
    AND             reduce using rule 135 (const_int -> CONST_INT .)
    OR              reduce using rule 135 (const_int -> CONST_INT .)
    RPAREN          reduce using rule 135 (const_int -> CONST_INT .)


state 122

    (136) const_float -> CONST_FLOAT .

    MUL             reduce using rule 136 (const_float -> CONST_FLOAT .)
    DIV             reduce using rule 136 (const_float -> CONST_FLOAT .)
    ADD             reduce using rule 136 (const_float -> CONST_FLOAT .)
    SUB             reduce using rule 136 (const_float -> CONST_FLOAT .)
    COMMA           reduce using rule 136 (const_float -> CONST_FLOAT .)
    SEMICOLON       reduce using rule 136 (const_float -> CONST_FLOAT .)
    RSQBRACKET      reduce using rule 136 (const_float -> CONST_FLOAT .)
    LTHAN           reduce using rule 136 (const_float -> CONST_FLOAT .)
    GTHAN           reduce using rule 136 (const_float -> CONST_FLOAT .)
    EQUAL           reduce using rule 136 (const_float -> CONST_FLOAT .)
    DIFFERENT       reduce using rule 136 (const_float -> CONST_FLOAT .)
    AND             reduce using rule 136 (const_float -> CONST_FLOAT .)
    OR              reduce using rule 136 (const_float -> CONST_FLOAT .)
    RPAREN          reduce using rule 136 (const_float -> CONST_FLOAT .)


state 123

    (66) read -> READ push_operator identifier .

    SEMICOLON       reduce using rule 66 (read -> READ push_operator identifier .)


state 124

    (134) identifier -> ID .

    SEMICOLON       reduce using rule 134 (identifier -> ID .)


state 125

    (70) simple_assignment -> identifier ASSIGN push_operator . expression
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    identifier                     shift and go to state 112
    expression                     shift and go to state 165
    term                           shift and go to state 109
    factor                         shift and go to state 111
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 126

    (139) array_access -> identifier lsqbracket expression . array_rsqbracket
    (140) matrix_access -> identifier lsqbracket expression . matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (115) expression -> expression . ADD push_operator expression
    (116) expression -> expression . SUB push_operator expression
    (142) array_rsqbracket -> . RSQBRACKET
    (143) matrix_rsqbracket_1 -> . RSQBRACKET

    ADD             shift and go to state 157
    SUB             shift and go to state 158
    RSQBRACKET      shift and go to state 168

    array_rsqbracket               shift and go to state 166
    matrix_rsqbracket_1            shift and go to state 167

state 127

    (73) condition -> IF cond_lparen hyper_expression . cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> IF cond_lparen hyper_expression . cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (107) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (108) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (78) cond_rparen -> . RPAREN

    AND             shift and go to state 170
    OR              shift and go to state 171
    RPAREN          shift and go to state 172

    cond_rparen                    shift and go to state 169

state 128

    (109) hyper_expression -> super_expression . produce_hyperexp_quad
    (110) super_expression -> super_expression . LTHAN push_operator super_expression
    (111) super_expression -> super_expression . GTHAN push_operator super_expression
    (112) super_expression -> super_expression . EQUAL push_operator super_expression
    (113) super_expression -> super_expression . DIFFERENT push_operator super_expression
    (122) produce_hyperexp_quad -> .

    LTHAN           shift and go to state 174
    GTHAN           shift and go to state 175
    EQUAL           shift and go to state 176
    DIFFERENT       shift and go to state 177
    AND             reduce using rule 122 (produce_hyperexp_quad -> .)
    OR              reduce using rule 122 (produce_hyperexp_quad -> .)
    RPAREN          reduce using rule 122 (produce_hyperexp_quad -> .)
    COMMA           reduce using rule 122 (produce_hyperexp_quad -> .)

    produce_hyperexp_quad          shift and go to state 173

state 129

    (114) super_expression -> expression . produce_superexp_quad
    (115) expression -> expression . ADD push_operator expression
    (116) expression -> expression . SUB push_operator expression
    (123) produce_superexp_quad -> .

    ADD             shift and go to state 157
    SUB             shift and go to state 158
    LTHAN           reduce using rule 123 (produce_superexp_quad -> .)
    GTHAN           reduce using rule 123 (produce_superexp_quad -> .)
    EQUAL           reduce using rule 123 (produce_superexp_quad -> .)
    DIFFERENT       reduce using rule 123 (produce_superexp_quad -> .)
    AND             reduce using rule 123 (produce_superexp_quad -> .)
    OR              reduce using rule 123 (produce_superexp_quad -> .)
    RPAREN          reduce using rule 123 (produce_superexp_quad -> .)
    COMMA           reduce using rule 123 (produce_superexp_quad -> .)

    produce_superexp_quad          shift and go to state 178

state 130

    (81) loop -> repeat cond_lparen hyper_expression . cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (107) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (108) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (78) cond_rparen -> . RPAREN

    AND             shift and go to state 170
    OR              shift and go to state 171
    RPAREN          shift and go to state 172

    cond_rparen                    shift and go to state 179

state 131

    (85) function_call -> ID function_call_check function_call_lparen . call_params0 function_call_rparen
    (89) call_params0 -> . hyper_expression handle_call_param call_params1
    (90) call_params0 -> . empty
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (148) empty -> .
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    RPAREN          reduce using rule 148 (empty -> .)
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    call_params0                   shift and go to state 180
    hyper_expression               shift and go to state 134
    empty                          shift and go to state 135
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 132

    (87) function_call_lparen -> LPAREN .

    LPAREN          reduce using rule 87 (function_call_lparen -> LPAREN .)
    ID              reduce using rule 87 (function_call_lparen -> LPAREN .)
    CONST_INT       reduce using rule 87 (function_call_lparen -> LPAREN .)
    CONST_FLOAT     reduce using rule 87 (function_call_lparen -> LPAREN .)
    MEAN            reduce using rule 87 (function_call_lparen -> LPAREN .)
    MEDIAN          reduce using rule 87 (function_call_lparen -> LPAREN .)
    MODE            reduce using rule 87 (function_call_lparen -> LPAREN .)
    STD             reduce using rule 87 (function_call_lparen -> LPAREN .)
    KURTOSIS        reduce using rule 87 (function_call_lparen -> LPAREN .)
    PLOT            reduce using rule 87 (function_call_lparen -> LPAREN .)
    DPLOT           reduce using rule 87 (function_call_lparen -> LPAREN .)
    VARIANCE        reduce using rule 87 (function_call_lparen -> LPAREN .)
    SIMMETRY        reduce using rule 87 (function_call_lparen -> LPAREN .)
    CORRELATION     reduce using rule 87 (function_call_lparen -> LPAREN .)
    DFREAD          reduce using rule 87 (function_call_lparen -> LPAREN .)
    HOMERO          reduce using rule 87 (function_call_lparen -> LPAREN .)
    MARGE           reduce using rule 87 (function_call_lparen -> LPAREN .)
    RPAREN          reduce using rule 87 (function_call_lparen -> LPAREN .)


state 133

    (94) special_function_call -> MEAN LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 181


state 134

    (89) call_params0 -> hyper_expression . handle_call_param call_params1
    (107) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (108) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (93) handle_call_param -> .

    AND             shift and go to state 170
    OR              shift and go to state 171
    COMMA           reduce using rule 93 (handle_call_param -> .)
    RPAREN          reduce using rule 93 (handle_call_param -> .)

    handle_call_param              shift and go to state 182

state 135

    (90) call_params0 -> empty .

    RPAREN          reduce using rule 90 (call_params0 -> empty .)


state 136

    (95) special_function_call -> MEDIAN LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 183


state 137

    (96) special_function_call -> MODE LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 184


state 138

    (97) special_function_call -> STD LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 185


state 139

    (98) special_function_call -> KURTOSIS LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 186


state 140

    (99) special_function_call -> PLOT LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 187


state 141

    (100) special_function_call -> DPLOT LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 188


state 142

    (101) special_function_call -> VARIANCE LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 189


state 143

    (102) special_function_call -> SIMMETRY LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 190


state 144

    (103) special_function_call -> CORRELATION LPAREN call_params0 . RPAREN

    RPAREN          shift and go to state 191


state 145

    (104) special_function_call -> DFREAD LPAREN CONST_TEXT . RPAREN

    RPAREN          shift and go to state 192


state 146

    (71) array_assignment -> array_access ASSIGN push_operator . expression
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    array_access                   shift and go to state 116
    expression                     shift and go to state 193
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 147

    (72) matrix_assignment -> matrix_access ASSIGN push_operator . expression
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    matrix_access                  shift and go to state 117
    expression                     shift and go to state 194
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 148

    (27) simple_declaration -> ID COLON var_type . SEMICOLON

    SEMICOLON       shift and go to state 195


state 149

    (30) var_type -> type .

    SEMICOLON       reduce using rule 30 (var_type -> type .)


state 150

    (31) var_type -> DF .

    SEMICOLON       reduce using rule 31 (var_type -> DF .)


state 151

    (146) type -> INT .

    SEMICOLON       reduce using rule 146 (type -> INT .)
    COMMA           reduce using rule 146 (type -> INT .)
    RPAREN          reduce using rule 146 (type -> INT .)
    LBRACKET        reduce using rule 146 (type -> INT .)


state 152

    (147) type -> FLOAT .

    SEMICOLON       reduce using rule 147 (type -> FLOAT .)
    COMMA           reduce using rule 147 (type -> FLOAT .)
    RPAREN          reduce using rule 147 (type -> FLOAT .)
    LBRACKET        reduce using rule 147 (type -> FLOAT .)


state 153

    (28) array_declaration -> ID LSQBRACKET CONST_INT . RSQBRACKET COLON type SEMICOLON
    (29) matrix_declaration -> ID LSQBRACKET CONST_INT . RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    RSQBRACKET      shift and go to state 196


state 154

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init . local_vars_block fill_main_jump instructions_block RSQBRACKET
    (6) local_vars_block -> . LOCALS COLON var_declarations
    (7) local_vars_block -> . empty
    (148) empty -> .

    LOCALS          shift and go to state 198
    INSTRUCTIONS    reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)

    local_vars_block               shift and go to state 197
    empty                          shift and go to state 199

state 155

    (34) function_declarations -> PROC ID proc_scope_init . LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (35) function_declarations -> PROC ID proc_scope_init . LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations

    LPAREN          shift and go to state 200


state 156

    (58) write_params0 -> write_operator expression produce_write_quad . write_params1
    (60) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (61) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (62) write_params1 -> . empty
    (148) empty -> .

    COMMA           shift and go to state 202
    SEMICOLON       reduce using rule 148 (empty -> .)

    write_params1                  shift and go to state 201
    empty                          shift and go to state 203

state 157

    (115) expression -> expression ADD . push_operator expression
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 204

state 158

    (116) expression -> expression SUB . push_operator expression
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 205

state 159

    (59) write_params0 -> write_operator const_text produce_write_quad . write_params1
    (60) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (61) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (62) write_params1 -> . empty
    (148) empty -> .

    COMMA           shift and go to state 202
    SEMICOLON       reduce using rule 148 (empty -> .)

    write_params1                  shift and go to state 206
    empty                          shift and go to state 203

state 160

    (117) expression -> term produce_exp_quad .

    ADD             reduce using rule 117 (expression -> term produce_exp_quad .)
    SUB             reduce using rule 117 (expression -> term produce_exp_quad .)
    COMMA           reduce using rule 117 (expression -> term produce_exp_quad .)
    SEMICOLON       reduce using rule 117 (expression -> term produce_exp_quad .)
    RSQBRACKET      reduce using rule 117 (expression -> term produce_exp_quad .)
    LTHAN           reduce using rule 117 (expression -> term produce_exp_quad .)
    GTHAN           reduce using rule 117 (expression -> term produce_exp_quad .)
    EQUAL           reduce using rule 117 (expression -> term produce_exp_quad .)
    DIFFERENT       reduce using rule 117 (expression -> term produce_exp_quad .)
    AND             reduce using rule 117 (expression -> term produce_exp_quad .)
    OR              reduce using rule 117 (expression -> term produce_exp_quad .)
    RPAREN          reduce using rule 117 (expression -> term produce_exp_quad .)


state 161

    (118) term -> term MUL . push_operator term
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 207

state 162

    (119) term -> term DIV . push_operator term
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 208

state 163

    (120) term -> factor produce_term_quad .

    MUL             reduce using rule 120 (term -> factor produce_term_quad .)
    DIV             reduce using rule 120 (term -> factor produce_term_quad .)
    ADD             reduce using rule 120 (term -> factor produce_term_quad .)
    SUB             reduce using rule 120 (term -> factor produce_term_quad .)
    COMMA           reduce using rule 120 (term -> factor produce_term_quad .)
    SEMICOLON       reduce using rule 120 (term -> factor produce_term_quad .)
    RSQBRACKET      reduce using rule 120 (term -> factor produce_term_quad .)
    LTHAN           reduce using rule 120 (term -> factor produce_term_quad .)
    GTHAN           reduce using rule 120 (term -> factor produce_term_quad .)
    EQUAL           reduce using rule 120 (term -> factor produce_term_quad .)
    DIFFERENT       reduce using rule 120 (term -> factor produce_term_quad .)
    AND             reduce using rule 120 (term -> factor produce_term_quad .)
    OR              reduce using rule 120 (term -> factor produce_term_quad .)
    RPAREN          reduce using rule 120 (term -> factor produce_term_quad .)


state 164

    (129) factor -> LPAREN push_cap . expression RPAREN pop_cap
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 209
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 165

    (70) simple_assignment -> identifier ASSIGN push_operator expression .
    (115) expression -> expression . ADD push_operator expression
    (116) expression -> expression . SUB push_operator expression

    SEMICOLON       reduce using rule 70 (simple_assignment -> identifier ASSIGN push_operator expression .)
    ADD             shift and go to state 157
    SUB             shift and go to state 158


state 166

    (139) array_access -> identifier lsqbracket expression array_rsqbracket .

    ASSIGN          reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    MUL             reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    DIV             reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    ADD             reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    SUB             reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    COMMA           reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    SEMICOLON       reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    RSQBRACKET      reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    LTHAN           reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    GTHAN           reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    EQUAL           reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    DIFFERENT       reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    AND             reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    OR              reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)
    RPAREN          reduce using rule 139 (array_access -> identifier lsqbracket expression array_rsqbracket .)


state 167

    (140) matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 . matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (144) matrix_lsqbracket_2 -> . LSQBRACKET

    LSQBRACKET      shift and go to state 211

    matrix_lsqbracket_2            shift and go to state 210

state 168

    (142) array_rsqbracket -> RSQBRACKET .
    (143) matrix_rsqbracket_1 -> RSQBRACKET .

    ASSIGN          reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    MUL             reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    DIV             reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    ADD             reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    SUB             reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    COMMA           reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    SEMICOLON       reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    RSQBRACKET      reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    LTHAN           reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    GTHAN           reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    EQUAL           reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    DIFFERENT       reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    AND             reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    OR              reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    RPAREN          reduce using rule 142 (array_rsqbracket -> RSQBRACKET .)
    LSQBRACKET      reduce using rule 143 (matrix_rsqbracket_1 -> RSQBRACKET .)


state 169

    (73) condition -> IF cond_lparen hyper_expression cond_rparen . LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> IF cond_lparen hyper_expression cond_rparen . LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump

    LBRACKET        shift and go to state 212


state 170

    (107) hyper_expression -> hyper_expression AND . push_operator hyper_expression
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 213

state 171

    (108) hyper_expression -> hyper_expression OR . push_operator hyper_expression
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 214

state 172

    (78) cond_rparen -> RPAREN .

    LBRACKET        reduce using rule 78 (cond_rparen -> RPAREN .)


state 173

    (109) hyper_expression -> super_expression produce_hyperexp_quad .

    AND             reduce using rule 109 (hyper_expression -> super_expression produce_hyperexp_quad .)
    OR              reduce using rule 109 (hyper_expression -> super_expression produce_hyperexp_quad .)
    RPAREN          reduce using rule 109 (hyper_expression -> super_expression produce_hyperexp_quad .)
    COMMA           reduce using rule 109 (hyper_expression -> super_expression produce_hyperexp_quad .)


state 174

    (110) super_expression -> super_expression LTHAN . push_operator super_expression
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 215

state 175

    (111) super_expression -> super_expression GTHAN . push_operator super_expression
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 216

state 176

    (112) super_expression -> super_expression EQUAL . push_operator super_expression
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 217

state 177

    (113) super_expression -> super_expression DIFFERENT . push_operator super_expression
    (121) push_operator -> .

    LPAREN          reduce using rule 121 (push_operator -> .)
    ID              reduce using rule 121 (push_operator -> .)
    CONST_INT       reduce using rule 121 (push_operator -> .)
    CONST_FLOAT     reduce using rule 121 (push_operator -> .)
    MEAN            reduce using rule 121 (push_operator -> .)
    MEDIAN          reduce using rule 121 (push_operator -> .)
    MODE            reduce using rule 121 (push_operator -> .)
    STD             reduce using rule 121 (push_operator -> .)
    KURTOSIS        reduce using rule 121 (push_operator -> .)
    PLOT            reduce using rule 121 (push_operator -> .)
    DPLOT           reduce using rule 121 (push_operator -> .)
    VARIANCE        reduce using rule 121 (push_operator -> .)
    SIMMETRY        reduce using rule 121 (push_operator -> .)
    CORRELATION     reduce using rule 121 (push_operator -> .)
    DFREAD          reduce using rule 121 (push_operator -> .)
    HOMERO          reduce using rule 121 (push_operator -> .)
    MARGE           reduce using rule 121 (push_operator -> .)

    push_operator                  shift and go to state 218

state 178

    (114) super_expression -> expression produce_superexp_quad .

    LTHAN           reduce using rule 114 (super_expression -> expression produce_superexp_quad .)
    GTHAN           reduce using rule 114 (super_expression -> expression produce_superexp_quad .)
    EQUAL           reduce using rule 114 (super_expression -> expression produce_superexp_quad .)
    DIFFERENT       reduce using rule 114 (super_expression -> expression produce_superexp_quad .)
    AND             reduce using rule 114 (super_expression -> expression produce_superexp_quad .)
    OR              reduce using rule 114 (super_expression -> expression produce_superexp_quad .)
    RPAREN          reduce using rule 114 (super_expression -> expression produce_superexp_quad .)
    COMMA           reduce using rule 114 (super_expression -> expression produce_superexp_quad .)


state 179

    (81) loop -> repeat cond_lparen hyper_expression cond_rparen . LBRACKET statements RBRACKET fill_returning_jump

    LBRACKET        shift and go to state 219


state 180

    (85) function_call -> ID function_call_check function_call_lparen call_params0 . function_call_rparen
    (88) function_call_rparen -> . RPAREN

    RPAREN          shift and go to state 221

    function_call_rparen           shift and go to state 220

state 181

    (94) special_function_call -> MEAN LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    AND             reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    OR              reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 94 (special_function_call -> MEAN LPAREN call_params0 RPAREN .)


state 182

    (89) call_params0 -> hyper_expression handle_call_param . call_params1
    (91) call_params1 -> . COMMA hyper_expression handle_call_param call_params1
    (92) call_params1 -> . empty
    (148) empty -> .

    COMMA           shift and go to state 223
    RPAREN          reduce using rule 148 (empty -> .)

    call_params1                   shift and go to state 222
    empty                          shift and go to state 224

state 183

    (95) special_function_call -> MEDIAN LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    AND             reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    OR              reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 95 (special_function_call -> MEDIAN LPAREN call_params0 RPAREN .)


state 184

    (96) special_function_call -> MODE LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    AND             reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    OR              reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 96 (special_function_call -> MODE LPAREN call_params0 RPAREN .)


state 185

    (97) special_function_call -> STD LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    AND             reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    OR              reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 97 (special_function_call -> STD LPAREN call_params0 RPAREN .)


state 186

    (98) special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    AND             reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    OR              reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 98 (special_function_call -> KURTOSIS LPAREN call_params0 RPAREN .)


state 187

    (99) special_function_call -> PLOT LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    AND             reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    OR              reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 99 (special_function_call -> PLOT LPAREN call_params0 RPAREN .)


state 188

    (100) special_function_call -> DPLOT LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    AND             reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    OR              reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 100 (special_function_call -> DPLOT LPAREN call_params0 RPAREN .)


state 189

    (101) special_function_call -> VARIANCE LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    AND             reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    OR              reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 101 (special_function_call -> VARIANCE LPAREN call_params0 RPAREN .)


state 190

    (102) special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    AND             reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    OR              reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 102 (special_function_call -> SIMMETRY LPAREN call_params0 RPAREN .)


state 191

    (103) special_function_call -> CORRELATION LPAREN call_params0 RPAREN .

    SEMICOLON       reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    MUL             reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    DIV             reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    ADD             reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    SUB             reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    COMMA           reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    RSQBRACKET      reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    LTHAN           reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    GTHAN           reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    EQUAL           reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    DIFFERENT       reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    AND             reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    OR              reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)
    RPAREN          reduce using rule 103 (special_function_call -> CORRELATION LPAREN call_params0 RPAREN .)


state 192

    (104) special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .

    SEMICOLON       reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    MUL             reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    DIV             reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    ADD             reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    SUB             reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    COMMA           reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    RSQBRACKET      reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    LTHAN           reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    GTHAN           reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    EQUAL           reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    DIFFERENT       reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    AND             reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    OR              reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)
    RPAREN          reduce using rule 104 (special_function_call -> DFREAD LPAREN CONST_TEXT RPAREN .)


state 193

    (71) array_assignment -> array_access ASSIGN push_operator expression .
    (115) expression -> expression . ADD push_operator expression
    (116) expression -> expression . SUB push_operator expression

    SEMICOLON       reduce using rule 71 (array_assignment -> array_access ASSIGN push_operator expression .)
    ADD             shift and go to state 157
    SUB             shift and go to state 158


state 194

    (72) matrix_assignment -> matrix_access ASSIGN push_operator expression .
    (115) expression -> expression . ADD push_operator expression
    (116) expression -> expression . SUB push_operator expression

    SEMICOLON       reduce using rule 72 (matrix_assignment -> matrix_access ASSIGN push_operator expression .)
    ADD             shift and go to state 157
    SUB             shift and go to state 158


state 195

    (27) simple_declaration -> ID COLON var_type SEMICOLON .

    VAR             reduce using rule 27 (simple_declaration -> ID COLON var_type SEMICOLON .)
    INSTRUCTIONS    reduce using rule 27 (simple_declaration -> ID COLON var_type SEMICOLON .)
    PROCEDURES      reduce using rule 27 (simple_declaration -> ID COLON var_type SEMICOLON .)
    BEGIN           reduce using rule 27 (simple_declaration -> ID COLON var_type SEMICOLON .)
    RSQBRACKET      reduce using rule 27 (simple_declaration -> ID COLON var_type SEMICOLON .)
    RBRACKET        reduce using rule 27 (simple_declaration -> ID COLON var_type SEMICOLON .)


state 196

    (28) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET . COLON type SEMICOLON
    (29) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET . LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON

    COLON           shift and go to state 226
    LSQBRACKET      shift and go to state 225


state 197

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block . fill_main_jump instructions_block RSQBRACKET
    (3) fill_main_jump -> .

    INSTRUCTIONS    reduce using rule 3 (fill_main_jump -> .)
    RSQBRACKET      reduce using rule 3 (fill_main_jump -> .)

    fill_main_jump                 shift and go to state 227

state 198

    (6) local_vars_block -> LOCALS . COLON var_declarations

    COLON           shift and go to state 228


state 199

    (7) local_vars_block -> empty .

    INSTRUCTIONS    reduce using rule 7 (local_vars_block -> empty .)
    RSQBRACKET      reduce using rule 7 (local_vars_block -> empty .)
    RBRACKET        reduce using rule 7 (local_vars_block -> empty .)


state 200

    (34) function_declarations -> PROC ID proc_scope_init LPAREN . params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (35) function_declarations -> PROC ID proc_scope_init LPAREN . params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations
    (44) params0 -> . param params1
    (45) params0 -> . empty
    (48) param -> . ID COLON type
    (148) empty -> .

    ID              shift and go to state 229
    RPAREN          reduce using rule 148 (empty -> .)

    params0                        shift and go to state 230
    param                          shift and go to state 231
    empty                          shift and go to state 232

state 201

    (58) write_params0 -> write_operator expression produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 58 (write_params0 -> write_operator expression produce_write_quad write_params1 .)


state 202

    (60) write_params1 -> COMMA . write_operator expression produce_write_quad write_params1
    (61) write_params1 -> COMMA . write_operator const_text produce_write_quad write_params1
    (64) write_operator -> .

    CONST_TEXT      reduce using rule 64 (write_operator -> .)
    LPAREN          reduce using rule 64 (write_operator -> .)
    ID              reduce using rule 64 (write_operator -> .)
    CONST_INT       reduce using rule 64 (write_operator -> .)
    CONST_FLOAT     reduce using rule 64 (write_operator -> .)
    MEAN            reduce using rule 64 (write_operator -> .)
    MEDIAN          reduce using rule 64 (write_operator -> .)
    MODE            reduce using rule 64 (write_operator -> .)
    STD             reduce using rule 64 (write_operator -> .)
    KURTOSIS        reduce using rule 64 (write_operator -> .)
    PLOT            reduce using rule 64 (write_operator -> .)
    DPLOT           reduce using rule 64 (write_operator -> .)
    VARIANCE        reduce using rule 64 (write_operator -> .)
    SIMMETRY        reduce using rule 64 (write_operator -> .)
    CORRELATION     reduce using rule 64 (write_operator -> .)
    DFREAD          reduce using rule 64 (write_operator -> .)
    HOMERO          reduce using rule 64 (write_operator -> .)
    MARGE           reduce using rule 64 (write_operator -> .)

    write_operator                 shift and go to state 233

state 203

    (62) write_params1 -> empty .

    SEMICOLON       reduce using rule 62 (write_params1 -> empty .)


state 204

    (115) expression -> expression ADD push_operator . expression
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 234
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 205

    (116) expression -> expression SUB push_operator . expression
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 235
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 206

    (59) write_params0 -> write_operator const_text produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 59 (write_params0 -> write_operator const_text produce_write_quad write_params1 .)


state 207

    (118) term -> term MUL push_operator . term
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    term                           shift and go to state 236
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 208

    (119) term -> term DIV push_operator . term
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    term                           shift and go to state 237
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 209

    (129) factor -> LPAREN push_cap expression . RPAREN pop_cap
    (115) expression -> expression . ADD push_operator expression
    (116) expression -> expression . SUB push_operator expression

    RPAREN          shift and go to state 238
    ADD             shift and go to state 157
    SUB             shift and go to state 158


state 210

    (140) matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 . expression matrix_rsqbracket_2
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    identifier                     shift and go to state 112
    expression                     shift and go to state 239
    term                           shift and go to state 109
    factor                         shift and go to state 111
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 211

    (144) matrix_lsqbracket_2 -> LSQBRACKET .

    LPAREN          reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    ID              reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    CONST_INT       reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    CONST_FLOAT     reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    MEAN            reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    MEDIAN          reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    MODE            reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    STD             reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    KURTOSIS        reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    PLOT            reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    DPLOT           reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    VARIANCE        reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    SIMMETRY        reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    CORRELATION     reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    DFREAD          reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    HOMERO          reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)
    MARGE           reduce using rule 144 (matrix_lsqbracket_2 -> LSQBRACKET .)


state 212

    (73) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET . statements RBRACKET fill_pending_jump
    (74) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET . statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (49) statements -> . write SEMICOLON statements
    (50) statements -> . read SEMICOLON statements
    (51) statements -> . var_assignment SEMICOLON statements
    (52) statements -> . condition statements
    (53) statements -> . loop statements
    (54) statements -> . function_call SEMICOLON statements
    (55) statements -> . special_function_call SEMICOLON statements
    (56) statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (73) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (81) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    statements                     shift and go to state 240
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 213

    (107) hyper_expression -> hyper_expression AND push_operator . hyper_expression
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    hyper_expression               shift and go to state 241
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 214

    (108) hyper_expression -> hyper_expression OR push_operator . hyper_expression
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    hyper_expression               shift and go to state 242
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 215

    (110) super_expression -> super_expression LTHAN push_operator . super_expression
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    super_expression               shift and go to state 243
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 216

    (111) super_expression -> super_expression GTHAN push_operator . super_expression
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    super_expression               shift and go to state 244
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 217

    (112) super_expression -> super_expression EQUAL push_operator . super_expression
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    super_expression               shift and go to state 245
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 218

    (113) super_expression -> super_expression DIFFERENT push_operator . super_expression
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    super_expression               shift and go to state 246
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 219

    (81) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET . statements RBRACKET fill_returning_jump
    (49) statements -> . write SEMICOLON statements
    (50) statements -> . read SEMICOLON statements
    (51) statements -> . var_assignment SEMICOLON statements
    (52) statements -> . condition statements
    (53) statements -> . loop statements
    (54) statements -> . function_call SEMICOLON statements
    (55) statements -> . special_function_call SEMICOLON statements
    (56) statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (73) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (81) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    repeat                         shift and go to state 39
    statements                     shift and go to state 247
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 220

    (85) function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .

    SEMICOLON       reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    MUL             reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    DIV             reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    ADD             reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    SUB             reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    COMMA           reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    RSQBRACKET      reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    LTHAN           reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    GTHAN           reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    EQUAL           reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    DIFFERENT       reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    AND             reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    OR              reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)
    RPAREN          reduce using rule 85 (function_call -> ID function_call_check function_call_lparen call_params0 function_call_rparen .)


state 221

    (88) function_call_rparen -> RPAREN .

    SEMICOLON       reduce using rule 88 (function_call_rparen -> RPAREN .)
    MUL             reduce using rule 88 (function_call_rparen -> RPAREN .)
    DIV             reduce using rule 88 (function_call_rparen -> RPAREN .)
    ADD             reduce using rule 88 (function_call_rparen -> RPAREN .)
    SUB             reduce using rule 88 (function_call_rparen -> RPAREN .)
    COMMA           reduce using rule 88 (function_call_rparen -> RPAREN .)
    RSQBRACKET      reduce using rule 88 (function_call_rparen -> RPAREN .)
    LTHAN           reduce using rule 88 (function_call_rparen -> RPAREN .)
    GTHAN           reduce using rule 88 (function_call_rparen -> RPAREN .)
    EQUAL           reduce using rule 88 (function_call_rparen -> RPAREN .)
    DIFFERENT       reduce using rule 88 (function_call_rparen -> RPAREN .)
    AND             reduce using rule 88 (function_call_rparen -> RPAREN .)
    OR              reduce using rule 88 (function_call_rparen -> RPAREN .)
    RPAREN          reduce using rule 88 (function_call_rparen -> RPAREN .)


state 222

    (89) call_params0 -> hyper_expression handle_call_param call_params1 .

    RPAREN          reduce using rule 89 (call_params0 -> hyper_expression handle_call_param call_params1 .)


state 223

    (91) call_params1 -> COMMA . hyper_expression handle_call_param call_params1
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    hyper_expression               shift and go to state 248
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 224

    (92) call_params1 -> empty .

    RPAREN          reduce using rule 92 (call_params1 -> empty .)


state 225

    (29) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET . CONST_INT RSQBRACKET COLON type SEMICOLON

    CONST_INT       shift and go to state 249


state 226

    (28) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON . type SEMICOLON
    (146) type -> . INT
    (147) type -> . FLOAT

    INT             shift and go to state 151
    FLOAT           shift and go to state 152

    type                           shift and go to state 250

state 227

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump . instructions_block RSQBRACKET
    (8) instructions_block -> . INSTRUCTIONS COLON statements
    (9) instructions_block -> . empty
    (148) empty -> .

    INSTRUCTIONS    shift and go to state 11
    RSQBRACKET      reduce using rule 148 (empty -> .)

    instructions_block             shift and go to state 251
    empty                          shift and go to state 12

state 228

    (6) local_vars_block -> LOCALS COLON . var_declarations
    (23) var_declarations -> . VAR simple_declaration var_declarations
    (24) var_declarations -> . VAR array_declaration var_declarations
    (25) var_declarations -> . VAR matrix_declaration var_declarations
    (26) var_declarations -> . empty
    (148) empty -> .

    VAR             shift and go to state 19
    INSTRUCTIONS    reduce using rule 148 (empty -> .)
    RSQBRACKET      reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)

    var_declarations               shift and go to state 252
    empty                          shift and go to state 20

state 229

    (48) param -> ID . COLON type

    COLON           shift and go to state 253


state 230

    (34) function_declarations -> PROC ID proc_scope_init LPAREN params0 . RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (35) function_declarations -> PROC ID proc_scope_init LPAREN params0 . RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations

    RPAREN          shift and go to state 254


state 231

    (44) params0 -> param . params1
    (46) params1 -> . COMMA param params1
    (47) params1 -> . empty
    (148) empty -> .

    COMMA           shift and go to state 256
    RPAREN          reduce using rule 148 (empty -> .)

    params1                        shift and go to state 255
    empty                          shift and go to state 257

state 232

    (45) params0 -> empty .

    RPAREN          reduce using rule 45 (params0 -> empty .)


state 233

    (60) write_params1 -> COMMA write_operator . expression produce_write_quad write_params1
    (61) write_params1 -> COMMA write_operator . const_text produce_write_quad write_params1
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (63) const_text -> . CONST_TEXT
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    CONST_TEXT      shift and go to state 110
    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 258
    const_text                     shift and go to state 259
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 234

    (115) expression -> expression ADD push_operator expression .
    (115) expression -> expression . ADD push_operator expression
    (116) expression -> expression . SUB push_operator expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    COMMA           reduce using rule 115 (expression -> expression ADD push_operator expression .)
    SEMICOLON       reduce using rule 115 (expression -> expression ADD push_operator expression .)
    RSQBRACKET      reduce using rule 115 (expression -> expression ADD push_operator expression .)
    LTHAN           reduce using rule 115 (expression -> expression ADD push_operator expression .)
    GTHAN           reduce using rule 115 (expression -> expression ADD push_operator expression .)
    EQUAL           reduce using rule 115 (expression -> expression ADD push_operator expression .)
    DIFFERENT       reduce using rule 115 (expression -> expression ADD push_operator expression .)
    AND             reduce using rule 115 (expression -> expression ADD push_operator expression .)
    OR              reduce using rule 115 (expression -> expression ADD push_operator expression .)
    RPAREN          reduce using rule 115 (expression -> expression ADD push_operator expression .)
    ADD             shift and go to state 157
    SUB             shift and go to state 158

  ! ADD             [ reduce using rule 115 (expression -> expression ADD push_operator expression .) ]
  ! SUB             [ reduce using rule 115 (expression -> expression ADD push_operator expression .) ]


state 235

    (116) expression -> expression SUB push_operator expression .
    (115) expression -> expression . ADD push_operator expression
    (116) expression -> expression . SUB push_operator expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    COMMA           reduce using rule 116 (expression -> expression SUB push_operator expression .)
    SEMICOLON       reduce using rule 116 (expression -> expression SUB push_operator expression .)
    RSQBRACKET      reduce using rule 116 (expression -> expression SUB push_operator expression .)
    LTHAN           reduce using rule 116 (expression -> expression SUB push_operator expression .)
    GTHAN           reduce using rule 116 (expression -> expression SUB push_operator expression .)
    EQUAL           reduce using rule 116 (expression -> expression SUB push_operator expression .)
    DIFFERENT       reduce using rule 116 (expression -> expression SUB push_operator expression .)
    AND             reduce using rule 116 (expression -> expression SUB push_operator expression .)
    OR              reduce using rule 116 (expression -> expression SUB push_operator expression .)
    RPAREN          reduce using rule 116 (expression -> expression SUB push_operator expression .)
    ADD             shift and go to state 157
    SUB             shift and go to state 158

  ! ADD             [ reduce using rule 116 (expression -> expression SUB push_operator expression .) ]
  ! SUB             [ reduce using rule 116 (expression -> expression SUB push_operator expression .) ]


state 236

    (118) term -> term MUL push_operator term .
    (118) term -> term . MUL push_operator term
    (119) term -> term . DIV push_operator term

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    ADD             reduce using rule 118 (term -> term MUL push_operator term .)
    SUB             reduce using rule 118 (term -> term MUL push_operator term .)
    COMMA           reduce using rule 118 (term -> term MUL push_operator term .)
    SEMICOLON       reduce using rule 118 (term -> term MUL push_operator term .)
    RSQBRACKET      reduce using rule 118 (term -> term MUL push_operator term .)
    LTHAN           reduce using rule 118 (term -> term MUL push_operator term .)
    GTHAN           reduce using rule 118 (term -> term MUL push_operator term .)
    EQUAL           reduce using rule 118 (term -> term MUL push_operator term .)
    DIFFERENT       reduce using rule 118 (term -> term MUL push_operator term .)
    AND             reduce using rule 118 (term -> term MUL push_operator term .)
    OR              reduce using rule 118 (term -> term MUL push_operator term .)
    RPAREN          reduce using rule 118 (term -> term MUL push_operator term .)
    MUL             shift and go to state 161
    DIV             shift and go to state 162

  ! MUL             [ reduce using rule 118 (term -> term MUL push_operator term .) ]
  ! DIV             [ reduce using rule 118 (term -> term MUL push_operator term .) ]


state 237

    (119) term -> term DIV push_operator term .
    (118) term -> term . MUL push_operator term
    (119) term -> term . DIV push_operator term

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    ADD             reduce using rule 119 (term -> term DIV push_operator term .)
    SUB             reduce using rule 119 (term -> term DIV push_operator term .)
    COMMA           reduce using rule 119 (term -> term DIV push_operator term .)
    SEMICOLON       reduce using rule 119 (term -> term DIV push_operator term .)
    RSQBRACKET      reduce using rule 119 (term -> term DIV push_operator term .)
    LTHAN           reduce using rule 119 (term -> term DIV push_operator term .)
    GTHAN           reduce using rule 119 (term -> term DIV push_operator term .)
    EQUAL           reduce using rule 119 (term -> term DIV push_operator term .)
    DIFFERENT       reduce using rule 119 (term -> term DIV push_operator term .)
    AND             reduce using rule 119 (term -> term DIV push_operator term .)
    OR              reduce using rule 119 (term -> term DIV push_operator term .)
    RPAREN          reduce using rule 119 (term -> term DIV push_operator term .)
    MUL             shift and go to state 161
    DIV             shift and go to state 162

  ! MUL             [ reduce using rule 119 (term -> term DIV push_operator term .) ]
  ! DIV             [ reduce using rule 119 (term -> term DIV push_operator term .) ]


state 238

    (129) factor -> LPAREN push_cap expression RPAREN . pop_cap
    (138) pop_cap -> .

    MUL             reduce using rule 138 (pop_cap -> .)
    DIV             reduce using rule 138 (pop_cap -> .)
    ADD             reduce using rule 138 (pop_cap -> .)
    SUB             reduce using rule 138 (pop_cap -> .)
    COMMA           reduce using rule 138 (pop_cap -> .)
    SEMICOLON       reduce using rule 138 (pop_cap -> .)
    RSQBRACKET      reduce using rule 138 (pop_cap -> .)
    LTHAN           reduce using rule 138 (pop_cap -> .)
    GTHAN           reduce using rule 138 (pop_cap -> .)
    EQUAL           reduce using rule 138 (pop_cap -> .)
    DIFFERENT       reduce using rule 138 (pop_cap -> .)
    AND             reduce using rule 138 (pop_cap -> .)
    OR              reduce using rule 138 (pop_cap -> .)
    RPAREN          reduce using rule 138 (pop_cap -> .)

    pop_cap                        shift and go to state 260

state 239

    (140) matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression . matrix_rsqbracket_2
    (115) expression -> expression . ADD push_operator expression
    (116) expression -> expression . SUB push_operator expression
    (145) matrix_rsqbracket_2 -> . RSQBRACKET

    ADD             shift and go to state 157
    SUB             shift and go to state 158
    RSQBRACKET      shift and go to state 262

    matrix_rsqbracket_2            shift and go to state 261

state 240

    (73) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements . RBRACKET fill_pending_jump
    (74) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements . RBRACKET else LBRACKET statements RBRACKET fill_pending_jump

    RBRACKET        shift and go to state 263


state 241

    (107) hyper_expression -> hyper_expression AND push_operator hyper_expression .
    (107) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (108) hyper_expression -> hyper_expression . OR push_operator hyper_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 107 (hyper_expression -> hyper_expression AND push_operator hyper_expression .)
    COMMA           reduce using rule 107 (hyper_expression -> hyper_expression AND push_operator hyper_expression .)
    AND             shift and go to state 170
    OR              shift and go to state 171

  ! AND             [ reduce using rule 107 (hyper_expression -> hyper_expression AND push_operator hyper_expression .) ]
  ! OR              [ reduce using rule 107 (hyper_expression -> hyper_expression AND push_operator hyper_expression .) ]


state 242

    (108) hyper_expression -> hyper_expression OR push_operator hyper_expression .
    (107) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (108) hyper_expression -> hyper_expression . OR push_operator hyper_expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 108 (hyper_expression -> hyper_expression OR push_operator hyper_expression .)
    COMMA           reduce using rule 108 (hyper_expression -> hyper_expression OR push_operator hyper_expression .)
    AND             shift and go to state 170
    OR              shift and go to state 171

  ! AND             [ reduce using rule 108 (hyper_expression -> hyper_expression OR push_operator hyper_expression .) ]
  ! OR              [ reduce using rule 108 (hyper_expression -> hyper_expression OR push_operator hyper_expression .) ]


state 243

    (110) super_expression -> super_expression LTHAN push_operator super_expression .
    (110) super_expression -> super_expression . LTHAN push_operator super_expression
    (111) super_expression -> super_expression . GTHAN push_operator super_expression
    (112) super_expression -> super_expression . EQUAL push_operator super_expression
    (113) super_expression -> super_expression . DIFFERENT push_operator super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 110 (super_expression -> super_expression LTHAN push_operator super_expression .)
    OR              reduce using rule 110 (super_expression -> super_expression LTHAN push_operator super_expression .)
    RPAREN          reduce using rule 110 (super_expression -> super_expression LTHAN push_operator super_expression .)
    COMMA           reduce using rule 110 (super_expression -> super_expression LTHAN push_operator super_expression .)
    LTHAN           shift and go to state 174
    GTHAN           shift and go to state 175
    EQUAL           shift and go to state 176
    DIFFERENT       shift and go to state 177

  ! LTHAN           [ reduce using rule 110 (super_expression -> super_expression LTHAN push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 110 (super_expression -> super_expression LTHAN push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 110 (super_expression -> super_expression LTHAN push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 110 (super_expression -> super_expression LTHAN push_operator super_expression .) ]


state 244

    (111) super_expression -> super_expression GTHAN push_operator super_expression .
    (110) super_expression -> super_expression . LTHAN push_operator super_expression
    (111) super_expression -> super_expression . GTHAN push_operator super_expression
    (112) super_expression -> super_expression . EQUAL push_operator super_expression
    (113) super_expression -> super_expression . DIFFERENT push_operator super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 111 (super_expression -> super_expression GTHAN push_operator super_expression .)
    OR              reduce using rule 111 (super_expression -> super_expression GTHAN push_operator super_expression .)
    RPAREN          reduce using rule 111 (super_expression -> super_expression GTHAN push_operator super_expression .)
    COMMA           reduce using rule 111 (super_expression -> super_expression GTHAN push_operator super_expression .)
    LTHAN           shift and go to state 174
    GTHAN           shift and go to state 175
    EQUAL           shift and go to state 176
    DIFFERENT       shift and go to state 177

  ! LTHAN           [ reduce using rule 111 (super_expression -> super_expression GTHAN push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 111 (super_expression -> super_expression GTHAN push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 111 (super_expression -> super_expression GTHAN push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 111 (super_expression -> super_expression GTHAN push_operator super_expression .) ]


state 245

    (112) super_expression -> super_expression EQUAL push_operator super_expression .
    (110) super_expression -> super_expression . LTHAN push_operator super_expression
    (111) super_expression -> super_expression . GTHAN push_operator super_expression
    (112) super_expression -> super_expression . EQUAL push_operator super_expression
    (113) super_expression -> super_expression . DIFFERENT push_operator super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 112 (super_expression -> super_expression EQUAL push_operator super_expression .)
    OR              reduce using rule 112 (super_expression -> super_expression EQUAL push_operator super_expression .)
    RPAREN          reduce using rule 112 (super_expression -> super_expression EQUAL push_operator super_expression .)
    COMMA           reduce using rule 112 (super_expression -> super_expression EQUAL push_operator super_expression .)
    LTHAN           shift and go to state 174
    GTHAN           shift and go to state 175
    EQUAL           shift and go to state 176
    DIFFERENT       shift and go to state 177

  ! LTHAN           [ reduce using rule 112 (super_expression -> super_expression EQUAL push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 112 (super_expression -> super_expression EQUAL push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 112 (super_expression -> super_expression EQUAL push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 112 (super_expression -> super_expression EQUAL push_operator super_expression .) ]


state 246

    (113) super_expression -> super_expression DIFFERENT push_operator super_expression .
    (110) super_expression -> super_expression . LTHAN push_operator super_expression
    (111) super_expression -> super_expression . GTHAN push_operator super_expression
    (112) super_expression -> super_expression . EQUAL push_operator super_expression
    (113) super_expression -> super_expression . DIFFERENT push_operator super_expression

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 113 (super_expression -> super_expression DIFFERENT push_operator super_expression .)
    OR              reduce using rule 113 (super_expression -> super_expression DIFFERENT push_operator super_expression .)
    RPAREN          reduce using rule 113 (super_expression -> super_expression DIFFERENT push_operator super_expression .)
    COMMA           reduce using rule 113 (super_expression -> super_expression DIFFERENT push_operator super_expression .)
    LTHAN           shift and go to state 174
    GTHAN           shift and go to state 175
    EQUAL           shift and go to state 176
    DIFFERENT       shift and go to state 177

  ! LTHAN           [ reduce using rule 113 (super_expression -> super_expression DIFFERENT push_operator super_expression .) ]
  ! GTHAN           [ reduce using rule 113 (super_expression -> super_expression DIFFERENT push_operator super_expression .) ]
  ! EQUAL           [ reduce using rule 113 (super_expression -> super_expression DIFFERENT push_operator super_expression .) ]
  ! DIFFERENT       [ reduce using rule 113 (super_expression -> super_expression DIFFERENT push_operator super_expression .) ]


state 247

    (81) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements . RBRACKET fill_returning_jump

    RBRACKET        shift and go to state 264


state 248

    (91) call_params1 -> COMMA hyper_expression . handle_call_param call_params1
    (107) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (108) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (93) handle_call_param -> .

    AND             shift and go to state 170
    OR              shift and go to state 171
    COMMA           reduce using rule 93 (handle_call_param -> .)
    RPAREN          reduce using rule 93 (handle_call_param -> .)

    handle_call_param              shift and go to state 265

state 249

    (29) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT . RSQBRACKET COLON type SEMICOLON

    RSQBRACKET      shift and go to state 266


state 250

    (28) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type . SEMICOLON

    SEMICOLON       shift and go to state 267


state 251

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block . RSQBRACKET

    RSQBRACKET      shift and go to state 268


state 252

    (6) local_vars_block -> LOCALS COLON var_declarations .

    INSTRUCTIONS    reduce using rule 6 (local_vars_block -> LOCALS COLON var_declarations .)
    RSQBRACKET      reduce using rule 6 (local_vars_block -> LOCALS COLON var_declarations .)
    RBRACKET        reduce using rule 6 (local_vars_block -> LOCALS COLON var_declarations .)


state 253

    (48) param -> ID COLON . type
    (146) type -> . INT
    (147) type -> . FLOAT

    INT             shift and go to state 151
    FLOAT           shift and go to state 152

    type                           shift and go to state 269

state 254

    (34) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN . COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (35) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN . COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations

    COLON           shift and go to state 270


state 255

    (44) params0 -> param params1 .

    RPAREN          reduce using rule 44 (params0 -> param params1 .)


state 256

    (46) params1 -> COMMA . param params1
    (48) param -> . ID COLON type

    ID              shift and go to state 229

    param                          shift and go to state 271

state 257

    (47) params1 -> empty .

    RPAREN          reduce using rule 47 (params1 -> empty .)


state 258

    (60) write_params1 -> COMMA write_operator expression . produce_write_quad write_params1
    (115) expression -> expression . ADD push_operator expression
    (116) expression -> expression . SUB push_operator expression
    (65) produce_write_quad -> .

    ADD             shift and go to state 157
    SUB             shift and go to state 158
    COMMA           reduce using rule 65 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 65 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 272

state 259

    (61) write_params1 -> COMMA write_operator const_text . produce_write_quad write_params1
    (65) produce_write_quad -> .

    COMMA           reduce using rule 65 (produce_write_quad -> .)
    SEMICOLON       reduce using rule 65 (produce_write_quad -> .)

    produce_write_quad             shift and go to state 273

state 260

    (129) factor -> LPAREN push_cap expression RPAREN pop_cap .

    MUL             reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    DIV             reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    ADD             reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    SUB             reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    COMMA           reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    SEMICOLON       reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    RSQBRACKET      reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    LTHAN           reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    GTHAN           reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    EQUAL           reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    DIFFERENT       reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    AND             reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    OR              reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)
    RPAREN          reduce using rule 129 (factor -> LPAREN push_cap expression RPAREN pop_cap .)


state 261

    (140) matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .

    ASSIGN          reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    MUL             reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    DIV             reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    ADD             reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    SUB             reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    COMMA           reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    SEMICOLON       reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    RSQBRACKET      reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    LTHAN           reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    GTHAN           reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    EQUAL           reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    DIFFERENT       reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    AND             reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    OR              reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)
    RPAREN          reduce using rule 140 (matrix_access -> identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2 .)


state 262

    (145) matrix_rsqbracket_2 -> RSQBRACKET .

    ASSIGN          reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    MUL             reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    DIV             reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    ADD             reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    SUB             reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    COMMA           reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    SEMICOLON       reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    RSQBRACKET      reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    LTHAN           reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    GTHAN           reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    EQUAL           reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    DIFFERENT       reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    AND             reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    OR              reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)
    RPAREN          reduce using rule 145 (matrix_rsqbracket_2 -> RSQBRACKET .)


state 263

    (73) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET . fill_pending_jump
    (74) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET . else LBRACKET statements RBRACKET fill_pending_jump
    (79) fill_pending_jump -> .
    (80) else -> . ELSE

    WRITE           reduce using rule 79 (fill_pending_jump -> .)
    READ            reduce using rule 79 (fill_pending_jump -> .)
    IF              reduce using rule 79 (fill_pending_jump -> .)
    ID              reduce using rule 79 (fill_pending_jump -> .)
    MEAN            reduce using rule 79 (fill_pending_jump -> .)
    MEDIAN          reduce using rule 79 (fill_pending_jump -> .)
    MODE            reduce using rule 79 (fill_pending_jump -> .)
    STD             reduce using rule 79 (fill_pending_jump -> .)
    KURTOSIS        reduce using rule 79 (fill_pending_jump -> .)
    PLOT            reduce using rule 79 (fill_pending_jump -> .)
    DPLOT           reduce using rule 79 (fill_pending_jump -> .)
    VARIANCE        reduce using rule 79 (fill_pending_jump -> .)
    SIMMETRY        reduce using rule 79 (fill_pending_jump -> .)
    CORRELATION     reduce using rule 79 (fill_pending_jump -> .)
    DFREAD          reduce using rule 79 (fill_pending_jump -> .)
    HOMERO          reduce using rule 79 (fill_pending_jump -> .)
    MARGE           reduce using rule 79 (fill_pending_jump -> .)
    REPEAT          reduce using rule 79 (fill_pending_jump -> .)
    PROCEDURES      reduce using rule 79 (fill_pending_jump -> .)
    BEGIN           reduce using rule 79 (fill_pending_jump -> .)
    RSQBRACKET      reduce using rule 79 (fill_pending_jump -> .)
    RBRACKET        reduce using rule 79 (fill_pending_jump -> .)
    ELSE            shift and go to state 276

    fill_pending_jump              shift and go to state 274
    else                           shift and go to state 275

state 264

    (81) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET . fill_returning_jump
    (84) fill_returning_jump -> .

    WRITE           reduce using rule 84 (fill_returning_jump -> .)
    READ            reduce using rule 84 (fill_returning_jump -> .)
    IF              reduce using rule 84 (fill_returning_jump -> .)
    ID              reduce using rule 84 (fill_returning_jump -> .)
    MEAN            reduce using rule 84 (fill_returning_jump -> .)
    MEDIAN          reduce using rule 84 (fill_returning_jump -> .)
    MODE            reduce using rule 84 (fill_returning_jump -> .)
    STD             reduce using rule 84 (fill_returning_jump -> .)
    KURTOSIS        reduce using rule 84 (fill_returning_jump -> .)
    PLOT            reduce using rule 84 (fill_returning_jump -> .)
    DPLOT           reduce using rule 84 (fill_returning_jump -> .)
    VARIANCE        reduce using rule 84 (fill_returning_jump -> .)
    SIMMETRY        reduce using rule 84 (fill_returning_jump -> .)
    CORRELATION     reduce using rule 84 (fill_returning_jump -> .)
    DFREAD          reduce using rule 84 (fill_returning_jump -> .)
    HOMERO          reduce using rule 84 (fill_returning_jump -> .)
    MARGE           reduce using rule 84 (fill_returning_jump -> .)
    REPEAT          reduce using rule 84 (fill_returning_jump -> .)
    PROCEDURES      reduce using rule 84 (fill_returning_jump -> .)
    BEGIN           reduce using rule 84 (fill_returning_jump -> .)
    RSQBRACKET      reduce using rule 84 (fill_returning_jump -> .)
    RBRACKET        reduce using rule 84 (fill_returning_jump -> .)

    fill_returning_jump            shift and go to state 277

state 265

    (91) call_params1 -> COMMA hyper_expression handle_call_param . call_params1
    (91) call_params1 -> . COMMA hyper_expression handle_call_param call_params1
    (92) call_params1 -> . empty
    (148) empty -> .

    COMMA           shift and go to state 223
    RPAREN          reduce using rule 148 (empty -> .)

    call_params1                   shift and go to state 278
    empty                          shift and go to state 224

state 266

    (29) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET . COLON type SEMICOLON

    COLON           shift and go to state 279


state 267

    (28) array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .

    VAR             reduce using rule 28 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    INSTRUCTIONS    reduce using rule 28 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    PROCEDURES      reduce using rule 28 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    BEGIN           reduce using rule 28 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RSQBRACKET      reduce using rule 28 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RBRACKET        reduce using rule 28 (array_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)


state 268

    (1) routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET .

    $end            reduce using rule 1 (routine -> routine_init ID SEMICOLON global_scope_init global_vars_block instructions_block function_block BEGIN COLON LSQBRACKET local_scope_init local_vars_block fill_main_jump instructions_block RSQBRACKET .)


state 269

    (48) param -> ID COLON type .

    COMMA           reduce using rule 48 (param -> ID COLON type .)
    RPAREN          reduce using rule 48 (param -> ID COLON type .)


state 270

    (34) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON . VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (35) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON . func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations
    (43) func_type -> . type
    (146) type -> . INT
    (147) type -> . FLOAT

    VOID            shift and go to state 280
    INT             shift and go to state 151
    FLOAT           shift and go to state 152

    func_type                      shift and go to state 281
    type                           shift and go to state 282

state 271

    (46) params1 -> COMMA param . params1
    (46) params1 -> . COMMA param params1
    (47) params1 -> . empty
    (148) empty -> .

    COMMA           shift and go to state 256
    RPAREN          reduce using rule 148 (empty -> .)

    params1                        shift and go to state 283
    empty                          shift and go to state 257

state 272

    (60) write_params1 -> COMMA write_operator expression produce_write_quad . write_params1
    (60) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (61) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (62) write_params1 -> . empty
    (148) empty -> .

    COMMA           shift and go to state 202
    SEMICOLON       reduce using rule 148 (empty -> .)

    write_params1                  shift and go to state 284
    empty                          shift and go to state 203

state 273

    (61) write_params1 -> COMMA write_operator const_text produce_write_quad . write_params1
    (60) write_params1 -> . COMMA write_operator expression produce_write_quad write_params1
    (61) write_params1 -> . COMMA write_operator const_text produce_write_quad write_params1
    (62) write_params1 -> . empty
    (148) empty -> .

    COMMA           shift and go to state 202
    SEMICOLON       reduce using rule 148 (empty -> .)

    write_params1                  shift and go to state 285
    empty                          shift and go to state 203

state 274

    (73) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .

    WRITE           reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    READ            reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    IF              reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    ID              reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MEAN            reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MEDIAN          reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MODE            reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    STD             reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    KURTOSIS        reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    PLOT            reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    DPLOT           reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    VARIANCE        reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    SIMMETRY        reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    CORRELATION     reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    DFREAD          reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    HOMERO          reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    MARGE           reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    REPEAT          reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    PROCEDURES      reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    BEGIN           reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    RSQBRACKET      reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)
    RBRACKET        reduce using rule 73 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump .)


state 275

    (74) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else . LBRACKET statements RBRACKET fill_pending_jump

    LBRACKET        shift and go to state 286


state 276

    (80) else -> ELSE .

    LBRACKET        reduce using rule 80 (else -> ELSE .)


state 277

    (81) loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .

    WRITE           reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    READ            reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    IF              reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    ID              reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MEAN            reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MEDIAN          reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MODE            reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    STD             reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    KURTOSIS        reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    PLOT            reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    DPLOT           reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    VARIANCE        reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    SIMMETRY        reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    CORRELATION     reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    DFREAD          reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    HOMERO          reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    MARGE           reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    REPEAT          reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    PROCEDURES      reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    BEGIN           reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    RSQBRACKET      reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)
    RBRACKET        reduce using rule 81 (loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump .)


state 278

    (91) call_params1 -> COMMA hyper_expression handle_call_param call_params1 .

    RPAREN          reduce using rule 91 (call_params1 -> COMMA hyper_expression handle_call_param call_params1 .)


state 279

    (29) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON . type SEMICOLON
    (146) type -> . INT
    (147) type -> . FLOAT

    INT             shift and go to state 151
    FLOAT           shift and go to state 152

    type                           shift and go to state 287

state 280

    (34) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID . set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (40) set_return_type -> .

    LBRACKET        reduce using rule 40 (set_return_type -> .)

    set_return_type                shift and go to state 288

state 281

    (35) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type . set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations
    (40) set_return_type -> .

    LBRACKET        reduce using rule 40 (set_return_type -> .)

    set_return_type                shift and go to state 289

state 282

    (43) func_type -> type .

    LBRACKET        reduce using rule 43 (func_type -> type .)


state 283

    (46) params1 -> COMMA param params1 .

    RPAREN          reduce using rule 46 (params1 -> COMMA param params1 .)


state 284

    (60) write_params1 -> COMMA write_operator expression produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 60 (write_params1 -> COMMA write_operator expression produce_write_quad write_params1 .)


state 285

    (61) write_params1 -> COMMA write_operator const_text produce_write_quad write_params1 .

    SEMICOLON       reduce using rule 61 (write_params1 -> COMMA write_operator const_text produce_write_quad write_params1 .)


state 286

    (74) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET . statements RBRACKET fill_pending_jump
    (49) statements -> . write SEMICOLON statements
    (50) statements -> . read SEMICOLON statements
    (51) statements -> . var_assignment SEMICOLON statements
    (52) statements -> . condition statements
    (53) statements -> . loop statements
    (54) statements -> . function_call SEMICOLON statements
    (55) statements -> . special_function_call SEMICOLON statements
    (56) statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (73) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_pending_jump
    (74) condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump
    (81) loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 38
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    statements                     shift and go to state 290
    write                          shift and go to state 24
    read                           shift and go to state 25
    var_assignment                 shift and go to state 26
    condition                      shift and go to state 27
    loop                           shift and go to state 28
    function_call                  shift and go to state 29
    special_function_call          shift and go to state 30
    empty                          shift and go to state 31
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 39
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 287

    (29) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type . SEMICOLON

    SEMICOLON       shift and go to state 291


state 288

    (34) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type . LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations

    LBRACKET        shift and go to state 292


state 289

    (35) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type . LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations

    LBRACKET        shift and go to state 293


state 290

    (74) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements . RBRACKET fill_pending_jump

    RBRACKET        shift and go to state 294


state 291

    (29) matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .

    VAR             reduce using rule 29 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    INSTRUCTIONS    reduce using rule 29 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    PROCEDURES      reduce using rule 29 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    BEGIN           reduce using rule 29 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RSQBRACKET      reduce using rule 29 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)
    RBRACKET        reduce using rule 29 (matrix_declaration -> ID LSQBRACKET CONST_INT RSQBRACKET LSQBRACKET CONST_INT RSQBRACKET COLON type SEMICOLON .)


state 292

    (34) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET . local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (6) local_vars_block -> . LOCALS COLON var_declarations
    (7) local_vars_block -> . empty
    (148) empty -> .

    LOCALS          shift and go to state 198
    INSTRUCTIONS    reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)

    local_vars_block               shift and go to state 295
    empty                          shift and go to state 199

state 293

    (35) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET . local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations
    (6) local_vars_block -> . LOCALS COLON var_declarations
    (7) local_vars_block -> . empty
    (148) empty -> .

    LOCALS          shift and go to state 198
    INSTRUCTIONS    reduce using rule 148 (empty -> .)
    RBRACKET        reduce using rule 148 (empty -> .)

    local_vars_block               shift and go to state 296
    empty                          shift and go to state 199

state 294

    (74) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET . fill_pending_jump
    (79) fill_pending_jump -> .

    WRITE           reduce using rule 79 (fill_pending_jump -> .)
    READ            reduce using rule 79 (fill_pending_jump -> .)
    IF              reduce using rule 79 (fill_pending_jump -> .)
    ID              reduce using rule 79 (fill_pending_jump -> .)
    MEAN            reduce using rule 79 (fill_pending_jump -> .)
    MEDIAN          reduce using rule 79 (fill_pending_jump -> .)
    MODE            reduce using rule 79 (fill_pending_jump -> .)
    STD             reduce using rule 79 (fill_pending_jump -> .)
    KURTOSIS        reduce using rule 79 (fill_pending_jump -> .)
    PLOT            reduce using rule 79 (fill_pending_jump -> .)
    DPLOT           reduce using rule 79 (fill_pending_jump -> .)
    VARIANCE        reduce using rule 79 (fill_pending_jump -> .)
    SIMMETRY        reduce using rule 79 (fill_pending_jump -> .)
    CORRELATION     reduce using rule 79 (fill_pending_jump -> .)
    DFREAD          reduce using rule 79 (fill_pending_jump -> .)
    HOMERO          reduce using rule 79 (fill_pending_jump -> .)
    MARGE           reduce using rule 79 (fill_pending_jump -> .)
    REPEAT          reduce using rule 79 (fill_pending_jump -> .)
    PROCEDURES      reduce using rule 79 (fill_pending_jump -> .)
    BEGIN           reduce using rule 79 (fill_pending_jump -> .)
    RSQBRACKET      reduce using rule 79 (fill_pending_jump -> .)
    RBRACKET        reduce using rule 79 (fill_pending_jump -> .)

    fill_pending_jump              shift and go to state 297

state 295

    (34) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block . store_curr_ip instructions_block function_rbracket function_declarations
    (39) store_curr_ip -> .

    INSTRUCTIONS    reduce using rule 39 (store_curr_ip -> .)
    RBRACKET        reduce using rule 39 (store_curr_ip -> .)

    store_curr_ip                  shift and go to state 298

state 296

    (35) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block . store_curr_ip proc_instructions_block RBRACKET function_declarations
    (39) store_curr_ip -> .

    INSTRUCTIONS    reduce using rule 39 (store_curr_ip -> .)
    RBRACKET        reduce using rule 39 (store_curr_ip -> .)

    store_curr_ip                  shift and go to state 299

state 297

    (74) condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .

    WRITE           reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    READ            reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    IF              reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    ID              reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MEAN            reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MEDIAN          reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MODE            reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    STD             reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    KURTOSIS        reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    PLOT            reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    DPLOT           reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    VARIANCE        reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    SIMMETRY        reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    CORRELATION     reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    DFREAD          reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    HOMERO          reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    MARGE           reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    REPEAT          reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    PROCEDURES      reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    BEGIN           reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    RSQBRACKET      reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)
    RBRACKET        reduce using rule 74 (condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET statements RBRACKET else LBRACKET statements RBRACKET fill_pending_jump .)


state 298

    (34) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip . instructions_block function_rbracket function_declarations
    (8) instructions_block -> . INSTRUCTIONS COLON statements
    (9) instructions_block -> . empty
    (148) empty -> .

    INSTRUCTIONS    shift and go to state 11
    RBRACKET        reduce using rule 148 (empty -> .)

    instructions_block             shift and go to state 300
    empty                          shift and go to state 12

state 299

    (35) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip . proc_instructions_block RBRACKET function_declarations
    (10) proc_instructions_block -> . INSTRUCTIONS COLON proc_statements
    (11) proc_instructions_block -> . empty
    (148) empty -> .

    INSTRUCTIONS    shift and go to state 302
    RBRACKET        reduce using rule 148 (empty -> .)

    proc_instructions_block        shift and go to state 301
    empty                          shift and go to state 303

state 300

    (34) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block . function_rbracket function_declarations
    (37) function_rbracket -> . RBRACKET

    RBRACKET        shift and go to state 305

    function_rbracket              shift and go to state 304

state 301

    (35) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block . RBRACKET function_declarations

    RBRACKET        shift and go to state 306


state 302

    (10) proc_instructions_block -> INSTRUCTIONS . COLON proc_statements

    COLON           shift and go to state 307


state 303

    (11) proc_instructions_block -> empty .

    RBRACKET        reduce using rule 11 (proc_instructions_block -> empty .)


state 304

    (34) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket . function_declarations
    (34) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (35) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations
    (36) function_declarations -> . empty
    (148) empty -> .

    PROC            shift and go to state 63
    BEGIN           reduce using rule 148 (empty -> .)

    function_declarations          shift and go to state 308
    empty                          shift and go to state 64

state 305

    (37) function_rbracket -> RBRACKET .

    PROC            reduce using rule 37 (function_rbracket -> RBRACKET .)
    BEGIN           reduce using rule 37 (function_rbracket -> RBRACKET .)


state 306

    (35) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET . function_declarations
    (34) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations
    (35) function_declarations -> . PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations
    (36) function_declarations -> . empty
    (148) empty -> .

    PROC            shift and go to state 63
    BEGIN           reduce using rule 148 (empty -> .)

    function_declarations          shift and go to state 309
    empty                          shift and go to state 64

state 307

    (10) proc_instructions_block -> INSTRUCTIONS COLON . proc_statements
    (12) proc_statements -> . write SEMICOLON proc_statements
    (13) proc_statements -> . read SEMICOLON proc_statements
    (14) proc_statements -> . var_assignment SEMICOLON proc_statements
    (15) proc_statements -> . proc_condition proc_statements
    (16) proc_statements -> . proc_loop proc_statements
    (17) proc_statements -> . function_call SEMICOLON proc_statements
    (18) proc_statements -> . special_function_call SEMICOLON proc_statements
    (19) proc_statements -> . return expression return_semicolon proc_statements
    (20) proc_statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (75) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (82) proc_loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (41) return -> . RETURN
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 320
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RETURN          shift and go to state 322
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    proc_statements                shift and go to state 310
    write                          shift and go to state 311
    read                           shift and go to state 312
    var_assignment                 shift and go to state 313
    proc_condition                 shift and go to state 314
    proc_loop                      shift and go to state 315
    function_call                  shift and go to state 316
    special_function_call          shift and go to state 317
    return                         shift and go to state 318
    empty                          shift and go to state 319
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 321
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 308

    (34) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations .

    BEGIN           reduce using rule 34 (function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON VOID set_return_type LBRACKET local_vars_block store_curr_ip instructions_block function_rbracket function_declarations .)


state 309

    (35) function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations .

    BEGIN           reduce using rule 35 (function_declarations -> PROC ID proc_scope_init LPAREN params0 RPAREN COLON func_type set_return_type LBRACKET local_vars_block store_curr_ip proc_instructions_block RBRACKET function_declarations .)


state 310

    (10) proc_instructions_block -> INSTRUCTIONS COLON proc_statements .

    RBRACKET        reduce using rule 10 (proc_instructions_block -> INSTRUCTIONS COLON proc_statements .)


state 311

    (12) proc_statements -> write . SEMICOLON proc_statements

    SEMICOLON       shift and go to state 323


state 312

    (13) proc_statements -> read . SEMICOLON proc_statements

    SEMICOLON       shift and go to state 324


state 313

    (14) proc_statements -> var_assignment . SEMICOLON proc_statements

    SEMICOLON       shift and go to state 325


state 314

    (15) proc_statements -> proc_condition . proc_statements
    (12) proc_statements -> . write SEMICOLON proc_statements
    (13) proc_statements -> . read SEMICOLON proc_statements
    (14) proc_statements -> . var_assignment SEMICOLON proc_statements
    (15) proc_statements -> . proc_condition proc_statements
    (16) proc_statements -> . proc_loop proc_statements
    (17) proc_statements -> . function_call SEMICOLON proc_statements
    (18) proc_statements -> . special_function_call SEMICOLON proc_statements
    (19) proc_statements -> . return expression return_semicolon proc_statements
    (20) proc_statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (75) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (82) proc_loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (41) return -> . RETURN
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 320
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RETURN          shift and go to state 322
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    proc_condition                 shift and go to state 314
    proc_statements                shift and go to state 326
    write                          shift and go to state 311
    read                           shift and go to state 312
    var_assignment                 shift and go to state 313
    proc_loop                      shift and go to state 315
    function_call                  shift and go to state 316
    special_function_call          shift and go to state 317
    return                         shift and go to state 318
    empty                          shift and go to state 319
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 321
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 315

    (16) proc_statements -> proc_loop . proc_statements
    (12) proc_statements -> . write SEMICOLON proc_statements
    (13) proc_statements -> . read SEMICOLON proc_statements
    (14) proc_statements -> . var_assignment SEMICOLON proc_statements
    (15) proc_statements -> . proc_condition proc_statements
    (16) proc_statements -> . proc_loop proc_statements
    (17) proc_statements -> . function_call SEMICOLON proc_statements
    (18) proc_statements -> . special_function_call SEMICOLON proc_statements
    (19) proc_statements -> . return expression return_semicolon proc_statements
    (20) proc_statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (75) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (82) proc_loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (41) return -> . RETURN
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 320
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RETURN          shift and go to state 322
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    proc_loop                      shift and go to state 315
    proc_statements                shift and go to state 327
    write                          shift and go to state 311
    read                           shift and go to state 312
    var_assignment                 shift and go to state 313
    proc_condition                 shift and go to state 314
    function_call                  shift and go to state 316
    special_function_call          shift and go to state 317
    return                         shift and go to state 318
    empty                          shift and go to state 319
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 321
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 316

    (17) proc_statements -> function_call . SEMICOLON proc_statements

    SEMICOLON       shift and go to state 328


state 317

    (18) proc_statements -> special_function_call . SEMICOLON proc_statements

    SEMICOLON       shift and go to state 329


state 318

    (19) proc_statements -> return . expression return_semicolon proc_statements
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    expression                     shift and go to state 330
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 319

    (20) proc_statements -> empty .

    RBRACKET        reduce using rule 20 (proc_statements -> empty .)


state 320

    (75) proc_condition -> IF . cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> IF . cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (77) cond_lparen -> . LPAREN

    LPAREN          shift and go to state 79

    cond_lparen                    shift and go to state 331

state 321

    (82) proc_loop -> repeat . cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (77) cond_lparen -> . LPAREN

    LPAREN          shift and go to state 79

    cond_lparen                    shift and go to state 332

state 322

    (41) return -> RETURN .

    LPAREN          reduce using rule 41 (return -> RETURN .)
    ID              reduce using rule 41 (return -> RETURN .)
    CONST_INT       reduce using rule 41 (return -> RETURN .)
    CONST_FLOAT     reduce using rule 41 (return -> RETURN .)
    MEAN            reduce using rule 41 (return -> RETURN .)
    MEDIAN          reduce using rule 41 (return -> RETURN .)
    MODE            reduce using rule 41 (return -> RETURN .)
    STD             reduce using rule 41 (return -> RETURN .)
    KURTOSIS        reduce using rule 41 (return -> RETURN .)
    PLOT            reduce using rule 41 (return -> RETURN .)
    DPLOT           reduce using rule 41 (return -> RETURN .)
    VARIANCE        reduce using rule 41 (return -> RETURN .)
    SIMMETRY        reduce using rule 41 (return -> RETURN .)
    CORRELATION     reduce using rule 41 (return -> RETURN .)
    DFREAD          reduce using rule 41 (return -> RETURN .)
    HOMERO          reduce using rule 41 (return -> RETURN .)
    MARGE           reduce using rule 41 (return -> RETURN .)


state 323

    (12) proc_statements -> write SEMICOLON . proc_statements
    (12) proc_statements -> . write SEMICOLON proc_statements
    (13) proc_statements -> . read SEMICOLON proc_statements
    (14) proc_statements -> . var_assignment SEMICOLON proc_statements
    (15) proc_statements -> . proc_condition proc_statements
    (16) proc_statements -> . proc_loop proc_statements
    (17) proc_statements -> . function_call SEMICOLON proc_statements
    (18) proc_statements -> . special_function_call SEMICOLON proc_statements
    (19) proc_statements -> . return expression return_semicolon proc_statements
    (20) proc_statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (75) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (82) proc_loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (41) return -> . RETURN
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 320
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RETURN          shift and go to state 322
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    write                          shift and go to state 311
    proc_statements                shift and go to state 333
    read                           shift and go to state 312
    var_assignment                 shift and go to state 313
    proc_condition                 shift and go to state 314
    proc_loop                      shift and go to state 315
    function_call                  shift and go to state 316
    special_function_call          shift and go to state 317
    return                         shift and go to state 318
    empty                          shift and go to state 319
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 321
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 324

    (13) proc_statements -> read SEMICOLON . proc_statements
    (12) proc_statements -> . write SEMICOLON proc_statements
    (13) proc_statements -> . read SEMICOLON proc_statements
    (14) proc_statements -> . var_assignment SEMICOLON proc_statements
    (15) proc_statements -> . proc_condition proc_statements
    (16) proc_statements -> . proc_loop proc_statements
    (17) proc_statements -> . function_call SEMICOLON proc_statements
    (18) proc_statements -> . special_function_call SEMICOLON proc_statements
    (19) proc_statements -> . return expression return_semicolon proc_statements
    (20) proc_statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (75) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (82) proc_loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (41) return -> . RETURN
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 320
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RETURN          shift and go to state 322
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    read                           shift and go to state 312
    proc_statements                shift and go to state 334
    write                          shift and go to state 311
    var_assignment                 shift and go to state 313
    proc_condition                 shift and go to state 314
    proc_loop                      shift and go to state 315
    function_call                  shift and go to state 316
    special_function_call          shift and go to state 317
    return                         shift and go to state 318
    empty                          shift and go to state 319
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 321
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 325

    (14) proc_statements -> var_assignment SEMICOLON . proc_statements
    (12) proc_statements -> . write SEMICOLON proc_statements
    (13) proc_statements -> . read SEMICOLON proc_statements
    (14) proc_statements -> . var_assignment SEMICOLON proc_statements
    (15) proc_statements -> . proc_condition proc_statements
    (16) proc_statements -> . proc_loop proc_statements
    (17) proc_statements -> . function_call SEMICOLON proc_statements
    (18) proc_statements -> . special_function_call SEMICOLON proc_statements
    (19) proc_statements -> . return expression return_semicolon proc_statements
    (20) proc_statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (75) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (82) proc_loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (41) return -> . RETURN
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 320
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RETURN          shift and go to state 322
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    var_assignment                 shift and go to state 313
    proc_statements                shift and go to state 335
    write                          shift and go to state 311
    read                           shift and go to state 312
    proc_condition                 shift and go to state 314
    proc_loop                      shift and go to state 315
    function_call                  shift and go to state 316
    special_function_call          shift and go to state 317
    return                         shift and go to state 318
    empty                          shift and go to state 319
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 321
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 326

    (15) proc_statements -> proc_condition proc_statements .

    RBRACKET        reduce using rule 15 (proc_statements -> proc_condition proc_statements .)


state 327

    (16) proc_statements -> proc_loop proc_statements .

    RBRACKET        reduce using rule 16 (proc_statements -> proc_loop proc_statements .)


state 328

    (17) proc_statements -> function_call SEMICOLON . proc_statements
    (12) proc_statements -> . write SEMICOLON proc_statements
    (13) proc_statements -> . read SEMICOLON proc_statements
    (14) proc_statements -> . var_assignment SEMICOLON proc_statements
    (15) proc_statements -> . proc_condition proc_statements
    (16) proc_statements -> . proc_loop proc_statements
    (17) proc_statements -> . function_call SEMICOLON proc_statements
    (18) proc_statements -> . special_function_call SEMICOLON proc_statements
    (19) proc_statements -> . return expression return_semicolon proc_statements
    (20) proc_statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (75) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (82) proc_loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (41) return -> . RETURN
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 320
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RETURN          shift and go to state 322
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    function_call                  shift and go to state 316
    proc_statements                shift and go to state 336
    write                          shift and go to state 311
    read                           shift and go to state 312
    var_assignment                 shift and go to state 313
    proc_condition                 shift and go to state 314
    proc_loop                      shift and go to state 315
    special_function_call          shift and go to state 317
    return                         shift and go to state 318
    empty                          shift and go to state 319
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 321
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 329

    (18) proc_statements -> special_function_call SEMICOLON . proc_statements
    (12) proc_statements -> . write SEMICOLON proc_statements
    (13) proc_statements -> . read SEMICOLON proc_statements
    (14) proc_statements -> . var_assignment SEMICOLON proc_statements
    (15) proc_statements -> . proc_condition proc_statements
    (16) proc_statements -> . proc_loop proc_statements
    (17) proc_statements -> . function_call SEMICOLON proc_statements
    (18) proc_statements -> . special_function_call SEMICOLON proc_statements
    (19) proc_statements -> . return expression return_semicolon proc_statements
    (20) proc_statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (75) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (82) proc_loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (41) return -> . RETURN
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 320
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RETURN          shift and go to state 322
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    special_function_call          shift and go to state 317
    proc_statements                shift and go to state 337
    write                          shift and go to state 311
    read                           shift and go to state 312
    var_assignment                 shift and go to state 313
    proc_condition                 shift and go to state 314
    proc_loop                      shift and go to state 315
    function_call                  shift and go to state 316
    return                         shift and go to state 318
    empty                          shift and go to state 319
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 321
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 330

    (19) proc_statements -> return expression . return_semicolon proc_statements
    (115) expression -> expression . ADD push_operator expression
    (116) expression -> expression . SUB push_operator expression
    (42) return_semicolon -> . SEMICOLON

    ADD             shift and go to state 157
    SUB             shift and go to state 158
    SEMICOLON       shift and go to state 339

    return_semicolon               shift and go to state 338

state 331

    (75) proc_condition -> IF cond_lparen . hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> IF cond_lparen . hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    hyper_expression               shift and go to state 340
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 332

    (82) proc_loop -> repeat cond_lparen . hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (107) hyper_expression -> . hyper_expression AND push_operator hyper_expression
    (108) hyper_expression -> . hyper_expression OR push_operator hyper_expression
    (109) hyper_expression -> . super_expression produce_hyperexp_quad
    (110) super_expression -> . super_expression LTHAN push_operator super_expression
    (111) super_expression -> . super_expression GTHAN push_operator super_expression
    (112) super_expression -> . super_expression EQUAL push_operator super_expression
    (113) super_expression -> . super_expression DIFFERENT push_operator super_expression
    (114) super_expression -> . expression produce_superexp_quad
    (115) expression -> . expression ADD push_operator expression
    (116) expression -> . expression SUB push_operator expression
    (117) expression -> . term produce_exp_quad
    (118) term -> . term MUL push_operator term
    (119) term -> . term DIV push_operator term
    (120) term -> . factor produce_term_quad
    (126) factor -> . identifier
    (127) factor -> . const_int
    (128) factor -> . const_float
    (129) factor -> . LPAREN push_cap expression RPAREN pop_cap
    (130) factor -> . array_access
    (131) factor -> . matrix_access
    (132) factor -> . function_call
    (133) factor -> . special_function_call
    (134) identifier -> . ID
    (135) const_int -> . CONST_INT
    (136) const_float -> . CONST_FLOAT
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE

    LPAREN          shift and go to state 115
    ID              shift and go to state 120
    CONST_INT       shift and go to state 121
    CONST_FLOAT     shift and go to state 122
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53

    hyper_expression               shift and go to state 341
    super_expression               shift and go to state 128
    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 111
    identifier                     shift and go to state 112
    const_int                      shift and go to state 113
    const_float                    shift and go to state 114
    array_access                   shift and go to state 116
    matrix_access                  shift and go to state 117
    function_call                  shift and go to state 118
    special_function_call          shift and go to state 119

state 333

    (12) proc_statements -> write SEMICOLON proc_statements .

    RBRACKET        reduce using rule 12 (proc_statements -> write SEMICOLON proc_statements .)


state 334

    (13) proc_statements -> read SEMICOLON proc_statements .

    RBRACKET        reduce using rule 13 (proc_statements -> read SEMICOLON proc_statements .)


state 335

    (14) proc_statements -> var_assignment SEMICOLON proc_statements .

    RBRACKET        reduce using rule 14 (proc_statements -> var_assignment SEMICOLON proc_statements .)


state 336

    (17) proc_statements -> function_call SEMICOLON proc_statements .

    RBRACKET        reduce using rule 17 (proc_statements -> function_call SEMICOLON proc_statements .)


state 337

    (18) proc_statements -> special_function_call SEMICOLON proc_statements .

    RBRACKET        reduce using rule 18 (proc_statements -> special_function_call SEMICOLON proc_statements .)


state 338

    (19) proc_statements -> return expression return_semicolon . proc_statements
    (12) proc_statements -> . write SEMICOLON proc_statements
    (13) proc_statements -> . read SEMICOLON proc_statements
    (14) proc_statements -> . var_assignment SEMICOLON proc_statements
    (15) proc_statements -> . proc_condition proc_statements
    (16) proc_statements -> . proc_loop proc_statements
    (17) proc_statements -> . function_call SEMICOLON proc_statements
    (18) proc_statements -> . special_function_call SEMICOLON proc_statements
    (19) proc_statements -> . return expression return_semicolon proc_statements
    (20) proc_statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (75) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (82) proc_loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (41) return -> . RETURN
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 320
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RETURN          shift and go to state 322
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    return                         shift and go to state 318
    proc_statements                shift and go to state 342
    write                          shift and go to state 311
    read                           shift and go to state 312
    var_assignment                 shift and go to state 313
    proc_condition                 shift and go to state 314
    proc_loop                      shift and go to state 315
    function_call                  shift and go to state 316
    special_function_call          shift and go to state 317
    empty                          shift and go to state 319
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 321
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 339

    (42) return_semicolon -> SEMICOLON .

    WRITE           reduce using rule 42 (return_semicolon -> SEMICOLON .)
    READ            reduce using rule 42 (return_semicolon -> SEMICOLON .)
    IF              reduce using rule 42 (return_semicolon -> SEMICOLON .)
    ID              reduce using rule 42 (return_semicolon -> SEMICOLON .)
    MEAN            reduce using rule 42 (return_semicolon -> SEMICOLON .)
    MEDIAN          reduce using rule 42 (return_semicolon -> SEMICOLON .)
    MODE            reduce using rule 42 (return_semicolon -> SEMICOLON .)
    STD             reduce using rule 42 (return_semicolon -> SEMICOLON .)
    KURTOSIS        reduce using rule 42 (return_semicolon -> SEMICOLON .)
    PLOT            reduce using rule 42 (return_semicolon -> SEMICOLON .)
    DPLOT           reduce using rule 42 (return_semicolon -> SEMICOLON .)
    VARIANCE        reduce using rule 42 (return_semicolon -> SEMICOLON .)
    SIMMETRY        reduce using rule 42 (return_semicolon -> SEMICOLON .)
    CORRELATION     reduce using rule 42 (return_semicolon -> SEMICOLON .)
    DFREAD          reduce using rule 42 (return_semicolon -> SEMICOLON .)
    HOMERO          reduce using rule 42 (return_semicolon -> SEMICOLON .)
    MARGE           reduce using rule 42 (return_semicolon -> SEMICOLON .)
    RETURN          reduce using rule 42 (return_semicolon -> SEMICOLON .)
    REPEAT          reduce using rule 42 (return_semicolon -> SEMICOLON .)
    RBRACKET        reduce using rule 42 (return_semicolon -> SEMICOLON .)


state 340

    (75) proc_condition -> IF cond_lparen hyper_expression . cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> IF cond_lparen hyper_expression . cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (107) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (108) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (78) cond_rparen -> . RPAREN

    AND             shift and go to state 170
    OR              shift and go to state 171
    RPAREN          shift and go to state 172

    cond_rparen                    shift and go to state 343

state 341

    (82) proc_loop -> repeat cond_lparen hyper_expression . cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (107) hyper_expression -> hyper_expression . AND push_operator hyper_expression
    (108) hyper_expression -> hyper_expression . OR push_operator hyper_expression
    (78) cond_rparen -> . RPAREN

    AND             shift and go to state 170
    OR              shift and go to state 171
    RPAREN          shift and go to state 172

    cond_rparen                    shift and go to state 344

state 342

    (19) proc_statements -> return expression return_semicolon proc_statements .

    RBRACKET        reduce using rule 19 (proc_statements -> return expression return_semicolon proc_statements .)


state 343

    (75) proc_condition -> IF cond_lparen hyper_expression cond_rparen . LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> IF cond_lparen hyper_expression cond_rparen . LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump

    LBRACKET        shift and go to state 345


state 344

    (82) proc_loop -> repeat cond_lparen hyper_expression cond_rparen . LBRACKET proc_statements RBRACKET fill_returning_jump

    LBRACKET        shift and go to state 346


state 345

    (75) proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET . proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET . proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (12) proc_statements -> . write SEMICOLON proc_statements
    (13) proc_statements -> . read SEMICOLON proc_statements
    (14) proc_statements -> . var_assignment SEMICOLON proc_statements
    (15) proc_statements -> . proc_condition proc_statements
    (16) proc_statements -> . proc_loop proc_statements
    (17) proc_statements -> . function_call SEMICOLON proc_statements
    (18) proc_statements -> . special_function_call SEMICOLON proc_statements
    (19) proc_statements -> . return expression return_semicolon proc_statements
    (20) proc_statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (75) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (82) proc_loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (41) return -> . RETURN
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 320
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RETURN          shift and go to state 322
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    proc_statements                shift and go to state 347
    write                          shift and go to state 311
    read                           shift and go to state 312
    var_assignment                 shift and go to state 313
    proc_condition                 shift and go to state 314
    proc_loop                      shift and go to state 315
    function_call                  shift and go to state 316
    special_function_call          shift and go to state 317
    return                         shift and go to state 318
    empty                          shift and go to state 319
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 321
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 346

    (82) proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET . proc_statements RBRACKET fill_returning_jump
    (12) proc_statements -> . write SEMICOLON proc_statements
    (13) proc_statements -> . read SEMICOLON proc_statements
    (14) proc_statements -> . var_assignment SEMICOLON proc_statements
    (15) proc_statements -> . proc_condition proc_statements
    (16) proc_statements -> . proc_loop proc_statements
    (17) proc_statements -> . function_call SEMICOLON proc_statements
    (18) proc_statements -> . special_function_call SEMICOLON proc_statements
    (19) proc_statements -> . return expression return_semicolon proc_statements
    (20) proc_statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (75) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (82) proc_loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (41) return -> . RETURN
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 320
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RETURN          shift and go to state 322
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    repeat                         shift and go to state 321
    proc_statements                shift and go to state 348
    write                          shift and go to state 311
    read                           shift and go to state 312
    var_assignment                 shift and go to state 313
    proc_condition                 shift and go to state 314
    proc_loop                      shift and go to state 315
    function_call                  shift and go to state 316
    special_function_call          shift and go to state 317
    return                         shift and go to state 318
    empty                          shift and go to state 319
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 347

    (75) proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements . RBRACKET fill_pending_jump
    (76) proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements . RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump

    RBRACKET        shift and go to state 349


state 348

    (82) proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements . RBRACKET fill_returning_jump

    RBRACKET        shift and go to state 350


state 349

    (75) proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET . fill_pending_jump
    (76) proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET . else LBRACKET proc_statements RBRACKET fill_pending_jump
    (79) fill_pending_jump -> .
    (80) else -> . ELSE

    WRITE           reduce using rule 79 (fill_pending_jump -> .)
    READ            reduce using rule 79 (fill_pending_jump -> .)
    IF              reduce using rule 79 (fill_pending_jump -> .)
    ID              reduce using rule 79 (fill_pending_jump -> .)
    MEAN            reduce using rule 79 (fill_pending_jump -> .)
    MEDIAN          reduce using rule 79 (fill_pending_jump -> .)
    MODE            reduce using rule 79 (fill_pending_jump -> .)
    STD             reduce using rule 79 (fill_pending_jump -> .)
    KURTOSIS        reduce using rule 79 (fill_pending_jump -> .)
    PLOT            reduce using rule 79 (fill_pending_jump -> .)
    DPLOT           reduce using rule 79 (fill_pending_jump -> .)
    VARIANCE        reduce using rule 79 (fill_pending_jump -> .)
    SIMMETRY        reduce using rule 79 (fill_pending_jump -> .)
    CORRELATION     reduce using rule 79 (fill_pending_jump -> .)
    DFREAD          reduce using rule 79 (fill_pending_jump -> .)
    HOMERO          reduce using rule 79 (fill_pending_jump -> .)
    MARGE           reduce using rule 79 (fill_pending_jump -> .)
    RETURN          reduce using rule 79 (fill_pending_jump -> .)
    REPEAT          reduce using rule 79 (fill_pending_jump -> .)
    RBRACKET        reduce using rule 79 (fill_pending_jump -> .)
    ELSE            shift and go to state 276

    fill_pending_jump              shift and go to state 351
    else                           shift and go to state 352

state 350

    (82) proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET . fill_returning_jump
    (84) fill_returning_jump -> .

    WRITE           reduce using rule 84 (fill_returning_jump -> .)
    READ            reduce using rule 84 (fill_returning_jump -> .)
    IF              reduce using rule 84 (fill_returning_jump -> .)
    ID              reduce using rule 84 (fill_returning_jump -> .)
    MEAN            reduce using rule 84 (fill_returning_jump -> .)
    MEDIAN          reduce using rule 84 (fill_returning_jump -> .)
    MODE            reduce using rule 84 (fill_returning_jump -> .)
    STD             reduce using rule 84 (fill_returning_jump -> .)
    KURTOSIS        reduce using rule 84 (fill_returning_jump -> .)
    PLOT            reduce using rule 84 (fill_returning_jump -> .)
    DPLOT           reduce using rule 84 (fill_returning_jump -> .)
    VARIANCE        reduce using rule 84 (fill_returning_jump -> .)
    SIMMETRY        reduce using rule 84 (fill_returning_jump -> .)
    CORRELATION     reduce using rule 84 (fill_returning_jump -> .)
    DFREAD          reduce using rule 84 (fill_returning_jump -> .)
    HOMERO          reduce using rule 84 (fill_returning_jump -> .)
    MARGE           reduce using rule 84 (fill_returning_jump -> .)
    RETURN          reduce using rule 84 (fill_returning_jump -> .)
    REPEAT          reduce using rule 84 (fill_returning_jump -> .)
    RBRACKET        reduce using rule 84 (fill_returning_jump -> .)

    fill_returning_jump            shift and go to state 353

state 351

    (75) proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .

    WRITE           reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    READ            reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    IF              reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    ID              reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    MEAN            reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    MEDIAN          reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    MODE            reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    STD             reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    KURTOSIS        reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    PLOT            reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    DPLOT           reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    VARIANCE        reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    SIMMETRY        reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    CORRELATION     reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    DFREAD          reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    HOMERO          reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    MARGE           reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    RETURN          reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    REPEAT          reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)
    RBRACKET        reduce using rule 75 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump .)


state 352

    (76) proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else . LBRACKET proc_statements RBRACKET fill_pending_jump

    LBRACKET        shift and go to state 354


state 353

    (82) proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .

    WRITE           reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    READ            reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    IF              reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    ID              reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    MEAN            reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    MEDIAN          reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    MODE            reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    STD             reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    KURTOSIS        reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    PLOT            reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    DPLOT           reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    VARIANCE        reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    SIMMETRY        reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    CORRELATION     reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    DFREAD          reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    HOMERO          reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    MARGE           reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    RETURN          reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    REPEAT          reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)
    RBRACKET        reduce using rule 82 (proc_loop -> repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump .)


state 354

    (76) proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET . proc_statements RBRACKET fill_pending_jump
    (12) proc_statements -> . write SEMICOLON proc_statements
    (13) proc_statements -> . read SEMICOLON proc_statements
    (14) proc_statements -> . var_assignment SEMICOLON proc_statements
    (15) proc_statements -> . proc_condition proc_statements
    (16) proc_statements -> . proc_loop proc_statements
    (17) proc_statements -> . function_call SEMICOLON proc_statements
    (18) proc_statements -> . special_function_call SEMICOLON proc_statements
    (19) proc_statements -> . return expression return_semicolon proc_statements
    (20) proc_statements -> . empty
    (57) write -> . WRITE write_params0
    (66) read -> . READ push_operator identifier
    (67) var_assignment -> . simple_assignment
    (68) var_assignment -> . array_assignment
    (69) var_assignment -> . matrix_assignment
    (75) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_pending_jump
    (76) proc_condition -> . IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump
    (82) proc_loop -> . repeat cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET fill_returning_jump
    (85) function_call -> . ID function_call_check function_call_lparen call_params0 function_call_rparen
    (94) special_function_call -> . MEAN LPAREN call_params0 RPAREN
    (95) special_function_call -> . MEDIAN LPAREN call_params0 RPAREN
    (96) special_function_call -> . MODE LPAREN call_params0 RPAREN
    (97) special_function_call -> . STD LPAREN call_params0 RPAREN
    (98) special_function_call -> . KURTOSIS LPAREN call_params0 RPAREN
    (99) special_function_call -> . PLOT LPAREN call_params0 RPAREN
    (100) special_function_call -> . DPLOT LPAREN call_params0 RPAREN
    (101) special_function_call -> . VARIANCE LPAREN call_params0 RPAREN
    (102) special_function_call -> . SIMMETRY LPAREN call_params0 RPAREN
    (103) special_function_call -> . CORRELATION LPAREN call_params0 RPAREN
    (104) special_function_call -> . DFREAD LPAREN CONST_TEXT RPAREN
    (105) special_function_call -> . HOMERO
    (106) special_function_call -> . MARGE
    (41) return -> . RETURN
    (148) empty -> .
    (70) simple_assignment -> . identifier ASSIGN push_operator expression
    (71) array_assignment -> . array_access ASSIGN push_operator expression
    (72) matrix_assignment -> . matrix_access ASSIGN push_operator expression
    (83) repeat -> . REPEAT
    (134) identifier -> . ID
    (139) array_access -> . identifier lsqbracket expression array_rsqbracket
    (140) matrix_access -> . identifier lsqbracket expression matrix_rsqbracket_1 matrix_lsqbracket_2 expression matrix_rsqbracket_2

    WRITE           shift and go to state 32
    READ            shift and go to state 33
    IF              shift and go to state 320
    ID              shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STD             shift and go to state 44
    KURTOSIS        shift and go to state 45
    PLOT            shift and go to state 46
    DPLOT           shift and go to state 47
    VARIANCE        shift and go to state 48
    SIMMETRY        shift and go to state 49
    CORRELATION     shift and go to state 50
    DFREAD          shift and go to state 51
    HOMERO          shift and go to state 52
    MARGE           shift and go to state 53
    RETURN          shift and go to state 322
    RBRACKET        reduce using rule 148 (empty -> .)
    REPEAT          shift and go to state 56

    proc_statements                shift and go to state 355
    write                          shift and go to state 311
    read                           shift and go to state 312
    var_assignment                 shift and go to state 313
    proc_condition                 shift and go to state 314
    proc_loop                      shift and go to state 315
    function_call                  shift and go to state 316
    special_function_call          shift and go to state 317
    return                         shift and go to state 318
    empty                          shift and go to state 319
    identifier                     shift and go to state 34
    simple_assignment              shift and go to state 35
    array_assignment               shift and go to state 36
    matrix_assignment              shift and go to state 37
    repeat                         shift and go to state 321
    array_access                   shift and go to state 54
    matrix_access                  shift and go to state 55

state 355

    (76) proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements . RBRACKET fill_pending_jump

    RBRACKET        shift and go to state 356


state 356

    (76) proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET . fill_pending_jump
    (79) fill_pending_jump -> .

    WRITE           reduce using rule 79 (fill_pending_jump -> .)
    READ            reduce using rule 79 (fill_pending_jump -> .)
    IF              reduce using rule 79 (fill_pending_jump -> .)
    ID              reduce using rule 79 (fill_pending_jump -> .)
    MEAN            reduce using rule 79 (fill_pending_jump -> .)
    MEDIAN          reduce using rule 79 (fill_pending_jump -> .)
    MODE            reduce using rule 79 (fill_pending_jump -> .)
    STD             reduce using rule 79 (fill_pending_jump -> .)
    KURTOSIS        reduce using rule 79 (fill_pending_jump -> .)
    PLOT            reduce using rule 79 (fill_pending_jump -> .)
    DPLOT           reduce using rule 79 (fill_pending_jump -> .)
    VARIANCE        reduce using rule 79 (fill_pending_jump -> .)
    SIMMETRY        reduce using rule 79 (fill_pending_jump -> .)
    CORRELATION     reduce using rule 79 (fill_pending_jump -> .)
    DFREAD          reduce using rule 79 (fill_pending_jump -> .)
    HOMERO          reduce using rule 79 (fill_pending_jump -> .)
    MARGE           reduce using rule 79 (fill_pending_jump -> .)
    RETURN          reduce using rule 79 (fill_pending_jump -> .)
    REPEAT          reduce using rule 79 (fill_pending_jump -> .)
    RBRACKET        reduce using rule 79 (fill_pending_jump -> .)

    fill_pending_jump              shift and go to state 357

state 357

    (76) proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .

    WRITE           reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    READ            reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    IF              reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    ID              reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    MEAN            reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    MEDIAN          reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    MODE            reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    STD             reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    KURTOSIS        reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    PLOT            reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    DPLOT           reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    VARIANCE        reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    SIMMETRY        reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    CORRELATION     reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    DFREAD          reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    HOMERO          reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    MARGE           reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    RETURN          reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    REPEAT          reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)
    RBRACKET        reduce using rule 76 (proc_condition -> IF cond_lparen hyper_expression cond_rparen LBRACKET proc_statements RBRACKET else LBRACKET proc_statements RBRACKET fill_pending_jump .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADD in state 234 resolved as shift
WARNING: shift/reduce conflict for SUB in state 234 resolved as shift
WARNING: shift/reduce conflict for ADD in state 235 resolved as shift
WARNING: shift/reduce conflict for SUB in state 235 resolved as shift
WARNING: shift/reduce conflict for MUL in state 236 resolved as shift
WARNING: shift/reduce conflict for DIV in state 236 resolved as shift
WARNING: shift/reduce conflict for MUL in state 237 resolved as shift
WARNING: shift/reduce conflict for DIV in state 237 resolved as shift
WARNING: shift/reduce conflict for AND in state 241 resolved as shift
WARNING: shift/reduce conflict for OR in state 241 resolved as shift
WARNING: shift/reduce conflict for AND in state 242 resolved as shift
WARNING: shift/reduce conflict for OR in state 242 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 243 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 243 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 243 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 243 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 244 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 244 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 244 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 244 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 245 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 245 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 245 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 245 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 246 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 246 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 246 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 246 resolved as shift
